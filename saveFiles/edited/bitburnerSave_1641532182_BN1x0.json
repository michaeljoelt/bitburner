{
    "ctor": "BitburnerSaveObject",
    "data": {
        "PlayerSave": "{\"ctor\":\"PlayerObject\",\"data\":{\"hacking\":1500,\"hp\":10,\"max_hp\":10,\"strength\":700,\"defense\":700,\"dexterity\":700,\"agility\":700,\"charisma\":700,\"intelligence\":700,\"hacking_chance_mult\":10,\"hacking_speed_mult\":10,\"hacking_money_mult\":10,\"hacking_grow_mult\":10,\"hacking_exp\":156498105891.3633,\"strength_exp\":66.66346545774293,\"defense_exp\":96.59833370469028,\"dexterity_exp\":172.7093285027828,\"agility_exp\":173.55854462326357,\"charisma_exp\":1579.339021442605,\"intelligence_exp\":0,\"hacking_mult\":10,\"strength_mult\":10,\"defense_mult\":10,\"dexterity_mult\":10,\"agility_mult\":10,\"charisma_mult\":10,\"hacking_exp_mult\":10,\"strength_exp_mult\":10,\"defense_exp_mult\":10,\"dexterity_exp_mult\":10,\"agility_exp_mult\":10,\"charisma_exp_mult\":10,\"company_rep_mult\":10,\"faction_rep_mult\":10,\"money\":591495123804000000000000000000000.0062,\"city\":\"Sector-12\",\"location\":\"Alpha Enterprises\",\"jobs\":{\"Alpha Enterprises\":\"Software Engineering Intern\"},\"companyName\":\"Alpha Enterprises\",\"currentServer\":\"home\",\"purchasedServers\":[\"pserv-0\",\"pserv-1\",\"pserv-2\",\"pserv-3\",\"pserv-7\",\"pserv-20\",\"pserv-4\",\"pserv-5\",\"pserv-6\",\"pserv-8\",\"pserv-9\",\"pserv-10\",\"pserv-11\",\"pserv-12\",\"pserv-13\",\"pserv-15\",\"pserv-16\",\"pserv-17\",\"pserv-18\",\"pserv-19\",\"pserv-14\",\"pserv-21\",\"pserv-22\",\"pserv-23\",\"pserv-24\"],\"hacknetNodes\":[{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":698596.6000051298,\"ram\":64,\"totalMoneyGenerated\":1636009239.5369427,\"name\":\"hacknet-node-0\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":698575.6000051306,\"ram\":64,\"totalMoneyGenerated\":1635971814.1591876,\"name\":\"hacknet-node-1\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":66092.39999993776,\"ram\":64,\"totalMoneyGenerated\":1620768379.1905062,\"name\":\"hacknet-node-2\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":66091.59999993775,\"ram\":64,\"totalMoneyGenerated\":1620753486.2043874,\"name\":\"hacknet-node-3\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":66090.79999993775,\"ram\":64,\"totalMoneyGenerated\":1620780206.1533916,\"name\":\"hacknet-node-4\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":66090.19999993776,\"ram\":64,\"totalMoneyGenerated\":1620786236.5643768,\"name\":\"hacknet-node-5\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":66084.19999993776,\"ram\":64,\"totalMoneyGenerated\":1620811260.3038,\"name\":\"hacknet-node-6\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":66083.59999993775,\"ram\":64,\"totalMoneyGenerated\":1620778829.6078594,\"name\":\"hacknet-node-7\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":66082.99999993776,\"ram\":64,\"totalMoneyGenerated\":1620816876.6438396,\"name\":\"hacknet-node-8\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":66082.39999993776,\"ram\":64,\"totalMoneyGenerated\":1620824149.5006642,\"name\":\"hacknet-node-9\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":66069.79999993775,\"ram\":64,\"totalMoneyGenerated\":1620839670.0309417,\"name\":\"hacknet-node-10\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":66069.19999993774,\"ram\":64,\"totalMoneyGenerated\":1620828285.5505989,\"name\":\"hacknet-node-11\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":66068.59999993775,\"ram\":64,\"totalMoneyGenerated\":1620843564.4290688,\"name\":\"hacknet-node-12\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":66067.99999993775,\"ram\":64,\"totalMoneyGenerated\":1620850997.1179178,\"name\":\"hacknet-node-13\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":66067.39999993776,\"ram\":64,\"totalMoneyGenerated\":1620887222.1828563,\"name\":\"hacknet-node-14\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":66066.59999993775,\"ram\":64,\"totalMoneyGenerated\":1620864231.1777232,\"name\":\"hacknet-node-15\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":66065.99999993775,\"ram\":64,\"totalMoneyGenerated\":1620892134.5728478,\"name\":\"hacknet-node-16\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":66065.39999993776,\"ram\":64,\"totalMoneyGenerated\":1620902915.1322722,\"name\":\"hacknet-node-17\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":66064.79999993775,\"ram\":64,\"totalMoneyGenerated\":1620937737.9193468,\"name\":\"hacknet-node-18\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":66064.19999993774,\"ram\":64,\"totalMoneyGenerated\":1620926792.7088423,\"name\":\"hacknet-node-19\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":65977.39999993773,\"ram\":64,\"totalMoneyGenerated\":1619226487.2835047,\"name\":\"hacknet-node-20\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":65976.99999993773,\"ram\":64,\"totalMoneyGenerated\":1619219370.2428243,\"name\":\"hacknet-node-21\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":65976.39999993773,\"ram\":64,\"totalMoneyGenerated\":1619241573.099298,\"name\":\"hacknet-node-22\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":65975.99999993773,\"ram\":64,\"totalMoneyGenerated\":1619244539.8965778,\"name\":\"hacknet-node-23\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":65974.79999993774,\"ram\":64,\"totalMoneyGenerated\":1619261610.7281408,\"name\":\"hacknet-node-24\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":65974.39999993773,\"ram\":64,\"totalMoneyGenerated\":1619255133.0155573,\"name\":\"hacknet-node-25\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":65973.79999993774,\"ram\":64,\"totalMoneyGenerated\":1619252286.8969803,\"name\":\"hacknet-node-26\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":65973.39999993773,\"ram\":64,\"totalMoneyGenerated\":1619271122.0364811,\"name\":\"hacknet-node-27\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":65972.79999993774,\"ram\":64,\"totalMoneyGenerated\":1619267353.136113,\"name\":\"hacknet-node-28\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":65972.19999993773,\"ram\":64,\"totalMoneyGenerated\":1619285711.9922447,\"name\":\"hacknet-node-29\"}}],\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0}}},\"factions\":[\"CyberSec\",\"Sector-12\",\"The Black Hand\",\"Aevum\",\"Netburners\"],\"factionInvitations\":[],\"queuedAugmentations\":[{\"level\":1,\"name\":\"Neuralstimulator\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"Neurotrainer I\"},{\"level\":7,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"Wired Reflexes\"},{\"level\":1,\"name\":\"Augmented Targeting I\"},{\"level\":1,\"name\":\"CashRoot Starter Kit\"},{\"level\":1,\"name\":\"Speech Processor Implant\"},{\"level\":1,\"name\":\"Augmented Targeting II\"},{\"level\":8,\"name\":\"NeuroFlux Governor\"},{\"level\":9,\"name\":\"NeuroFlux Governor\"},{\"level\":10,\"name\":\"NeuroFlux Governor\"},{\"level\":11,\"name\":\"NeuroFlux Governor\"},{\"level\":12,\"name\":\"NeuroFlux Governor\"},{\"level\":13,\"name\":\"NeuroFlux Governor\"},{\"level\":14,\"name\":\"NeuroFlux Governor\"},{\"level\":15,\"name\":\"NeuroFlux Governor\"}],\"augmentations\":[{\"level\":1,\"name\":\"Hacknet Node Core Direct-Neural Interface\"},{\"level\":1,\"name\":\"Hacknet Node Kernel Direct-Neural Interface\"},{\"level\":1,\"name\":\"Hacknet Node NIC Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node Cache Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node CPU Architecture Neural-Upload\"},{\"level\":6,\"name\":\"NeuroFlux Governor\"}],\"sourceFiles\":[],\"numPeopleKilled\":0,\"karma\":-1,\"crime_money_mult\":10,\"crime_success_mult\":10,\"isWorking\":true,\"focus\":false,\"workType\":\"Working for Company\",\"workCostMult\":4,\"workExpMult\":3,\"currentWorkFactionName\":\"\",\"currentWorkFactionDescription\":\"\",\"workHackExpGainRate\":0.079614011295075,\"workStrExpGainRate\":0,\"workDefExpGainRate\":0,\"workDexExpGainRate\":0,\"workAgiExpGainRate\":0,\"workChaExpGainRate\":0.031845604518029993,\"workRepGainRate\":0.5591108288611667,\"workMoneyGainRate\":52.54524745474949,\"workMoneyLossRate\":0,\"workHackExpGained\":1090.1068882565553,\"workStrExpGained\":0,\"workDefExpGained\":0,\"workDexExpGained\":0,\"workAgiExpGained\":0,\"workChaExpGained\":436.0427553025038,\"workRepGained\":7640.511551016584,\"workMoneyGained\":719470.5462492892,\"createProgramName\":\"\",\"createProgramReqLvl\":500,\"className\":\"\",\"crimeType\":\"\",\"timeWorked\":3404400,\"timeWorkedCreateProgram\":0,\"timeNeededToCompleteWork\":28800000,\"work_money_mult\":10,\"hacknet_node_money_mult\":2.6772533373298413,\"hacknet_node_purchase_cost_mult\":0.7202323142917649,\"hacknet_node_ram_cost_mult\":0.9414801494009999,\"hacknet_node_core_cost_mult\":0.9414801494009999,\"hacknet_node_level_cost_mult\":0.80025812699085,\"hasWseAccount\":true,\"hasTixApiAccess\":true,\"has4SData\":true,\"has4SDataTixApi\":true,\"gang\":null,\"corporation\":null,\"bladeburner\":null,\"bladeburner_max_stamina_mult\":1,\"bladeburner_stamina_gain_mult\":1,\"bladeburner_analysis_mult\":1,\"bladeburner_success_chance_mult\":1,\"sleeves\":[],\"resleeves\":[],\"sleevesFromCovenant\":0,\"bitNodeN\":1,\"lastUpdate\":1641532181523,\"totalPlaytime\":1221600800,\"playtimeSinceLastAug\":700365000,\"playtimeSinceLastBitnode\":1221600800,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-33251.99999999959,\"codingcontract\":0,\"corporation\":0,\"crime\":551990.47831252,\"gang\":0,\"hacking\":6502872669646.988,\"hacknet\":48639599216.099144,\"hacknet_expenses\":-99163521650.63858,\"hospitalization\":-4908000,\"infiltration\":0,\"sleeves\":0,\"stock\":-492160294745.03796,\"total\":591495122804.0062,\"work\":3202254.506584253,\"servers\":-3519188086100.392,\"other\":-1000000,\"augmentations\":-1849503056561.4243}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-792611.9999999726,\"codingcontract\":0,\"corporation\":0,\"crime\":551990.47831252,\"gang\":0,\"hacking\":6503128386583.151,\"hacknet\":52479929958.14742,\"hacknet_expenses\":-99826406416.10703,\"hospitalization\":-4908000,\"infiltration\":0,\"sleeves\":0,\"stock\":-492160294745.03796,\"total\":592494856141.7432,\"work\":3237795.506584115,\"servers\":-3519653516060.1147,\"other\":-6200000,\"augmentations\":-1851465132357.6304}},\"scriptProdSinceLastAug\":5660730466382.034,\"exploits\":[],\"factionWorkType\":\"Faction Hacking Work\",\"committingCrimeThruSingFn\":false,\"singFnCrimeWorkerScript\":null}}",
        "AllServersSave": "{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":4,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":false,\"ip\":\"11.9.2.0\",\"isConnectedTo\":true,\"maxRam\":65536,\"messages\":[\"hackers-starting-handbook.lit\",\"j0.msg\",\"j1.msg\",\"csec-test.msg\",\"j2.msg\",\"nitesec-test.msg\",\"j3.msg\",\"j4.msg\",\"19dfj3l1nd.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"fl1ght.exe\",\"AutoLink.exe\",\"BruteSSH.exe\",\"FTPCrack.exe\",\"DeepscanV1.exe\",\"ServerProfiler.exe\",\"relaySMTP.exe\",\"DeepscanV2.exe\",\"HTTPWorm.exe\"],\"ramUsed\":65512.19999999996,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[5859780003,1782,1782,891]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":51415.40708945026,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.748,\"onlineExpGained\":145425.41733257516,\"onlineMoneyMade\":5859780003,\"onlineRunningTime\":5339.409999997336,\"pid\":1,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[5871712325,891,2673,1782]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.751000000004,\"onlineExpGained\":136913.08724490574,\"onlineMoneyMade\":5871712325,\"onlineRunningTime\":5339.409999997336,\"pid\":2,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[40038364476,4455,2673,1782]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":182614.65333432335,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.753000000004,\"onlineExpGained\":200866.8007796892,\"onlineMoneyMade\":40038364476,\"onlineRunningTime\":5339.409999997336,\"pid\":3,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,891,1782,1782]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":105238.46886792115,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.757000000005,\"onlineExpGained\":111622.7620257322,\"onlineMoneyMade\":0,\"onlineRunningTime\":5339.409999997336,\"pid\":4,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,0,2673,891]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":84773.53554852925,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.759000000005,\"onlineExpGained\":89916.3203021752,\"onlineMoneyMade\":0,\"onlineRunningTime\":5339.409999997336,\"pid\":5,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[6123988575,891,2673,1782]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":88384.99787098738,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.761,\"onlineExpGained\":124995.82512216856,\"onlineMoneyMade\":6123988575,\"onlineRunningTime\":5339.409999997336,\"pid\":6,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[5355608544,891,3564,2673]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":155101.24353587918,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.763,\"onlineExpGained\":150801.24257599993,\"onlineMoneyMade\":5355608544,\"onlineRunningTime\":5339.409999997336,\"pid\":7,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[4598908375,1782,3564,1782]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":72735.34459505879,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.765,\"onlineExpGained\":124293.71833052559,\"onlineMoneyMade\":4598908375,\"onlineRunningTime\":5339.409999997336,\"pid\":8,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[5441140980,1782,1782,891]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":138247.77188556312,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.766,\"onlineExpGained\":89610.00477149087,\"onlineMoneyMade\":5441140980,\"onlineRunningTime\":5339.409999997336,\"pid\":9,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,35640,0,15147]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":73713.4385934375,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.769,\"onlineExpGained\":85536,\"onlineMoneyMade\":0,\"onlineRunningTime\":5339.409999997336,\"pid\":10,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[11393114535,891,3564,1782]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":75142.99183064066,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.771,\"onlineExpGained\":123980.14875084514,\"onlineMoneyMade\":11393114535,\"onlineRunningTime\":5339.409999997336,\"pid\":11,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[6105297900,5346,13365,6237]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":255459.50014544145,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.773,\"onlineExpGained\":303930.47223401436,\"onlineMoneyMade\":6105297900,\"onlineRunningTime\":5339.409999997336,\"pid\":12,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[1125000000,4455,10692,7128]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":308458.37524704356,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.776000000005,\"onlineExpGained\":257262.59201639667,\"onlineMoneyMade\":1125000000,\"onlineRunningTime\":5339.409999997336,\"pid\":13,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[2400000000,8019,32967,11583]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":433857.4388853422,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.777,\"onlineExpGained\":463307.713243769,\"onlineMoneyMade\":2400000000,\"onlineRunningTime\":5339.409999997336,\"pid\":14,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[0,2673,6237,3564]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":121394.31845023531,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.779,\"onlineExpGained\":171678.21343777844,\"onlineMoneyMade\":0,\"onlineRunningTime\":5339.409999997336,\"pid\":15,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,891,6237,891]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":61900.98348173635,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.783,\"onlineExpGained\":131312.35910463464,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":5339.409999997336,\"pid\":16,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,33858,0,24948]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107735.05208812498,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.784,\"onlineExpGained\":105583.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":5339.409999997336,\"pid\":17,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,891,2673,1782]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":182614.75197427013,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.786,\"onlineExpGained\":109998.48614125834,\"onlineMoneyMade\":0,\"onlineRunningTime\":5339.409999997336,\"pid\":18,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[125000000,8910,13365,12474]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":217539.21730128737,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.787000000004,\"onlineExpGained\":314973.1211061155,\"onlineMoneyMade\":125000000,\"onlineRunningTime\":5339.409999997336,\"pid\":19,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[562500000,6237,12474,9801]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":207180.2205183409,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.791000000005,\"onlineExpGained\":288114.94798853976,\"onlineMoneyMade\":562500000,\"onlineRunningTime\":5339.409999997336,\"pid\":20,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[1500000000,7128,21384,15147]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":205784.88464684456,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.793000000005,\"onlineExpGained\":330867.6308431074,\"onlineMoneyMade\":1500000000,\"onlineRunningTime\":5339.409999997336,\"pid\":21,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[1000000000,3564,6237,6237]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":142365.44590516173,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.794,\"onlineExpGained\":184557.9464465454,\"onlineMoneyMade\":1000000000,\"onlineRunningTime\":5339.409999997336,\"pid\":22,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,12474,0,24948]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":76548.6046771875,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.796,\"onlineExpGained\":91550.25,\"onlineMoneyMade\":0,\"onlineRunningTime\":5339.409999997336,\"pid\":23,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[62500000,43659,49896,49005]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":668800.929837837,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.798,\"onlineExpGained\":859216.4654355033,\"onlineMoneyMade\":62500000,\"onlineRunningTime\":5339.409999997336,\"pid\":24,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[439250000,223641,223641,112266]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1492778.2665369152,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.799,\"onlineExpGained\":1856835.4431685228,\"onlineMoneyMade\":439250000,\"onlineRunningTime\":5339.409999997336,\"pid\":25,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[50000000,137214,139887,138996]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1578065.0395751356,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.801,\"onlineExpGained\":1941053.6744605075,\"onlineMoneyMade\":50000000,\"onlineRunningTime\":5339.409999997336,\"pid\":26,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[57500000,73953,77517,76626]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":865013.4432592237,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.802,\"onlineExpGained\":1071781.2340172357,\"onlineMoneyMade\":57500000,\"onlineRunningTime\":5339.409999997336,\"pid\":27,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[68750000,23166,29403,27621]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":460420.3351687136,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.803,\"onlineExpGained\":596873.9008455761,\"onlineMoneyMade\":68750000,\"onlineRunningTime\":5339.409999997336,\"pid\":28,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[150000000,14256,23166,20493]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":352774.1514833655,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.804000000004,\"onlineExpGained\":379371.7861499503,\"onlineMoneyMade\":150000000,\"onlineRunningTime\":5339.409999997336,\"pid\":29,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[400000000,12474,23166,18711]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":382172.0099513051,\"offlineMoneyMade\":0,\"offlineRunningTime\":61093.806000000004,\"onlineExpGained\":370710.32984515687,\"onlineMoneyMade\":400000000,\"onlineRunningTime\":5339.409999997336,\"pid\":30,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"stocks.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":280308827745.3286,\"onlineRunningTime\":4070.009999998491,\"pid\":926,\"ramUsage\":23.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nName: autoHack.js\\nLast updated: 2022-01-02 02:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///55cab94f-07d8-499b-9802-b128242c53cc\"}],\"ramUsage\":2.45,\"server\":\"home\",\"_hash\":\"c683346f1fb81c6d28ca083c152c3c1d91fefab8d02f34af1f23c62d38bc0955\",\"moduleSequenceNumber\":174,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nexport async function main(ns) {\\n\\tvar scriptName = \\\"autoHack.js\\\";\\n\\tvar vers = \\\"v1\\\";\\n\\tvar host = ns.getHostname();\\n\\tvar scriptRam = 2.6;\\n\\tns.tprint(\\\"script to copy/run = \\\" + scriptName + \\\"(ram: \\\" + scriptRam + \\\")\\\");\\n\\n\\tif (ns.args.length > 0) {\\n\\t\\tvar targets = ns.args;\\n\\t}\\n\\telse {\\n\\t\\tvar allServers = ns.scan();\\n\\t\\tvar targets = [];\\n\\n\\t\\tfor (let i = 0; i < allServers.length; i++) {\\n\\t\\t\\tvar server = allServers[i];\\n\\t\\t\\tif (!server.startsWith(\\\"pserv\\\") && !server.startsWith(\\\"undefined\\\")) {\\n\\t\\t\\t\\ttargets.push(server);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t}\\n\\tns.tprint(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": targets = \\\" + targets);\\n\\n\\tfor (let i = 0; i < targets.length; i++) {\\n\\t\\tvar target = targets[i];\\n\\t\\tif (ns.getServerNumPortsRequired(target) == 0) {\\n\\t\\t\\tns.kill(scriptName, target);\\n\\t\\t\\tvar targetRam = ns.getServerMaxRam(target) - ns.getServerUsedRam(target);\\n\\t\\t\\tawait ns.scp(scriptName, target);\\n\\t\\t\\tvar threads = Math.floor(targetRam / scriptRam);\\n\\t\\t\\tns.tprint(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": nuking \\\" + target);\\n\\t\\t\\tns.nuke(target);\\n\\t\\t\\tif (threads > 0) {\\n\\t\\t\\t\\tns.tprint(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running \\\" + scriptName + \\\" on \\\" + target);\\n\\t\\t\\t\\tns.exec(scriptName, target, threads);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tns.tprint(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\"not enough ram (\\\" + targetRam + \\\")\\\");\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t}\\n\\t\\tawait ns.sleep(100000)\\n}\",\"filename\":\"copyRun_autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"copyRun_autoHack.js\",\"url\":\"blob:file:///a25a3362-bb32-4744-8ec1-33d8698ce906\"}],\"ramUsage\":4.5,\"server\":\"home\",\"_hash\":\"4a0216f1dd08791fd89bc8aa70b1057f7bda35127a6fb1b9075ce8ec33f007c1\",\"moduleSequenceNumber\":74}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\n\\tvar targets = ns.args;\\n\\tns.tprint(\\\"targets = \\\" + targets);\\n\\n\\tfor (let i = 0; i < targets.length; i++) {\\n\\t\\tvar target = targets[i];\\n\\t\\tns.killall(target);\\n\\t}\\n}\",\"filename\":\"killAll.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"killAll.js\",\"url\":\"blob:file:///17f0e10c-fa86-4cbc-a924-03a0c099c743\"}],\"ramUsage\":2.1,\"server\":\"home\",\"_hash\":\"956f6d943689d201d62a4cd91cc22925f64cca50a178a48668eab3640ed9ca29\",\"moduleSequenceNumber\":75}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    var base = ns.getServer;\\n\\tns.print(\\\"base = \\\" + base);\\n\\n\\tvar scriptName = \\\"copyRun_autoHack.js\\\";\\n\\tvar scriptRam = 2.6;//ns.getScriptRam(scriptName,base);\\n\\tns.print(\\\"script to copy/run = \\\" + scriptName + \\\"(ram: \\\" + scriptRam + \\\")\\\");\\n\\nif(ns.args.length>0){\\n\\tvar targets = ns.args;\\n}\\nelse{\\n\\tvar targets = ns.scan();\\n}\\n\\tns.print(\\\"targets = \\\" + targets);\\n\\n\\tfor (let i = 0; i < targets.length; i++) {\\n\\t\\tvar target = targets[i];\\n\\t\\tns.kill(scriptName, target);\\n\\t\\tvar targetRam = ns.getServerMaxRam(target)-ns.getServerUsedRam;\\n\\t\\tawait ns.scp(scriptName, target);\\n\\t\\tvar threads = Math.floor(targetRam / scriptRam);\\n\\t\\tns.print(\\\"nuking\\\");\\n\\t\\tif(threads>0){\\n\\t\\tns.print(\\\"running \\\"+scriptName);\\n\\t\\tns.exec(\\\"NUKE.exe\\\", target); //ns.connect(targets[i]);)\\n\\t\\tns.exec(scriptName,target, threads);\\n\\t\\t}\\n\\t\\telse{\\n\\t\\t\\tns.print(\\\"not enough available ram (\\\"+targetRam+\\\")\\\")\\n\\t\\t}\\n\\n\\t}\\n}\",\"filename\":\"spread.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"spread.js\",\"url\":\"blob:file:///dc846edf-f0bc-43c8-bc3e-872a5e1f3bda\"}],\"ramUsage\":6.3,\"server\":\"home\",\"_hash\":\"bc7ab2d6e95a0bb6c5103c55da2e3386abf6de5530b050dd7993acbdac26f440\",\"moduleSequenceNumber\":76}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\n\\tlet script = \\\"autoHack.js\\\";\\n\\tlet scriptRam = ns.getScriptRam(script);\\n\\tlet targets = [\\\"joesguns\\\"];\\n\\n\\tif (ns.args.length > 0) {\\n\\t\\tlet arg = ns.args + \\\"\\\";\\n\\t\\tlet potentialTargets = arg.split(\\\" \\\");\\n\\t\\ttargets = [];\\n\\t\\tfor (let i = 0; i < potentialTargets.length; i++) {\\n\\t\\t\\tif (serverExists(potentialTargets[i]) && ns.hasRootAccess(potentialTargets[i]) && (ns.getServerRequiredHackingLevel(potentialTargets[i]) <= ns.getHackingLevel())) {\\n\\t\\t\\t\\ttargets.push(servers[i]);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tlet allServers = ns.scan();\\n\\tlet myServers = [];\\n\\n\\n\\tfor (let i = 0; i < allServers.length; i++) {\\n\\t\\tlet server = allServers[i];\\n\\n\\t\\tif (server.startsWith(\\\"pserv\\\")) {\\n\\t\\t\\tmyServers.push(server);\\n\\t\\t}\\n\\t}\\n\\n\\n\\tns.tprint(\\\"targets = \\\" + targets);\\n\\tns.tprint(\\\"my servers = \\\" + myServers);\\n\\n\\tfor (let i = 0; i < myServers.length; i++) {\\n\\t\\tlet server = myServers[i];\\n\\t\\tns.tprint(\\\"current server = \\\" + server);\\n\\t\\tns.killall(server);\\n\\t\\tawait ns.sleep(10000);\\n\\t\\tlet freeRam = ns.getServerMaxRam(server) - ns.getServerUsedRam(server);\\n\\t\\tlet threads = Math.floor(freeRam / scriptRam / targets.length);\\n\\t\\tif (threads < 1) { threads = 1; }\\n\\t\\tns.tprint(\\\"freeRam:\\\" + freeRam + \\\" ; scriptRam:\\\" + scriptRam + \\\" ; threads to use:\\\" + threads);\\n\\t\\tawait ns.scp(script, \\\"home\\\", server);\\n\\t\\tfor (let c = 0; c < targets.length; c++) {\\n\\t\\t\\tlet target = targets[c];\\n\\t\\t\\tif (!target == \\\" \\\") {\\n\\t\\t\\t\\tns.tprint(\\\"Running \\\" + script + \\\" \\\" + target + \\\" on \\\" + server + \\\"with \\\" + threads + \\\" threads\\\");\\n\\t\\t\\t\\tns.exec(script, server, threads, target);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tawait ns.sleep(1000)\\n\\t}\\n\\tawait ns.sleep(100000)\\n}\",\"filename\":\"updateServerScripts.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"updateServerScripts.js\",\"url\":\"blob:file:///c0019136-34ad-4e5c-a929-04a2950b0845\"}],\"ramUsage\":4.7,\"server\":\"home\",\"_hash\":\"22677be906b1ba3fa3e190463e5951d548e30eb6edd2ac1054ea75d35752e30c\",\"moduleSequenceNumber\":77}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/*\\nName: purchaseServers.js \\nLast updated: 2022-01-02-1741\\n*/\\nexport async function main(ns) {\\n    let script = \\\"autoHack.js\\\";\\n    // How much RAM each purchased server will have. In this case, it'll\\n    // be 8GB.\\n    let ram = 8;\\n \\n    // Iterator we'll use for our loop\\n \\n    let purchaseLimit = ns.getPurchasedServerLimit();\\n    ns.tprint(\\\"purchased server limit: \\\" + purchaseLimit);\\n    let allServers = ns.scan();\\n \\n    let serverCount = 0;\\n    //let targets = []\\n    //ns.tprint(\\\"length: \\\"+targets.length)\\n    for (let i = 0; i < allServers.length; i++) {\\n        let server = allServers[i];\\n        //ns.tprint(\\\"servername \\\"+server);\\n        if (server.startsWith(\\\"pserv\\\")) {\\n            ++serverCount;\\n        }\\n        //else{\\n        // targets = targets +\\\" \\\"+ server;\\n        //}\\n        ns.tprint(\\\"servers owned: \\\" + serverCount);\\n        //   ns.tprint(\\\"targets: \\\"+ targets);\\n    }\\n \\n \\n    ns.tprint(\\\"servers owned: \\\" + serverCount);\\n \\n    // Continuously try to purchase servers until we've reached the maximum\\n    // amount of servers\\n    while (serverCount < purchaseLimit) {\\n        // Check if we have enough money to purchase a server\\n        if (ns.getServerMoneyAvailable(\\\"home\\\") / 2 > ns.getPurchasedServerCost(ram)) {\\n            ns.print(ns.getServerMoneyAvailable(\\\"home\\\") / 2 + \\\">\\\" + ns.getPurchasedServerCost(ram));\\n            // If we have enough money, then:\\n            //  1. Purchase the server\\n            //  2. Copy our hacking script onto the newly-purchased server\\n            //  3. Run our hacking script on the newly-purchased server with 3 threads\\n            //  4. Increment our iterator to indicate that we've bought a new server\\n            let hostname = ns.purchaseServer(\\\"pserv-\\\" + serverCount, ram);\\n            ns.print(\\\"purchased \\\" + hostname);\\n            await ns.scp(script, hostname);\\n            //    await ns.scp(\\\"copyRun_autoHack.js\\\", hostname);\\n            //ns.exec(\\\"copyRun_autoHack.js \\\" + targets, hostname, 1);\\n            ns.exec(script, hostname, 1, \\\"joesguns\\\");\\n            ++serverCount;\\n        }\\n        await ns.sleep(1000);\\n    }\\n \\n    // Continuously try to upgrade servers \\n    allServers = ns.scan();\\n    let myServers = [];\\n    for (let i = 0; i < allServers.length; i++) {\\n        let server = allServers[i];\\n        if (server.startsWith(\\\"pserv\\\")) {\\n            myServers.push(server);\\n        }\\n    }\\n \\n    ns.tprint(\\\"checking servers for upgrades: \\\" + myServers);\\n    let maxRam = ns.getPurchasedServerMaxRam();\\n \\n    for (let i = 0; i < myServers.length; i++) {\\n        let server = myServers[i];\\n        let upgradedServer = 0;\\n        ns.tprint(\\\"current server = \\\" + server);\\n \\n        let serverSize = ns.getServerMaxRam(server);\\n        ns.tprint(\\\"serverSize = \\\" + serverSize);\\n        let myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n        ns.tprint(\\\"myMoney = \\\" + myMoney);\\n        for (ram = maxRam; ram > serverSize; ram = ram / 2) {\\n            if ((myMoney / 2) > ns.getPurchasedServerCost(ram)) {\\n                ns.tprint(\\\"cost of server with ram \\\" + ram + \\\": \\\" + ns.getPurchasedServerCost(ram));\\n                ns.tprint((myMoney / 2) + \\\" > \\\" + ns.getPurchasedServerCost(ram));\\n                // let killed = false;\\n                // while (killed != true) {\\n                //     killed = ns.killall(server);\\n                //     //await ns.sleep(500000);\\n                // }\\n                ns.killall(server);\\n                await ns.sleep(10000);\\n                ns.deleteServer(server);\\n                ns.purchaseServer(server, ram);\\n                ns.tprint(server + \\\" upgraded from \\\" + serverSize + \\\" to \\\" + ram);\\n                await ns.scp(script, server);\\n                ns.exec(script, server, ns.getServerMaxRam(server) / 3, \\\"joesguns\\\");\\n                upgradedServer = 1;\\n                break;\\n            }\\n        }\\n \\n        if (upgradedServer != 1) {\\n            ns.tprint(\\\"cannot afford upgrading \\\" + server + \\\" (current RAM: \\\" + serverSize + \\\" current money: \\\" + myMoney + \\\" next upgrade cost\\\" + \\\"(for \\\" + serverSize * 2 + \\\"ram)\\\" + \\\": \\\" + ns.getPurchasedServerCost(serverSize * 2));\\n        }\\n \\n        // if (upgradedServer == 1) {\\n        //     let killed = false;\\n        //     while (killed != true) {\\n        //         killed = ns.killall(server);\\n        //         ns.killall(server);\\n        //         await ns.sleep(500000);\\n        //     }\\n \\n    }\\n    await ns.sleep(1000);\\n}\",\"filename\":\"purchaseServers.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"purchaseServers.js\",\"url\":\"blob:file:///a8cd9821-4a2d-48ef-8c35-81b76907953d\"}],\"ramUsage\":9.2,\"server\":\"home\",\"_hash\":\"1e5a318258ac9cfae83bb85d4582bc445ee2e9bb5a6ebe0d34fa8cdf7dbc940d\",\"moduleSequenceNumber\":78}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n    let script = \\\"autoHack.js\\\"; //to run early on (targetting joesguns) while purchasing each server\\n    let postScript = \\\"updateServerScripts.js\\\"; //to run after complete purchases/upgrades\\n    let targets = [];\\n\\n    // Start other scripts\\n    ns.exec(\\\"purchase-server-8gb\\\", \\\"home\\\", 1);\\n\\n    // Array of all servers that don't need any ports opened\\n    // to gain root access. These have 16 GB of RAM\\n    let servers0Port = [\\\"joesguns\\\", \\\"n00dles\\\", \\\"foodnstuff\\\", \\\"sigma-cosmetics\\\", \\\"nectar-net\\\", \\\"hong-fang-tea\\\", \\\"harakiri-sushi\\\"];\\n\\n    // Array of all servers that only need 1 port opened\\n    // to gain root access. These have 32 GB of RAM\\n    let servers1Port = [\\\"neo-net\\\", \\\"zer0\\\", \\\"max-hardware\\\", \\\"iron-gym\\\", \\\"CSEC\\\"];\\n\\n    // Array of all servers that only need 2 port opened\\n    // to gain root access. \\n    let servers2Port = [\\\"omega-net\\\", \\\"silver-helix\\\", \\\"phantasy\\\", \\\"crush-fitness\\\", \\\"the-hub\\\", \\\"avmnite-02h\\\", \\\"johnson-ortho\\\"];\\n\\n    let servers3Port = [\\\"netlink\\\", \\\"catalyst\\\", \\\"comptek\\\", \\\"summit-uni\\\", \\\"rothman-uni\\\", \\\"millenium-fitness\\\", \\\"I.I.I.I\\\", \\\"rho-construction\\\"];\\n\\n    let servers4Port = [\\\"syscore\\\", \\\"lexo-corp\\\", \\\"aevum-police\\\", \\\"zb-def\\\", \\\"nova-med\\\", \\\"unitalife\\\", \\\"univ-energy\\\", \\\"alpha-ent\\\", \\\"global-pharm\\\", \\\"snap-fitness\\\"];\\n    let servers5Port = [\\\"zb-institute\\\", \\\"galactic-cyber\\\", \\\"omnia\\\", \\\"icarus\\\", \\\"taiyang-digital\\\", \\\"zeus-med\\\", \\\"infocomm\\\", \\\"aerocorp\\\", \\\"defcomm\\\", \\\"solaris\\\", \\\"deltaone\\\"];\\n\\n\\n    // Copy our scripts onto each server that requires 0 ports\\n    // to gain root access. Then use nuke() to gain admin access and\\n    // run the scripts.\\n    for (let i = 0; i < servers0Port.length; ++i) {\\n        let serv = servers0Port[i];\\n        //targets.push(serv);\\n        targets = targets + \\\" \\\" + serv;\\n\\n        await ns.scp(script, serv);\\n        ns.nuke(serv);\\n        ns.exec(script, serv, 6);\\n    }\\n\\n    // Wait until we acquire the \\\"BruteSSH.exe\\\" program\\n    while (!ns.fileExists(\\\"BruteSSH.exe\\\")) {\\n        await ns.sleep(60000);\\n    }\\n\\n    // Copy our scripts onto each server that requires 1 port\\n    // to gain root access. Then use brutessh() and nuke()\\n    // to gain admin access and run the scripts.\\n    for (let i = 0; i < servers1Port.length; ++i) {\\n        let serv = servers1Port[i];\\n        //targets.push(serv);\\n        targets = targets + \\\" \\\" + serv;\\n\\n        await ns.scp(script, serv);\\n        ns.brutessh(serv);\\n        ns.nuke(serv);\\n        ns.exec(script, serv, 12);\\n    }\\n\\n    ns.exec(postScript, \\\"home\\\", 1, targets);\\n\\n    // Wait until we acquire the \\\"BruteSSH.exe\\\" program\\n    while (!ns.fileExists(\\\"FTPCrack.exe\\\")) {\\n        await ns.sleep(60000);\\n    }\\n\\n\\n\\n    // Copy our scripts onto each server that requires 2 port\\n    // to gain root access. Then use ftpcrack(), brutessh() and nuke()\\n    // to gain admin access and run the scripts.\\n    for (let i = 0; i < servers2Port.length; ++i) {\\n        let serv = servers2Port[i];\\n        //targets.push(serv);\\n        targets = targets + \\\" \\\" + serv;\\n\\n        await ns.scp(script, serv);\\n        ns.ftpcrack(serv);\\n        ns.brutessh(serv);\\n        ns.nuke(serv);\\n        ns.exec(script, serv, 12);\\n    }\\n\\n    ns.exec(postScript, \\\"home\\\", 1, targets);\\n\\n\\n    // Wait until we acquire the \\\"BruteSSH.exe\\\" program\\n    while (!ns.fileExists(\\\"relaySMTP.exe\\\")) {\\n        await ns.sleep(60000);\\n    }\\n\\n\\n    // Copy our scripts onto each server that requires 3 port\\n    for (let i = 0; i < servers3Port.length; ++i) {\\n        let serv = servers3Port[i];\\n        targets = targets + \\\" \\\" + serv;\\n\\n        await ns.scp(script, serv);\\n        ns.ftpcrack(serv);\\n        ns.brutessh(serv);\\n        ns.relaysmtp(serv);\\n        ns.nuke(serv);\\n        ns.exec(script, serv, 12);\\n    }\\n\\n    ns.exec(postScript, \\\"home\\\", 1, targets);\\n\\n    // Wait until we acquire the \\\"BruteSSH.exe\\\" program\\n    while (!ns.fileExists(\\\"HTTPWorm.exe\\\")) {\\n        await ns.sleep(60000);\\n    }\\n\\n    // Copy our scripts onto each server that requires 4 port\\n    for (let i = 0; i < servers4Port.length; ++i) {\\n        let serv = servers4Port[i];\\n        targets = targets + \\\" \\\" + serv;\\n\\n        await ns.scp(script, serv);\\n        ns.ftpcrack(serv);\\n        ns.brutessh(serv);\\n        ns.relaysmtp(serv);\\n        ns.httpworm(serv);\\n        ns.nuke(serv);\\n        ns.exec(script, serv, 12);\\n    }\\n\\n    ns.exec(postScript, \\\"home\\\", 1, targets);\\n\\n}\",\"filename\":\"startup.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"startup.js\",\"url\":\"blob:file:///4cba4ba5-ce34-4c35-a43c-33f5a052125c\"}],\"ramUsage\":3.85,\"server\":\"home\",\"_hash\":\"5ddc9e46ba056ce204156acb423ed83845b4bac507fa5cbc11af1f4f46875457\",\"moduleSequenceNumber\":79}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\n/*recursive code credit: milonti on reddit https://www.reddit.com/r/Bitburner/comments/9uuh3u/recursive_variables/ */\\nexport async function main(ns) {\\n\\tlet scanned = [];\\n\\tfunction recursive(host) {\\n\\t\\tscanned.push(host);\\n\\t\\tlet newScan = ns.scan(host);\\n\\t\\tfor (let x = 0; x < newScan.length; x++) {\\n\\t\\t\\tif (scanned.includes(newScan[x])) continue;\\n\\t\\t\\t//Insert recursing code below\\n\\t\\t\\tif (ns.getServerMaxMoney(host) > 0) {\\n\\t\\t\\t\\tns.tprint(\\\"server: \\\" + host + \\\" ; maxMoney: \\\" + ns.getServerMaxMoney(host));\\n\\t\\t\\t}\\n\\t\\t\\t//Insert recursing code above\\n\\t\\t\\trecursive(newScan[x])\\n\\t\\t}\\n\\t}\\n\\trecursive('home');\\n}\",\"filename\":\"recursiveScan.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"recursiveScan.js\",\"url\":\"blob:file:///1b91e9ff-231a-48de-950a-6d85bf4898a0\"}],\"ramUsage\":1.9,\"server\":\"home\",\"_hash\":\"7ee2cca68833127f497e21d9e734303eae6d29dd16d1f3af89d10a2856323d02\",\"moduleSequenceNumber\":80}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nscript: hostsetup.js\\nlast updated: 2022-01-05 0128\\n*/\\nexport async function main(ns) {\\n\\tlet host = \\\"home\\\";\\n\\tif (ns.args.length > 0) {\\n\\t\\thost = ns.args[0];\\n\\t\\tawait ns.scp(\\\"autoHack.js\\\", \\\"home\\\", host);\\n\\t}\\n\\tlet servers0Port = [\\\"joesguns\\\", \\\"n00dles\\\", \\\"foodnstuff\\\", \\\"sigma-cosmetics\\\", \\\"nectar-net\\\", \\\"hong-fang-tea\\\", \\\"harakiri-sushi\\\"];\\n\\tlet servers1Port = [\\\"neo-net\\\", \\\"zer0\\\", \\\"max-hardware\\\", \\\"iron-gym\\\", \\\"CSEC\\\"];\\n\\tlet servers2Port = [\\\"omega-net\\\", \\\"silver-helix\\\", \\\"phantasy\\\", \\\"crush-fitness\\\", \\\"the-hub\\\", \\\"avmnite-02h\\\", \\\"johnson-ortho\\\"];\\n\\tlet servers3Port = [\\\"netlink\\\", \\\"catalyst\\\", \\\"comptek\\\", \\\"summit-uni\\\", \\\"rothman-uni\\\", \\\"millenium-fitness\\\", \\\"I.I.I.I\\\", \\\"rho-construction\\\"];\\n\\tlet servers4Port = [\\\"syscore\\\", \\\"lexo-corp\\\", \\\"aevum-police\\\", \\\"zb-def\\\", \\\"nova-med\\\", \\\"unitalife\\\", \\\"univ-energy\\\", \\\"alpha-ent\\\", \\\"global-pharm\\\", \\\"snap-fitness\\\"];\\n\\tlet servers5Port = [\\\"zb-institute\\\", \\\"galactic-cyber\\\", \\\"omnia\\\", \\\"icarus\\\", \\\"taiyang-digital\\\", \\\"zeus-med\\\", \\\"infocomm\\\", \\\"aerocorp\\\", \\\"defcomm\\\", \\\"solaris\\\", \\\"deltaone\\\"];\\n\\tlet servers = servers5Port.concat(servers4Port).concat(servers3Port).concat(servers2Port).concat(servers1Port).concat(servers0Port);\\n\\tlet hackableServers = [];\\n\\n\\tlet test = ns.getScriptRam(\\\"autoHack.js\\\");\\n\\tns.tprint(test);\\n\\n\\tfor (let i = 0; i < servers.length; i++) {\\n\\t\\ttry {\\n\\t\\t\\t//if(servers[i]!=\\\"\\\"){\\n\\t\\t\\tns.exec(\\\"autoHack.js\\\", host, 1, servers[i]);\\n\\t\\t\\tns.kill(\\\"autoHack.js\\\", host, servers[i]);\\n\\t\\t\\tif (ns.hasRootAccess(servers[i]) && ns.getServerRequiredHackingLevel(servers[i]) <= ns.getHackingLevel()) {\\n\\t\\t\\t\\thackableServers.push(servers[i]);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tcatch (e) {\\n\\t\\t\\tns.tprint(\\\"unhackable server discovered \\\" + servers[i] + \\\"error: \\\" + e);\\n\\t\\t}\\n\\t}\\n\\n\\tlet threads = (ns.getServerMaxRam(host) - ns.getServerUsedRam(host)) / ns.getScriptRam(\\\"autoHack.js\\\") / hackableServers.length;\\n\\tif (threads < 1) { threads = 1; }\\n\\tns.tprint(\\\"threads for each run: \\\" + threads);\\n\\tns.tprint(\\\"hackable: \\\" + hackableServers);\\n\\n\\tfor (let i = 0; i < hackableServers.length; i++) {\\n\\t\\ttry {\\n\\t\\t\\tns.exec(\\\"autoHack.js\\\", host, threads, hackableServers[i]);\\n\\t\\t}\\n\\t\\tcatch (e) {\\n\\t\\t\\tns.tprint(\\\"error attempting to hack 'hackable' server: \\\" + hackableServers[i] + \\\"error: \\\" + e);\\n\\t\\t}\\n\\t}\\n\\tawait ns.sleep(30000);\\n}\",\"filename\":\"hostsetup.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hostsetup.js\",\"url\":\"blob:file:///2b31265f-fef8-4bf4-83d0-82bf723adf29\"}],\"ramUsage\":4.4,\"server\":\"home\",\"_hash\":\"5e1e5b06fc9ba31e7927852998a525a0a57c8e393af4912c676e39c52547ccac\",\"moduleSequenceNumber\":81}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* base code credit: pwillia7 with modifications by JKelsey: https://www.reddit.com/r/Bitburner/comments/rkd3mu/stocksns_basic_stock_market_setup/hpmg8b7/*/\\n\\nexport async function main(ns) {\\n    //*********PARAMS FOR SCRIPT ************//\\n    var maxSharePer = 0.45                  // maximum percent of a symbol's total stock to buy\\n    var stockBuyPer = 0.6                  //  percent probablity to buy symbol\\n    var stockVolPer = .03                 //   percent stock will move to buy\\n    var moneyKeep = 1000000000           //    min money to keep on hand\\n    var minSharePer = 5                 //     min shares to buy\\n    var orderMax = 1000000000000           //      max money to spend on a single order\\n    var profPer = 0.05                //       min profit percentage to sell\\n    var panicPer = 0.15              //        percentage loss to panic sell at\\n    //******************************//\\n    while (true) {\\n        ns.disableLog('disableLog');\\n        ns.disableLog('sleep');\\n        ns.disableLog('getServerMoneyAvailable')\\n        var stocks = ns.stock.getSymbols();\\n        for (const stock of stocks) {\\n            var position = ns.stock.getPosition(stock)\\n            var forecast = ns.stock.getForecast(stock);\\n            if (position[0]) {\\n                ns.print('Position: ' + stock + \\\", \\\" + position[0] + \\\" Profit: \\\" + ns.nFormat(Math.round(ns.stock.getSaleGain(stock, position[0], \\\"Long\\\") - (position[0] * position[1])), '0,0', \\\"Long\\\") + ' % ' + ns.nFormat(ns.stock.getSaleGain(stock, position[0], \\\"Long\\\") / (position[0] * position[1]), \\\"0%\\\"));\\n                sellPositions(stock);\\n            }\\n            buyPositions(stock);\\n \\n        }\\n        await ns.sleep(6000);\\n    }\\n    function sellPositions(stock) {\\n        //sell if only 40% chance increase\\n\\t\\tif (ns.stock.getForecast(stock) < 0.4) {\\n\\t\\t\\t//sell stock\\n            ns.toast(\\\"SOLD STOCK \\\" + stock + \\\" for \\\" + ns.nFormat(Math.round(ns.stock.getSaleGain(stock, position[0], \\\"Long\\\") - (position[0] * position[1])), '0,0') + \\\" profit!\\\");\\n            ns.stock.sell(stock, position[0]);\\n\\t\\t}     \\n    }\\n \\n    function buyPositions(stock) {\\n        var maxShares = (ns.stock.getMaxShares(stock) * maxSharePer) - position[0];\\n        var askPrice = ns.stock.getAskPrice(stock);\\n        var forecast = ns.stock.getForecast(stock);\\n        var volPer = ns.stock.getVolatility(stock);\\n        var minBuy = 10000000;\\n        var playerMoney = ns.getServerMoneyAvailable('home');\\n        //if the stock will move positive by stockbuyper or more and it will grow stockvolper or more\\n        if (forecast >= stockBuyPer && volPer <= stockVolPer) {\\n            //check money for one share\\n            if (playerMoney - moneyKeep > ns.stock.getPurchaseCost(stock, minSharePer, \\\"Long\\\")) {\\n                var shares = Math.min((playerMoney - moneyKeep - 100000) / askPrice, orderMax / askPrice);\\n                if (shares * askPrice > minBuy) {\\n                    ns.stock.buy(stock, Math.min(shares, maxShares));\\n                }\\n            }\\n        }\\n    }\\n \\n}\",\"filename\":\"stocks.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"stocks.js\",\"url\":\"blob:file:///1e2c77ca-d728-413b-9d47-5adf751278da\"}],\"ramUsage\":23.7,\"server\":\"home\",\"_hash\":\"91815d771c77c158aa5623ce679706a09965e1af7bc9c9f0d7c1ab0f63416b12\",\"moduleSequenceNumber\":1362,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"stock.getSymbols\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getPosition\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getForecast\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.getSaleGain\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.sell\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.getMaxShares\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getAskPrice\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getVolatility\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"stock.getPurchaseCost\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.buy\",\"cost\":2.5}]}}],\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"pserv-0\",\"pserv-1\",\"darkweb\",\"pserv-2\",\"pserv-3\",\"pserv-7\",\"pserv-20\",\"pserv-4\",\"pserv-5\",\"pserv-6\",\"pserv-8\",\"pserv-9\",\"pserv-10\",\"pserv-11\",\"pserv-12\",\"pserv-13\",\"pserv-15\",\"pserv-16\",\"pserv-17\",\"pserv-18\",\"pserv-19\",\"pserv-14\",\"pserv-21\",\"pserv-22\",\"pserv-23\",\"pserv-24\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":5.983999999991615,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-299068.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":717442654,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-557743.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"7610490238\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-581406.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"()())))(aa\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-412969-CyberSec.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":391184165,\"reward\":{\"name\":\"CyberSec\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-950802.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[8],[3,3],[6,8,6],[9,6,1,3],[2,2,8,1,5],[6,7,1,4,4,2],[4,7,3,9,1,8,3],[8,6,2,2,6,8,1,8],[3,6,4,3,9,9,1,4,6],[3,8,8,3,6,8,3,2,6,4],[7,7,1,1,5,3,3,9,9,1,5],[3,2,9,9,2,3,7,6,8,9,9,3]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"ecorp\",\"httpPortOpen\":false,\"ip\":\"44.3.8.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"clarkinc\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":48525661453,\"moneyMax\":1213141536325,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1069,\"serverGrowth\":99}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-804563.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[12,14],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-116715.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[10,7,8,45,17,28,6,15,47],[39,32,37,7,22,6,50,8,11]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-819275.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[18,20,27,40,41,16,49,33,32,26,19,4,16,28,50],[44,27,25,39,36,20,23,23,26,48,34,9,15,45,28],[21,2,35,16,41,13,3,19,38,5,43,3,29,14,3],[33,22,14,13,23,12,14,23,23,37,28,34,36,4,21],[20,23,15,50,44,46,48,47,11,6,37,14,42,12,13],[28,22,14,29,18,14,20,26,23,9,35,25,40,2,18],[36,50,46,46,33,30,4,18,12,11,26,3,19,43,29]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"megacorp\",\"httpPortOpen\":false,\"ip\":\"24.9.9.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":55868972954,\"moneyMax\":1396724323850,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1317,\"serverGrowth\":99}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-922231.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[10,182,21,98,118,189,47,189,14,157,72],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-586748.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[7,16],[8,14],[10,19],[15,22],[4,10],[21,24],[3,9],[9,16],[24,28],[23,31],[8,12],[18,21],[8,18],[22,29],[23,25],[11,19],[24,32]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-840056.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":702053152,\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"b-and-a\",\"httpPortOpen\":false,\"ip\":\"86.5.7.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnitek\",\"fulcrumassets\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":83,\"hackDifficulty\":83,\"minDifficulty\":28,\"moneyAvailable\":27697494242,\"moneyMax\":692437356050,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1056,\"serverGrowth\":69}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-817189-CarmichaelSecurity.cct\",\"type\":\"Array Jumping Game\",\"data\":[8,0,9,8,0,0,6,9,9,10,10,6,3,7,2,2,0,10,2,1,0,5,9],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"blade\",\"httpPortOpen\":false,\"ip\":\"48.3.0.7\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"4sigma\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":92,\"hackDifficulty\":92,\"minDifficulty\":31,\"moneyAvailable\":31572310236,\"moneyMax\":789307755900,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1124,\"serverGrowth\":74}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-207978.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[4,[22,46,172,24,25,170,93,161,163,110,186,191,85,86,193,106,87,73,54,54,17,39,57,125,116,88,107,152,68,66,143,43,46,184,165,127,4,81,10]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nwo\",\"httpPortOpen\":false,\"ip\":\"22.1.7.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnitek\",\"megacorp\",\"The-Cave\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":20466391826,\"moneyMax\":511659795650,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":957,\"serverGrowth\":77}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-498200.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[51,2,84,90,141,170,35,153,49,93,29,12,17,187,111,146,161,158,5,167,106,181,169,15,43,10,62,69,128,35,135,89,44,3,100,179,171,5,86,14,43,106,58,135,198,89,167],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-253625-CarmichaelSecurity.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"))(()a)((a()()a))))\",\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-778141-CarmichaelSecurity.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":261916599,\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"clarkinc\",\"httpPortOpen\":false,\"ip\":\"22.5.7.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\".\",\"ecorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":53,\"hackDifficulty\":53,\"minDifficulty\":18,\"moneyAvailable\":19834823591,\"moneyMax\":495870589775,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1054,\"serverGrowth\":54}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-372337.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,1,0,0],[0,0,0,0,1,0,0,0,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-647918-CarmichaelSecurity.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"22457005717\",8],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-45703.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[3],[7,5],[4,4,8],[6,9,9,7],[9,8,5,8,1],[6,6,8,1,3,5],[5,5,5,3,3,3,4],[2,8,2,5,8,8,9,5]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnitek\",\"httpPortOpen\":false,\"ip\":\"26.8.7.4\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"vitalife\",\"b-and-a\",\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":95,\"minDifficulty\":32,\"moneyAvailable\":18944376509,\"moneyMax\":473609412725,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":901,\"serverGrowth\":99}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-761249.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[21,24],[3,4],[8,16],[8,13],[14,17],[6,11],[10,19],[3,11],[10,13],[2,10],[6,15],[18,24],[25,31],[15,21],[24,30],[18,24],[3,10]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"4sigma\",\"httpPortOpen\":false,\"ip\":\"33.8.1.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"fulcrumtech\",\"blade\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":61,\"hackDifficulty\":61,\"minDifficulty\":20,\"moneyAvailable\":21947904077,\"moneyMax\":548697601925,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":966,\"serverGrowth\":79}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-123708.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[35],[6],[24],[21],[11],[34],[9],[20],[33],[7],[40]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-857612-CarmichaelSecurity.cct\",\"type\":\"Total Ways to Sum\",\"data\":98,\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"kuai-gong\",\"httpPortOpen\":false,\"ip\":\"39.1.3.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"helios\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":98,\"hackDifficulty\":98,\"minDifficulty\":33,\"moneyAvailable\":26526113030,\"moneyMax\":663152825750,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1177,\"serverGrowth\":93}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-173478-Sector-12.cct\",\"type\":\"Total Ways to Sum\",\"data\":50,\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":false,\"ip\":\"18.1.1.2\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"microdyne\",\"4sigma\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":1522712209,\"moneyMax\":38067805225,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1025,\"serverGrowth\":99}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-4964-CyberSec.cct\",\"type\":\"Total Ways to Sum\",\"data\":8,\"reward\":{\"name\":\"CyberSec\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":false,\"ip\":\"88.1.3.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"b-and-a\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":1000000,\"moneyMax\":25000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1330,\"serverGrowth\":1}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-347134.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[157,47,51,137,106,158,54,60,44],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"stormtech\",\"httpPortOpen\":false,\"ip\":\"52.4.7.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"applied-energetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":91,\"hackDifficulty\":91,\"minDifficulty\":30,\"moneyAvailable\":1031469439,\"moneyMax\":25786735975,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":888,\"serverGrowth\":76}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-345426.cct\",\"type\":\"Array Jumping Game\",\"data\":[8,2,8,4,10,1,0,9,10,7,6,0,2,5,5,4,0,1,9,5,8],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-813160-CarmichaelSecurity.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":534426026,\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-683064.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[12,9],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"defcomm\",\"httpPortOpen\":false,\"ip\":\"63.8.7.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":96,\"minDifficulty\":32,\"moneyAvailable\":808389171,\"moneyMax\":20209729275,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1030,\"serverGrowth\":63}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-498859.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[25,31,19,43,20,49,2,27,4,18,5],[35,17,15,18,38,45,29,22,8,50,19],[3,10,36,28,44,49,48,1,19,23,46],[27,44,12,41,12,13,43,25,5,27,30]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"infocomm\",\"httpPortOpen\":false,\"ip\":\"56.3.5.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zeus-med\",\"titan-labs\",\"run4theh111z\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":618093587,\"moneyMax\":15452339675,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":875,\"serverGrowth\":44}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-760821-CarmichaelSecurity.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":233781579,\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"helios\",\"httpPortOpen\":false,\"ip\":\"38.5.2.8\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"run4theh111z\",\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":88,\"hackDifficulty\":88,\"minDifficulty\":29,\"moneyAvailable\":705082421,\"moneyMax\":17627060525,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":813,\"serverGrowth\":79}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-826604-CyberSec.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"24923831\",\"reward\":{\"name\":\"CyberSec\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-327011-CarmichaelSecurity.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"5951\",30],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-786837-CarmichaelSecurity.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[51,70,110,111,173,99,169,81,157,167,43,121,198,161,64,124,67,43,74,23,123,86,37,194,104,60,74,10,42,137,37,167],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"vitalife\",\"httpPortOpen\":false,\"ip\":\"79.4.0.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"applied-energetics\",\"omnitek\",\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":82,\"minDifficulty\":27,\"moneyAvailable\":780442963,\"moneyMax\":19511074075,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":798,\"serverGrowth\":76}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-58927-Sector-12.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[45,122,64,134,53,194,75,58,87,3,16,90,123,182],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-258983.cct\",\"type\":\"Array Jumping Game\",\"data\":[9,7,7,9,0,9,0,10,2,6,0,9,8,9],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"icarus\",\"httpPortOpen\":false,\"ip\":\"10.1.6.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnia\",\"taiyang-digital\",\"zb-def\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":93,\"hackDifficulty\":93,\"minDifficulty\":31,\"moneyAvailable\":967113752,\"moneyMax\":24177843800,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":879,\"serverGrowth\":86}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-994887.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[1,-7,9,-4,0,-4,-2,1,-10,3,-7,2,-8],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-556254.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[139,186,177,188,20,157,74,2,66,149,28,31,189,193,165,128,144,24,19,58,91,183,161,149,97,30,91,192,99,7,164,168,9,102,54,151,119,154,54,17,94,195],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"univ-energy\",\"httpPortOpen\":true,\"ip\":\"63.2.0.1\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}],\"ramUsage\":2.45,\"server\":\"univ-energy\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":82}}],\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":28,\"minDifficulty\":28,\"moneyAvailable\":27702308525,\"moneyMax\":27702308525,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":802,\"serverGrowth\":83}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-660074-Sector-12.cct\",\"type\":\"Array Jumping Game\",\"data\":[3,3,1,0,2,6,3,10,0,7,3,3,0,3,6,0,1,0,4,5,0,0,8,8,9],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"titan-labs\",\"httpPortOpen\":false,\"ip\":\"43.0.6.0\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"infocomm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":70,\"hackDifficulty\":70,\"minDifficulty\":23,\"moneyAvailable\":784318505,\"moneyMax\":19607962625,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":857,\"serverGrowth\":72}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"microdyne\",\"httpPortOpen\":false,\"ip\":\"53.9.8.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zb-def\",\"fulcrumtech\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":73,\"minDifficulty\":24,\"moneyAvailable\":537815283,\"moneyMax\":13445382075,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":836,\"serverGrowth\":86}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-724448-CyberSec.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[12,26,14,35,39,11,22,50,13,37,37,39,32,18,40],[28,36,9,24,36,15,30,6,29,15,26,8,8,43,4],[26,7,44,23,26,40,37,28,2,40,36,7,4,3,20],[31,5,45,22,2,40,11,19,33,25,37,36,6,36,39],[37,46,7,41,46,11,45,17,9,30,21,11,15,9,9],[49,48,27,41,25,37,31,39,49,9,33,47,1,48,37],[20,32,35,7,48,20,20,16,30,15,16,30,5,49,42],[9,44,45,38,34,7,30,50,38,8,9,12,49,21,27]],\"reward\":{\"name\":\"CyberSec\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-72356-CarmichaelSecurity.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[8,9],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-12630.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-7,-5,9,-2,6,10,3,5,1,3,6,4,7,-2,-7,-6,2,7,-10,-4,0,-8,-1,6,-6,-7,1,10],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-509720-Sector-12.cct\",\"type\":\"Array Jumping Game\",\"data\":[0,2,0],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":false,\"ip\":\"29.0.6.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"icarus\",\"applied-energetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":847833679,\"moneyMax\":21195841975,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":924,\"serverGrowth\":78}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-628285-CarmichaelSecurity.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[116,59,146,68,177,16,54,104,171,140,145,180,10,42,158,192,115,140,36,131,60,76],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-774502.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[8],[7,9],[6,3,5]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-569351.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[132,13,152,192,132,188,149,149,156,143,16,82,151,65,51,149,159,16,18,3,84,129,86,102,105,117,41,162,35,149,191,48,63,115,58,127,81,22,117,20,46,148,162],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":false,\"ip\":\"34.2.0.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"rho-construction\",\"omnia\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":58,\"hackDifficulty\":58,\"minDifficulty\":19,\"moneyAvailable\":834378992,\"moneyMax\":20859474800,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":845,\"serverGrowth\":73}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-50909.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[2],[7,6],[6,7,2],[5,3,4,3],[8,4,4,2,3],[6,5,8,6,6,1],[2,3,6,6,1,7,2],[8,4,6,4,5,6,1,6],[1,1,2,6,7,4,1,1,3],[9,5,2,6,9,9,5,2,8,5],[6,5,7,8,4,8,6,1,7,5,7],[7,9,9,6,7,6,1,5,2,1,7,8]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-121628-CarmichaelSecurity.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[50,48,47,5],[11,19,24,32],[33,8,15,36]],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"aerocorp\",\"httpPortOpen\":false,\"ip\":\"41.4.9.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"rho-construction\",\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":1047133492,\"moneyMax\":26178337300,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":894,\"serverGrowth\":65}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-346600-Sector-12.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[127,91,121,165,61,10,28,18,114,77,54,44,183,172,199,158,30,40,122,102,120,108,190,48,6,25,159,186,68,134],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-496154-Sector-12.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[4,0,8,-10,-2,7,2,-1,4,5,5,-5,-9,-9,-3,1,-3,-4,3,-7,-2,9,9,-1,8,8,-8,-10,-8,9,8,4,10,-9,-6,2,8,1,0,4],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-463910-Sector-12.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[8,[174,31,125,136,66,179,127,182,49,198,188,185,101,86,81,107,144,108,184,32,124,112,15,69,26,170,101,147,110,55,140,33,109,197,67,40,98,169,88,165,117,39,190,109]],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnia\",\"httpPortOpen\":false,\"ip\":\"54.3.0.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"galactic-cyber\",\"icarus\",\"zeus-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":89,\"minDifficulty\":30,\"moneyAvailable\":951358234,\"moneyMax\":23783955850,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":871,\"serverGrowth\":66}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-557502.cct\",\"type\":\"Total Ways to Sum\",\"data\":15,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-882226.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"12786151118\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-43558.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"334316681124\",-13],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-120204-CarmichaelSecurity.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":763381194,\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-183429-CarmichaelSecurity.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0],[0,0,0,0,0],[0,0,0,1,0]],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-276645.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":77455516,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-def\",\"httpPortOpen\":true,\"ip\":\"1.5.8.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"ramUsage\":2.45,\"server\":\"zb-def\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":83}}],\"serversOnNetwork\":[\"icarus\",\"microdyne\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":58,\"hackDifficulty\":20.3,\"minDifficulty\":19,\"moneyAvailable\":24687795550,\"moneyMax\":24687795550,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":778,\"serverGrowth\":73}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-824675.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[8,24,29,32,49,8,30,19,27,50,18,36],[29,49,9,11,17,11,5,5,50,29,4,16],[31,25,42,23,24,25,38,7,2,49,5,50],[30,16,28,9,33,24,29,19,20,35,31,43],[15,31,19,15,41,6,20,25,45,49,35,13],[40,46,37,33,33,26,32,12,45,35,2,14]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-811871.cct\",\"type\":\"Array Jumping Game\",\"data\":[0,0,0,0,9,0,0,4,7,3,0,0,1,3,0,3,1,8,10],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-951891.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[2,7],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-934482-CyberSec.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[64,11,152,83,47,49,153,17,189,100,193,75,56,191],\"reward\":{\"name\":\"CyberSec\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-24917.cct\",\"type\":\"Array Jumping Game\",\"data\":[2,0,8,0,9,10,9,0,0,0,3,0,0,7],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"applied-energetics\",\"httpPortOpen\":false,\"ip\":\"66.2.9.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"taiyang-digital\",\"stormtech\",\"vitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":944078705,\"moneyMax\":23601967625,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":821,\"serverGrowth\":71}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-240318.cct\",\"type\":\"Total Ways to Sum\",\"data\":94,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"solaris\",\"httpPortOpen\":false,\"ip\":\"81.0.6.9\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":841094526,\"moneyMax\":21027363150,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":750,\"serverGrowth\":71}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-124368.cct\",\"type\":\"Total Ways to Sum\",\"data\":61,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"deltaone\",\"httpPortOpen\":false,\"ip\":\"21.2.7.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"global-pharm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":1463145712,\"moneyMax\":36578642800,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":802,\"serverGrowth\":53}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"global-pharm\",\"httpPortOpen\":true,\"ip\":\"69.5.6.2\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"ramUsage\":2.45,\"server\":\"global-pharm\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":84}}],\"serversOnNetwork\":[\"alpha-ent\",\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":81,\"hackDifficulty\":27,\"minDifficulty\":27,\"moneyAvailable\":38613351975,\"moneyMax\":38613351975,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":837,\"serverGrowth\":88}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-427924-CyberSec.cct\",\"type\":\"Array Jumping Game\",\"data\":[0,9,0,4],\"reward\":{\"name\":\"CyberSec\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nova-med\",\"httpPortOpen\":true,\"ip\":\"54.3.2.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"ramUsage\":2.45,\"server\":\"nova-med\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":85}}],\"serversOnNetwork\":[\"zeus-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":26,\"minDifficulty\":26,\"moneyAvailable\":31137361100,\"moneyMax\":31137361100,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":807,\"serverGrowth\":85}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zeus-med\",\"httpPortOpen\":false,\"ip\":\"70.0.0.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnia\",\"infocomm\",\"nova-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":1454599823,\"moneyMax\":36364995575,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":849,\"serverGrowth\":77}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-854430-CarmichaelSecurity.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[42,48,36,39,32,16,14,25,1],[34,42,47,42,40,46,17,31,13],[5,13,48,24,21,16,25,8,2],[11,11,10,31,10,12,43,33,8],[11,15,7,13,14,13,41,30,16],[37,34,14,9,46,35,50,1,29],[40,43,37,44,47,31,33,33,24],[29,14,3,35,25,6,33,41,34],[50,31,29,34,9,40,31,47,31],[13,20,27,26,9,17,14,2,35],[12,35,11,8,33,43,4,45,7],[40,16,8,17,34,31,22,6,14],[44,42,38,30,49,31,16,18,20]],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"unitalife\",\"httpPortOpen\":true,\"ip\":\"83.6.6.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}],\"ramUsage\":2.45,\"server\":\"unitalife\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":86}}],\"serversOnNetwork\":[\"aerocorp\",\"defcomm\",\"univ-energy\",\"solaris\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":28.940000000000005,\"minDifficulty\":24,\"moneyAvailable\":25671253125,\"moneyMax\":25671253125,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":808,\"serverGrowth\":80}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-339663-CarmichaelSecurity.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[7],[5,3],[7,6,8],[8,6,3,2],[8,4,3,1,9],[6,2,8,3,1,6],[1,9,9,3,9,1,7],[4,2,7,7,5,3,5,1],[6,5,1,4,1,1,5,2,7],[5,7,6,4,4,8,5,7,8,5],[5,5,2,5,1,7,3,7,2,1,6]],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lexo-corp\",\"httpPortOpen\":true,\"ip\":\"11.2.9.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"ramUsage\":2.45,\"server\":\"lexo-corp\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":87}}],\"serversOnNetwork\":[\"zb-institute\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":31.963999999999988,\"minDifficulty\":27,\"moneyAvailable\":19429501350,\"moneyMax\":19429501350,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":665,\"serverGrowth\":55}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-159765-CarmichaelSecurity.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[5,[35,126,97,3,176,171,49,131,20,121,136,188,38,101,42,53,178,59,96,169,9,110,133,29,133,69,145,103,150,144,156,27,170,101,20,24,70,53,184,196]],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-764008.cct\",\"type\":\"Total Ways to Sum\",\"data\":35,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-131999-Sector-12.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"21514241166\",\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":false,\"ip\":\"55.6.8.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"ramUsed\":14.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[7753546,3,5,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1289.4448799807549,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.416,\"onlineExpGained\":401.23922664711637,\"onlineMoneyMade\":7753546,\"onlineRunningTime\":16008.610000023522,\"pid\":31,\"ramUsage\":2.45,\"server\":\"rho-construction\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[519676,2,11,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2105.424085014558,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.418,\"onlineExpGained\":499.40239455212543,\"onlineMoneyMade\":519676,\"onlineRunningTime\":16008.610000023522,\"pid\":32,\"ramUsage\":2.45,\"server\":\"rho-construction\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[20184895,4,9,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1999.225943254522,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.421,\"onlineExpGained\":472.34991365006243,\"onlineMoneyMade\":20184895,\"onlineRunningTime\":16008.610000023522,\"pid\":33,\"ramUsage\":2.45,\"server\":\"rho-construction\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,2,9,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1930.5938085324042,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.425,\"onlineExpGained\":438.4732515039984,\"onlineMoneyMade\":0,\"onlineRunningTime\":16008.610000023522,\"pid\":34,\"ramUsage\":2.45,\"server\":\"rho-construction\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[7115,3,14,4]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2033.9108265615844,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.427,\"onlineExpGained\":442.9099204309665,\"onlineMoneyMade\":7115,\"onlineRunningTime\":16008.610000023522,\"pid\":35,\"ramUsage\":2.45,\"server\":\"rho-construction\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,1,13,9]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2272.5066525476864,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.43099999998,\"onlineExpGained\":531.9220017825166,\"onlineMoneyMade\":0,\"onlineRunningTime\":16008.610000023522,\"pid\":36,\"ramUsage\":2.45,\"server\":\"rho-construction\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"rho-construction\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":180,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"I.I.I.I\",\"galactic-cyber\",\"aerocorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":53,\"hackDifficulty\":29.891999999999996,\"minDifficulty\":18,\"moneyAvailable\":410490905.29590225,\"moneyMax\":15456635625,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":512,\"serverGrowth\":60}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-561607-CyberSec.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[7,3,145,107,9,65,192,117,163,105,19,120,30,189,175,70,23,167,46,74,31,35,54,150,126,42,153,164,144,124,69,140,118,183,198,190,133,46,63,16,113,123,121,23,160,175,63],\"reward\":{\"name\":\"CyberSec\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"alpha-ent\",\"httpPortOpen\":true,\"ip\":\"88.6.1.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"ramUsed\":14.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[4956531,3,5,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1713.3098690236723,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.433,\"onlineExpGained\":421.6412212223935,\"onlineMoneyMade\":4956531,\"onlineRunningTime\":15969.010000023358,\"pid\":37,\"ramUsage\":2.45,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[8260633,4,10,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1993.3164018534856,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.435,\"onlineExpGained\":480.19461014627444,\"onlineMoneyMade\":8260633,\"onlineRunningTime\":15969.010000023358,\"pid\":38,\"ramUsage\":2.45,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[20720762,5,9,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1995.7039484267843,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.438,\"onlineExpGained\":466.9823009949481,\"onlineMoneyMade\":20720762,\"onlineRunningTime\":15969.010000023358,\"pid\":39,\"ramUsage\":2.45,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,1,11,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2048.706925865756,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.44,\"onlineExpGained\":521.9919660761886,\"onlineMoneyMade\":0,\"onlineRunningTime\":15969.010000023358,\"pid\":40,\"ramUsage\":2.45,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[48610,3,13,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1840.5989903017403,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.44199999998,\"onlineExpGained\":487.7615579429631,\"onlineMoneyMade\":48610,\"onlineRunningTime\":15969.010000023358,\"pid\":41,\"ramUsage\":2.45,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,3,15,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2329.093632198462,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.446,\"onlineExpGained\":537.7672985054014,\"onlineMoneyMade\":0,\"onlineRunningTime\":15969.010000023358,\"pid\":42,\"ramUsage\":2.45,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"alpha-ent\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":186,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"I.I.I.I\",\"global-pharm\",\"snap-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":58,\"hackDifficulty\":19.804,\"minDifficulty\":19,\"moneyAvailable\":5418185508,\"moneyMax\":17619166300,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":543,\"serverGrowth\":60}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-946072.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[164,10,162,141,2,141,138,138,33,144,181,123,124,44,94,135,45,99,91,192,116,43,21,160,127,111,4,145,163,110,146,154,165,2,11,125,167,180,165,34,9,124,62,79,88,167,199,153,31],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"42.0.3.9\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"ramUsed\":63.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"aevum-police\":[333657312,108,588,396]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":62203.25540818366,\"offlineMoneyMade\":0,\"offlineRunningTime\":171679.554,\"onlineExpGained\":28734.84547115309,\"onlineMoneyMade\":333657312,\"onlineRunningTime\":75742.60999970202,\"pid\":43,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":12,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[8837758,3,4,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1515.8040454213958,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.45299999998,\"onlineExpGained\":408.0398915055421,\"onlineMoneyMade\":8837758,\"onlineRunningTime\":15962.810000023332,\"pid\":44,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[0,1,11,4]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1640.1871096900618,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.45500000002,\"onlineExpGained\":396.96087772092017,\"onlineMoneyMade\":0,\"onlineRunningTime\":15962.810000023332,\"pid\":45,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[685825,1,10,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1752.2482641356257,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.457,\"onlineExpGained\":391.8357238233473,\"onlineMoneyMade\":685825,\"onlineRunningTime\":15962.810000023332,\"pid\":46,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[10,2,9,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1454.3895030931149,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.459,\"onlineExpGained\":445.43314438501426,\"onlineMoneyMade\":10,\"onlineRunningTime\":15962.810000023332,\"pid\":47,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[16769034,1,13,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1701.561716073884,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.461,\"onlineExpGained\":476.54864856496397,\"onlineMoneyMade\":16769034,\"onlineRunningTime\":15962.810000023332,\"pid\":48,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,4,14,9]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2428.291590546058,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.463,\"onlineExpGained\":561.1484853969406,\"onlineMoneyMade\":0,\"onlineRunningTime\":15962.810000023332,\"pid\":49,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[5188568,4,15,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2221.0310189594566,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.465,\"onlineExpGained\":548.7784564715163,\"onlineMoneyMade\":5188568,\"onlineRunningTime\":15962.810000023332,\"pid\":50,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[171842,1,11,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1267.912922173091,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.467,\"onlineExpGained\":394.4457952360036,\"onlineMoneyMade\":171842,\"onlineRunningTime\":15962.810000023332,\"pid\":51,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[647379,1,11,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":989.1476493604687,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.46899999998,\"onlineExpGained\":365.71780337308803,\"onlineMoneyMade\":647379,\"onlineRunningTime\":15962.810000023332,\"pid\":52,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,119,0,52]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1150.9961247916667,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.472,\"onlineExpGained\":288,\"onlineMoneyMade\":0,\"onlineRunningTime\":15962.810000023332,\"pid\":53,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[141088,1,8,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1342.267319197492,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.474,\"onlineExpGained\":327.9898115101724,\"onlineMoneyMade\":141088,\"onlineRunningTime\":15962.810000023332,\"pid\":54,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,9,34,32]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3763.459783700853,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.476,\"onlineExpGained\":888.1774806406611,\"onlineMoneyMade\":0,\"onlineRunningTime\":15962.810000023332,\"pid\":55,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[108,11,45,41]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4776.467630298629,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.47699999998,\"onlineExpGained\":1129.8313219868116,\"onlineMoneyMade\":108,\"onlineRunningTime\":15962.810000023332,\"pid\":56,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[4155826,31,79,67]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6265.5828509645435,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.483,\"onlineExpGained\":1473.2942620920455,\"onlineMoneyMade\":4155826,\"onlineRunningTime\":15962.810000023332,\"pid\":57,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"aevum-police\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":201,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"zb-institute\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":24,\"minDifficulty\":24,\"moneyAvailable\":45340863.006753765,\"moneyMax\":5871712325,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":435,\"serverGrowth\":40}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-33606.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[61,58,16,97,160],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-828684-CarmichaelSecurity.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[37],[42],[27]],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":false,\"ip\":\"97.7.0.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"ramUsed\":63.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"rothman-uni\":[545248020,216,864,540]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":75708.08612530644,\"offlineMoneyMade\":0,\"offlineRunningTime\":327097.108,\"onlineExpGained\":31978.97130157267,\"onlineMoneyMade\":545248020,\"onlineRunningTime\":84549.80999959081,\"pid\":58,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":12,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[9589141,5,5,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1684.4580497786064,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.49599999998,\"onlineExpGained\":462.4452103729477,\"onlineMoneyMade\":9589141,\"onlineRunningTime\":15987.610000023435,\"pid\":59,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[9878365,2,11,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1993.317490294602,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.501,\"onlineExpGained\":480.19461014627444,\"onlineMoneyMade\":9878365,\"onlineRunningTime\":15987.610000023435,\"pid\":60,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[21626305,6,8,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2132.341687434883,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.503,\"onlineExpGained\":472.3499136500625,\"onlineMoneyMade\":21626305,\"onlineRunningTime\":15987.610000023435,\"pid\":61,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[7,2,11,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1930.5950680796855,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.506,\"onlineExpGained\":501.11228743314103,\"onlineMoneyMade\":7,\"onlineRunningTime\":15987.610000023435,\"pid\":62,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[143598,2,10,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1680.799641557794,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.509,\"onlineExpGained\":442.9099204309665,\"onlineMoneyMade\":143598,\"onlineRunningTime\":15987.610000023435,\"pid\":63,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[5,2,12,9]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2247.708683042378,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.511,\"onlineExpGained\":526.0767050596319,\"onlineMoneyMade\":5,\"onlineRunningTime\":15987.610000023435,\"pid\":64,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[6566424,4,9,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1643.0231089089348,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.513,\"onlineExpGained\":425.6879615620173,\"onlineMoneyMade\":6566424,\"onlineRunningTime\":15987.610000023435,\"pid\":65,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[43825,2,12,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1267.9134479671984,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.516,\"onlineExpGained\":394.4457952360036,\"onlineMoneyMade\":43825,\"onlineRunningTime\":15987.610000023435,\"pid\":66,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[9768933,8,8,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1086.123371328359,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.51799999998,\"onlineExpGained\":402.28958371039687,\"onlineMoneyMade\":9768933,\"onlineRunningTime\":15987.610000023435,\"pid\":67,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,113,0,57]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1186.40271375,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.522,\"onlineExpGained\":297,\"onlineMoneyMade\":0,\"onlineRunningTime\":15987.610000023435,\"pid\":68,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[8803664,6,8,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1532.0231704278046,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.524,\"onlineExpGained\":417.44157828567404,\"onlineMoneyMade\":8803664,\"onlineRunningTime\":15987.610000023435,\"pid\":69,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[743,9,32,29]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3478.861638076026,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.528,\"onlineExpGained\":833.4708966881567,\"onlineMoneyMade\":743,\"onlineRunningTime\":15987.610000023435,\"pid\":70,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[28,9,39,40]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4570.563995798347,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.533,\"onlineExpGained\":1045.0939728378007,\"onlineMoneyMade\":28,\"onlineRunningTime\":15987.610000023435,\"pid\":71,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[2085662,33,81,67]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5982.01103918141,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.53499999997,\"onlineExpGained\":1477.9788225438485,\"onlineMoneyMade\":2085662,\"onlineRunningTime\":15987.610000023435,\"pid\":72,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":216,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"johnson-ortho\",\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":51,\"hackDifficulty\":17,\"minDifficulty\":17,\"moneyAvailable\":14736293.31715009,\"moneyMax\":4598908375,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":419,\"serverGrowth\":36}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-672828.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"46779738\",-92],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-690684.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[9,17],[15,21],[17,26],[20,27],[11,13],[21,28],[9,16],[18,28],[6,12],[13,19],[7,11],[12,15],[12,14],[14,20],[21,29],[17,21],[14,20],[10,14],[3,10]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zb-institute\",\"httpPortOpen\":false,\"ip\":\"82.2.6.3\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"the-hub\",\"lexo-corp\",\"aevum-police\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":67,\"hackDifficulty\":67,\"minDifficulty\":22,\"moneyAvailable\":882496013,\"moneyMax\":22062400325,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":735,\"serverGrowth\":82}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-245404-Aevum.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[124,52,159],\"reward\":{\"name\":\"Aevum\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":false,\"ip\":\"12.8.8.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"ramUsed\":14.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[5245280,3,5,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1771.0166736011101,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.53699999998,\"onlineExpGained\":421.6412212223935,\"onlineMoneyMade\":5245280,\"onlineRunningTime\":15983.210000023417,\"pid\":73,\"ramUsage\":2.45,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[2486099,2,10,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2020.4819237638444,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.53999999998,\"onlineExpGained\":460.98682574042346,\"onlineMoneyMade\":2486099,\"onlineRunningTime\":15983.210000023417,\"pid\":74,\"ramUsage\":2.45,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[29623586,4,8,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1794.272743549161,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.543,\"onlineExpGained\":461.6146883398337,\"onlineMoneyMade\":29623586,\"onlineRunningTime\":15983.210000023417,\"pid\":75,\"ramUsage\":2.45,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,3,9,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1930.5956432374999,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.54499999998,\"onlineExpGained\":438.4732515039984,\"onlineMoneyMade\":0,\"onlineRunningTime\":15983.210000023417,\"pid\":76,\"ramUsage\":2.45,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[15969439,6,10,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1867.410005828462,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.548,\"onlineExpGained\":442.9099204309665,\"onlineMoneyMade\":15969439,\"onlineRunningTime\":15983.210000023417,\"pid\":77,\"ramUsage\":2.45,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,1,13,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2049.3139098333563,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.55,\"onlineExpGained\":438.3972542163599,\"onlineMoneyMade\":0,\"onlineRunningTime\":15983.210000023417,\"pid\":78,\"ramUsage\":2.45,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"summit-uni\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":222,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"comptek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":55,\"hackDifficulty\":23.506,\"minDifficulty\":18,\"moneyAvailable\":84267179.35669643,\"moneyMax\":5597604975,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":467,\"serverGrowth\":51}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-494109.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"2717718101\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-443067-CarmichaelSecurity.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[4],[2,5],[4,9,9]],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"syscore\",\"httpPortOpen\":true,\"ip\":\"80.2.6.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"ramUsage\":2.45,\"server\":\"syscore\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":93}}],\"serversOnNetwork\":[\"crush-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":35.695999999999984,\"minDifficulty\":25,\"moneyAvailable\":11177810450,\"moneyMax\":11177810450,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":587,\"serverGrowth\":65}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":false,\"ip\":\"69.4.7.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"ramUsed\":31.85,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"catalyst\":[1370009328,240,768,516]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":77245.6827914604,\"offlineMoneyMade\":0,\"offlineRunningTime\":327097.174,\"onlineExpGained\":34513.33506548142,\"onlineMoneyMade\":1370009328,\"onlineRunningTime\":84549.80999959081,\"pid\":79,\"ramUsage\":2.45,\"server\":\"catalyst\",\"threads\":12,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[3295009,2,5,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1597.9006973026162,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.555,\"onlineExpGained\":401.23922664711637,\"onlineMoneyMade\":3295009,\"onlineRunningTime\":15974.610000023382,\"pid\":80,\"ramUsage\":2.45,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"catalyst\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":224,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"netlink\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":61,\"hackDifficulty\":23.056,\"minDifficulty\":20,\"moneyAvailable\":132360.89101437025,\"moneyMax\":12684213600,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":400,\"serverGrowth\":55}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-37686-CarmichaelSecurity.cct\",\"type\":\"Total Ways to Sum\",\"data\":66,\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-958893.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":890436275,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-489453-CarmichaelSecurity.cct\",\"type\":\"Array Jumping Game\",\"data\":[0,4,7,0,4,1,9,0,9,5,0,9,8],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":false,\"ip\":\"38.7.1.7\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[12548959,6,4,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1606.826080659245,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.557,\"onlineExpGained\":476.0465400897991,\"onlineMoneyMade\":12548959,\"onlineRunningTime\":16035.410000023632,\"pid\":81,\"ramUsage\":2.45,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[1134143,2,13,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2241.2456321093982,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.56,\"onlineExpGained\":531.415368561877,\"onlineMoneyMade\":1134143,\"onlineRunningTime\":16035.410000023632,\"pid\":82,\"ramUsage\":2.45,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[9271214,2,9,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1869.0082760259,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.56399999998,\"onlineExpGained\":429.40901240914775,\"onlineMoneyMade\":9271214,\"onlineRunningTime\":16035.410000023632,\"pid\":83,\"ramUsage\":2.45,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"the-hub\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":227,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"omega-net\",\"zb-institute\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":42,\"hackDifficulty\":14,\"minDifficulty\":14,\"moneyAvailable\":46595.79948885778,\"moneyMax\":4306533600,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":317,\"serverGrowth\":52}},\"comptek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-134493-CyberSec.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\")((())a\",\"reward\":{\"name\":\"CyberSec\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"comptek\",\"httpPortOpen\":false,\"ip\":\"25.8.3.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"ramUsage\":2.45,\"server\":\"comptek\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":96}}],\"serversOnNetwork\":[\"phantasy\",\"summit-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":64,\"hackDifficulty\":24.060000000000002,\"minDifficulty\":21,\"moneyAvailable\":983087206.982941,\"moneyMax\":6123988575,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":366,\"serverGrowth\":65}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":false,\"ip\":\"53.1.6.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"ramUsed\":14.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[3755602,2,5,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1684.459010844786,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.57,\"onlineExpGained\":380.83723207183925,\"onlineMoneyMade\":3755602,\"onlineRunningTime\":15971.410000023367,\"pid\":84,\"ramUsage\":2.45,\"server\":\"netlink\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[1599002,1,10,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2020.4824288574346,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.572,\"onlineExpGained\":460.98682574042346,\"onlineMoneyMade\":1599002,\"onlineRunningTime\":15971.410000023367,\"pid\":85,\"ramUsage\":2.45,\"server\":\"netlink\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[10247817,2,9,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1752.2498811289383,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.574,\"onlineExpGained\":413.30617444380465,\"onlineMoneyMade\":10247817,\"onlineRunningTime\":15971.410000023367,\"pid\":86,\"ramUsage\":2.45,\"server\":\"netlink\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,0,10,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2048.709167531255,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.57799999998,\"onlineExpGained\":494.1523945521252,\"onlineMoneyMade\":0,\"onlineRunningTime\":15971.410000023367,\"pid\":87,\"ramUsage\":2.45,\"server\":\"netlink\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[48673,3,11,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1816.8149000509468,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.58000000002,\"onlineExpGained\":437.30346574196693,\"onlineMoneyMade\":48673,\"onlineRunningTime\":15971.410000023367,\"pid\":88,\"ramUsage\":2.45,\"server\":\"netlink\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,1,15,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2527.491626409532,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.584,\"onlineExpGained\":561.1484853969406,\"onlineMoneyMade\":0,\"onlineRunningTime\":15971.410000023367,\"pid\":89,\"ramUsage\":2.45,\"server\":\"netlink\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"netlink\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":233,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"neo-net\",\"catalyst\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":26,\"minDifficulty\":26,\"moneyAvailable\":2562381536.467262,\"moneyMax\":6875000000,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":381,\"serverGrowth\":62}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-35962-CarmichaelSecurity.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[156,138,165,62,66,139,66,32,189,72,120,84],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-59820.cct\",\"type\":\"Total Ways to Sum\",\"data\":21,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-378987.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[9,[138,175,118,101,98,91,58,123,173,181]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":false,\"ip\":\"50.4.8.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"ramUsage\":2.45,\"server\":\"johnson-ortho\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":98}}],\"serversOnNetwork\":[\"phantasy\",\"rothman-uni\",\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":58,\"hackDifficulty\":19,\"minDifficulty\":19,\"moneyAvailable\":713429174.9156152,\"moneyMax\":1818745600,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":269,\"serverGrowth\":36}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":false,\"ip\":\"28.9.0.9\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"ramUsed\":2.45,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"n00dles\":[202851719,36633,4658,3963]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":173889.7005941272,\"offlineMoneyMade\":0,\"offlineRunningTime\":375928.568,\"onlineExpGained\":142161.82736144078,\"onlineMoneyMade\":202851719,\"onlineRunningTime\":316123.8100085719,\"pid\":90,\"ramUsage\":2.45,\"server\":\"n00dles\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"n00dles\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":234,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":9.064,\"minDifficulty\":1,\"moneyAvailable\":1750000,\"moneyMax\":1750000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":3000}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-629277.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[6,32,38,20,20],[44,44,43,44,24],[34,11,25,31,35],[19,12,10,35,19],[41,30,4,3,44],[20,24,17,22,34]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":false,\"ip\":\"40.8.0.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"ramUsed\":14.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"foodnstuff\":[490289160,16638,87528,21066]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":795549.9188203879,\"offlineMoneyMade\":0,\"offlineRunningTime\":375928.582,\"onlineExpGained\":712517.0250919766,\"onlineMoneyMade\":490289160,\"onlineRunningTime\":316123.8100085719,\"pid\":91,\"ramUsage\":2.45,\"server\":\"foodnstuff\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"foodnstuff\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":235,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":3.468,\"minDifficulty\":3,\"moneyAvailable\":0,\"moneyMax\":50000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":5}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-226311-CyberSec.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"33768591527\",76],\"reward\":{\"name\":\"CyberSec\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":false,\"ip\":\"56.7.8.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"ramUsed\":14.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"sigma-cosmetics\":[970599510,13158,70656,13686]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":673395.2779283569,\"offlineMoneyMade\":0,\"offlineRunningTime\":375928.597,\"onlineExpGained\":568011.6778551763,\"onlineMoneyMade\":970599510,\"onlineRunningTime\":316123.8100085719,\"pid\":92,\"ramUsage\":2.45,\"server\":\"sigma-cosmetics\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"sigma-cosmetics\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":236,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":100,\"minDifficulty\":3,\"moneyAvailable\":57500000,\"moneyMax\":57500000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":5,\"serverGrowth\":10}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":false,\"ip\":\"45.4.9.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"ramUsed\":14.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[121376508,13470,25560,18654]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":455175.8788943531,\"offlineMoneyMade\":0,\"offlineRunningTime\":375928.608,\"onlineExpGained\":377347.8633636251,\"onlineMoneyMade\":121376508,\"onlineRunningTime\":316123.8100085719,\"pid\":93,\"ramUsage\":2.45,\"server\":\"joesguns\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"joesguns\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":237,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":100,\"minDifficulty\":5,\"moneyAvailable\":62500000,\"moneyMax\":62500000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":10,\"serverGrowth\":20}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-752032.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[193,140,198,97,77,9],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-63345-Sector-12.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[12,1,49,28,3,6,12,24,27,1,20,26,38],[34,38,18,3,10,42,30,42,38,8,17,22,27],[48,8,3,5,13,42,11,4,13,6,39,26,50],[28,8,13,38,29,12,16,25,4,29,8,29,26],[2,19,26,13,10,33,37,34,20,7,4,40,39],[39,43,5,33,34,25,42,1,46,38,23,50,25],[5,17,18,34,49,20,25,31,40,44,6,14,43],[22,19,43,30,5,26,44,32,14,48,23,3,3],[34,10,28,2,3,30,12,46,49,14,21,12,10],[27,47,29,20,2,2,21,40,32,26,8,7,26],[44,5,34,15,14,24,34,37,16,35,5,2,8],[7,6,23,45,9,43,43,27,41,46,5,43,37],[5,24,14,45,12,28,47,43,36,14,29,36,42],[11,2,25,14,19,40,27,19,25,5,33,39,44],[45,45,31,25,27,21,10,35,8,3,42,46,25]],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-84469.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[51,42,170,99,113,18,29,53,32,188,117,10,148,94],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":false,\"ip\":\"78.5.6.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"ramUsed\":31.85,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"zer0\":[2743281720,8124,26064,4668]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":533602.8177341829,\"offlineMoneyMade\":0,\"offlineRunningTime\":375928.624,\"onlineExpGained\":419569.5510341321,\"onlineMoneyMade\":2743281720,\"onlineRunningTime\":312021.01000829035,\"pid\":94,\"ramUsage\":2.45,\"server\":\"zer0\",\"threads\":12,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[10988261,5,5,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1573.5112939311234,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.603,\"onlineExpGained\":435.2425509392449,\"onlineMoneyMade\":10988261,\"onlineRunningTime\":16075.610000023798,\"pid\":95,\"ramUsage\":2.45,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"zer0\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":239,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"harakiri-sushi\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":100,\"minDifficulty\":8,\"moneyAvailable\":187500000,\"moneyMax\":187500000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":75,\"serverGrowth\":40}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-108856-CarmichaelSecurity.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":516169086,\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":false,\"ip\":\"98.6.5.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"ramUsed\":14.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"nectar-net\":[1144554042,8562,36372,6438]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":568070.3579063658,\"offlineMoneyMade\":0,\"offlineRunningTime\":375928.642,\"onlineExpGained\":464277.4172572443,\"onlineMoneyMade\":1144554042,\"onlineRunningTime\":313590.8100083975,\"pid\":96,\"ramUsage\":2.45,\"server\":\"nectar-net\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"nectar-net\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":240,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"iron-gym\",\"silver-helix\",\"phantasy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":100,\"minDifficulty\":7,\"moneyAvailable\":68750000,\"moneyMax\":68750000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":20,\"serverGrowth\":25}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-391061.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[128,75,70,198,180,137,40,113,120,61,71,67,117,192,61,189,137,104,129,132,91,18,155,2,122,1,63,154],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-662022-Sector-12.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[9,[147,37,169,151,107,174,101,138,32,18,142,101,189,85,55,165,25,187,122,47,8,19,187,199,90,120,141,169,163,173,66,178,42,102,10,64,122,179,10,169,27,77,87]],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":false,\"ip\":\"68.7.8.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"ramUsed\":31.85,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"neo-net\":[1707172536,7668,37812,6684]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":698749.0610370673,\"offlineMoneyMade\":0,\"offlineRunningTime\":375928.657,\"onlineExpGained\":559787.7942827741,\"onlineMoneyMade\":1707172536,\"onlineRunningTime\":312021.01000829035,\"pid\":97,\"ramUsage\":2.45,\"server\":\"neo-net\",\"threads\":12,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[7450808,4,4,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1318.299634846151,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.61299999998,\"onlineExpGained\":394.43856178869066,\"onlineMoneyMade\":7450808,\"onlineRunningTime\":16056.61000002372,\"pid\":98,\"ramUsage\":2.45,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"neo-net\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":242,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"max-hardware\",\"netlink\",\"crush-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":25,\"hackDifficulty\":100,\"minDifficulty\":8,\"moneyAvailable\":125000000,\"moneyMax\":125000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":50,\"serverGrowth\":25}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-135253-Sector-12.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"7977931888\",74],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":false,\"ip\":\"75.9.5.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"ramUsed\":63.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"silver-helix\":[231744492,4032,15360,3204]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":311757.16402211733,\"offlineMoneyMade\":0,\"offlineRunningTime\":375928.67100000003,\"onlineExpGained\":284792.8152288077,\"onlineMoneyMade\":231744492,\"onlineRunningTime\":307746.0100079924,\"pid\":99,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":12,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[6219873,3,5,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1602.3641479162382,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.61599999998,\"onlineExpGained\":387.63789693026496,\"onlineMoneyMade\":6219873,\"onlineRunningTime\":16018.610000023564,\"pid\":100,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[0,1,11,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1996.7719507402926,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.61800000002,\"onlineExpGained\":448.1816361365228,\"onlineMoneyMade\":0,\"onlineRunningTime\":16018.610000023564,\"pid\":101,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[2698717,2,7,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1703.1825824976877,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.619,\"onlineExpGained\":402.570949133576,\"onlineMoneyMade\":2698717,\"onlineRunningTime\":16018.610000023564,\"pid\":102,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[1528,4,11,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2318.2174301577434,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.62099999998,\"onlineExpGained\":549.8315376002521,\"onlineMoneyMade\":1528,\"onlineRunningTime\":16018.610000023564,\"pid\":103,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,3,15,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2057.7000743613553,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.622,\"onlineExpGained\":510.18737669896143,\"onlineMoneyMade\":0,\"onlineRunningTime\":16018.610000023564,\"pid\":104,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,4,15,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2329.096848735353,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.624,\"onlineExpGained\":543.6125952282863,\"onlineMoneyMade\":0,\"onlineRunningTime\":16018.610000023564,\"pid\":105,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[3119020,4,14,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1885.7444765327728,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.626,\"onlineExpGained\":487.2332090167667,\"onlineMoneyMade\":3119020,\"onlineRunningTime\":16018.610000023564,\"pid\":106,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[5856293,2,12,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1390.3649688098244,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.628,\"onlineExpGained\":404.06642438810127,\"onlineMoneyMade\":5856293,\"onlineRunningTime\":16018.610000023564,\"pid\":107,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[1925474,1,10,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":911.5686650713226,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.63,\"onlineExpGained\":315.43160540928835,\"onlineMoneyMade\":1925474,\"onlineRunningTime\":16018.610000023564,\"pid\":108,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,120,0,53]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1159.6468756250001,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.631,\"onlineExpGained\":287.25,\"onlineMoneyMade\":0,\"onlineRunningTime\":16018.610000023564,\"pid\":109,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[17168878,6,9,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1763.9478324234526,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.63199999998,\"onlineExpGained\":452.22837647614693,\"onlineMoneyMade\":17168878,\"onlineRunningTime\":16018.610000023564,\"pid\":110,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,12,35,31]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3848.852749434557,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.63400000002,\"onlineExpGained\":901.0496180412505,\"onlineMoneyMade\":0,\"onlineRunningTime\":16018.610000023564,\"pid\":111,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[3318388,17,45,37]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4889.764508199127,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.636,\"onlineExpGained\":1098.447118598289,\"onlineMoneyMade\":3318388,\"onlineRunningTime\":16018.610000023564,\"pid\":112,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[45,26,73,63]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5403.392376423103,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.63799999998,\"onlineExpGained\":1353.8379705710688,\"onlineMoneyMade\":45,\"onlineRunningTime\":16018.610000023564,\"pid\":113,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"silver-helix\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":257,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"nectar-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":29.752,\"minDifficulty\":10,\"moneyAvailable\":245151.38071841616,\"moneyMax\":1125000000,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":150,\"serverGrowth\":30}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":false,\"ip\":\"4.9.8.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"ramUsed\":14.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"hong-fang-tea\":[929232282,6792,32094,5292]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":415514.1105286322,\"offlineMoneyMade\":0,\"offlineRunningTime\":375928.70499999996,\"onlineExpGained\":332681.57893120387,\"onlineMoneyMade\":929232282,\"onlineRunningTime\":316123.8100085719,\"pid\":114,\"ramUsage\":2.45,\"server\":\"hong-fang-tea\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"hong-fang-tea\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":258,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"max-hardware\",\"CSEC\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":100,\"minDifficulty\":5,\"moneyAvailable\":75000000,\"moneyMax\":75000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":30,\"serverGrowth\":20}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-642063.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[8,11],[9,10],[15,19],[17,20],[12,18],[14,22],[6,10],[12,15],[24,29],[5,14],[18,19],[15,24]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":false,\"ip\":\"32.9.7.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"ramUsed\":14.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"harakiri-sushi\":[2025916038,9828,25260,4392]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":379079.4777661734,\"offlineMoneyMade\":0,\"offlineRunningTime\":375928.72,\"onlineExpGained\":298409.0420645437,\"onlineMoneyMade\":2025916038,\"onlineRunningTime\":316123.8100085719,\"pid\":115,\"ramUsage\":2.45,\"server\":\"harakiri-sushi\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"harakiri-sushi\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":259,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"zer0\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":100,\"minDifficulty\":5,\"moneyAvailable\":100000000,\"moneyMax\":100000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":40,\"serverGrowth\":40}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-422383.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[19,26],[22,27],[5,13],[5,15],[22,29],[23,30],[3,11],[13,23],[17,24],[2,5],[14,24]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-666649-CyberSec.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[62,131,6,93,160,96,97,158,46,56,68,74,24,184,199,40,115,187,95,88,86,55,139,177,121,175,168,54,91,80,113,14,11,176,109,129,52,24,148,83,129,51,26,174,138,67,177],\"reward\":{\"name\":\"CyberSec\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":false,\"ip\":\"51.7.5.0\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"ramUsed\":31.85,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"phantasy\":[7411873344,6780,26784,5688]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":409715.3796801465,\"offlineMoneyMade\":0,\"offlineRunningTime\":375928.73199999996,\"onlineExpGained\":364355.7428203183,\"onlineMoneyMade\":7411873344,\"onlineRunningTime\":307746.0100079924,\"pid\":116,\"ramUsage\":2.45,\"server\":\"phantasy\",\"threads\":12,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[6220930,2,5,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1289.4472621025284,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.647,\"onlineExpGained\":374.03656721341355,\"onlineMoneyMade\":6220930,\"onlineRunningTime\":16025.410000023592,\"pid\":117,\"ramUsage\":2.45,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"phantasy\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":261,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"nectar-net\",\"comptek\",\"johnson-ortho\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":46.568000000000005,\"minDifficulty\":7,\"moneyAvailable\":852732.4401454675,\"moneyMax\":600000000,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":100,\"serverGrowth\":35}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-978774.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[7],[3,1],[8,1,6],[9,1,4,7],[9,9,5,1,9],[8,5,1,3,8,4],[1,5,3,7,3,2,5]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-993635.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[184,156,7,131,101,199,188,163,71,66,76,191,41,4,167,192,44,87,71,25,98,158,69,89,75,137,23,14,93,3,32,193,145,164,86,173,124,84,59,78,188,71,70,80],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":false,\"ip\":\"45.1.6.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"ramUsed\":31.85,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"max-hardware\":[4443534456,9432,30804,5016]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":450234.98832183715,\"offlineMoneyMade\":0,\"offlineRunningTime\":375928.748,\"onlineExpGained\":347764.7614255893,\"onlineMoneyMade\":4443534456,\"onlineRunningTime\":312021.01000829035,\"pid\":118,\"ramUsage\":2.45,\"server\":\"max-hardware\",\"threads\":12,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[6091519,3,5,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1400.3955055954493,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.65099999998,\"onlineExpGained\":401.23922664711637,\"onlineMoneyMade\":6091519,\"onlineRunningTime\":16081.410000023823,\"pid\":119,\"ramUsage\":2.45,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"max-hardware\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":263,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"hong-fang-tea\",\"neo-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":15,\"hackDifficulty\":100,\"minDifficulty\":5,\"moneyAvailable\":250000000,\"moneyMax\":250000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":80,\"serverGrowth\":30}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":false,\"ip\":\"98.1.7.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"ramUsed\":31.85,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"omega-net\":[205643772,4428,11508,2652]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":269476.5708360063,\"offlineMoneyMade\":0,\"offlineRunningTime\":375928.762,\"onlineExpGained\":243939.87587856204,\"onlineMoneyMade\":205643772,\"onlineRunningTime\":307746.0100079924,\"pid\":120,\"ramUsage\":2.45,\"server\":\"omega-net\",\"threads\":12,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[4243059,2,6,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1515.806441238953,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.65399999998,\"onlineExpGained\":394.43856178869066,\"onlineMoneyMade\":4243059,\"onlineRunningTime\":16015.21000002355,\"pid\":121,\"ramUsage\":2.45,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"omega-net\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":265,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"CSEC\",\"the-hub\",\"avmnite-02h\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":31,\"hackDifficulty\":10,\"minDifficulty\":10,\"moneyAvailable\":136308136.5337493,\"moneyMax\":1526324475,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":183,\"serverGrowth\":36}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-522757.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[7],[5,1],[8,7,4],[4,3,2,3],[4,7,9,1,1],[7,1,4,6,9,5],[7,5,7,5,4,7,8],[2,6,9,9,5,7,9,9],[1,9,4,1,9,4,5,6,5],[6,7,2,2,8,4,8,1,2,3],[7,1,9,5,1,8,4,4,8,4,9]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":false,\"ip\":\"85.7.8.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"ramUsage\":2.45,\"server\":\"crush-fitness\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":112}}],\"serversOnNetwork\":[\"neo-net\",\"syscore\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":41,\"hackDifficulty\":33.752,\"minDifficulty\":14,\"moneyAvailable\":42066833.061821364,\"moneyMax\":1464360325,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":249,\"serverGrowth\":27}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-826556-CarmichaelSecurity.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,1,0,0,1,0],[0,0,0,0,1,0,0,0]],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-46818.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[3,[149,178,17,32,36,164,10,108,171,25,127]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-613344-CyberSec.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":914201880,\"reward\":{\"name\":\"CyberSec\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":false,\"ip\":\"2.2.1.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"ramUsed\":31.85,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"iron-gym\":[1807356,49,1495,389]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":27753.14987964828,\"offlineMoneyMade\":0,\"offlineRunningTime\":375928.775,\"onlineExpGained\":23848.856154938196,\"onlineMoneyMade\":1807356,\"onlineRunningTime\":313576.21000839653,\"pid\":122,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[3089624,3,6,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1507.676500481101,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.65899999999,\"onlineExpGained\":414.8405563639678,\"onlineMoneyMade\":3089624,\"onlineRunningTime\":16166.610000024179,\"pid\":123,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[14945465,7,13,4]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2822.7953338986604,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.662,\"onlineExpGained\":601.8439113833307,\"onlineMoneyMade\":14945465,\"onlineRunningTime\":16166.610000024179,\"pid\":124,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[16874389,4,8,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2226.3300771477034,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.662,\"onlineExpGained\":450.87946302960506,\"onlineMoneyMade\":16874389,\"onlineRunningTime\":16166.610000024179,\"pid\":125,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,2,12,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2149.368926687419,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.666,\"onlineExpGained\":501.11228743314103,\"onlineMoneyMade\":0,\"onlineRunningTime\":16166.610000024179,\"pid\":126,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,4,10,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1361.85628100115,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.667,\"onlineExpGained\":409.27119229696905,\"onlineMoneyMade\":0,\"onlineRunningTime\":16166.610000024179,\"pid\":127,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,3,13,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2311.2860989133937,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.669,\"onlineExpGained\":526.0767050596319,\"onlineMoneyMade\":0,\"onlineRunningTime\":16166.610000024179,\"pid\":128,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[46340,2,9,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1621.265591001306,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.66999999998,\"onlineExpGained\":400.04410845587165,\"onlineMoneyMade\":46340,\"onlineRunningTime\":16166.610000024179,\"pid\":129,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[5856293,3,14,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1951.7683331952603,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.672,\"onlineExpGained\":461.79019930068716,\"onlineMoneyMade\":5856293,\"onlineRunningTime\":16166.610000024179,\"pid\":130,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[0,0,7,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":623.1079127321339,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.674,\"onlineExpGained\":237.71657219250713,\"onlineMoneyMade\":0,\"onlineRunningTime\":16166.610000024179,\"pid\":131,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,121,0,54]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1184.1187503125,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.675,\"onlineExpGained\":288.75,\"onlineMoneyMade\":0,\"onlineRunningTime\":16166.610000024179,\"pid\":132,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[7092458,3,9,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1357.412438552893,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.677,\"onlineExpGained\":347.8679819047283,\"onlineMoneyMade\":7092458,\"onlineRunningTime\":16166.610000024179,\"pid\":133,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[4345319,11,36,31]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3967.507125129322,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.679,\"onlineExpGained\":913.9217554418397,\"onlineMoneyMade\":4345319,\"onlineRunningTime\":16166.610000024179,\"pid\":134,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"iron-gym\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":278,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nexport async function main(ns) {\\n\\tvar scriptName = \\\"autoHack.js\\\";\\n\\tvar vers = \\\"v1\\\";\\n\\tvar host = ns.getHostname();\\n\\tvar scriptRam = 2.6;\\n\\tns.tprint(\\\"script to copy/run = \\\" + scriptName + \\\"(ram: \\\" + scriptRam + \\\")\\\");\\n\\n\\tif (ns.args.length > 0) {\\n\\t\\tvar targets = ns.args;\\n\\t}\\n\\telse {\\n\\t\\tvar allServers = ns.scan();\\n\\t\\tvar targets = [];\\n\\n\\t\\tfor (let i = 0; i < allServers.length; i++) {\\n\\t\\t\\tvar server = allServers[i];\\n\\t\\t\\tif (!server.startsWith(\\\"pserv\\\") && !server.startsWith(\\\"undefined\\\")) {\\n\\t\\t\\t\\ttargets.push(server);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t}\\n\\tns.tprint(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": targets = \\\" + targets);\\n\\n\\tfor (let i = 0; i < targets.length; i++) {\\n\\t\\tvar target = targets[i];\\n\\t\\tif (ns.getServerNumPortsRequired(target) == 0) {\\n\\t\\t\\tns.kill(scriptName, target);\\n\\t\\t\\tvar targetRam = ns.getServerMaxRam(target) - ns.getServerUsedRam(target);\\n\\t\\t\\tawait ns.scp(scriptName, target);\\n\\t\\t\\tvar threads = Math.floor(targetRam / scriptRam);\\n\\t\\t\\tns.tprint(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": nuking \\\" + target);\\n\\t\\t\\tns.nuke(target);\\n\\t\\t\\tif (threads > 0) {\\n\\t\\t\\t\\tns.tprint(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running \\\" + scriptName + \\\" on \\\" + target);\\n\\t\\t\\t\\tns.exec(scriptName, target, threads);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tns.tprint(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\"not enough ram (\\\" + targetRam + \\\")\\\");\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t}\\n\\t\\tawait ns.sleep(100000)\\n}\",\"filename\":\"copyRun_autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"copyRun_autoHack.js\",\"url\":\"blob:file:///1308c6ed-3147-4a92-9102-c4da6126131e\"}],\"ramUsage\":4.5,\"server\":\"iron-gym\",\"_hash\":\"4a0216f1dd08791fd89bc8aa70b1057f7bda35127a6fb1b9075ce8ec33f007c1\",\"moduleSequenceNumber\":114}}],\"serversOnNetwork\":[\"home\",\"nectar-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":30,\"hackDifficulty\":100,\"minDifficulty\":10,\"moneyAvailable\":500000000,\"moneyMax\":500000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":100,\"serverGrowth\":20}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-538904-CarmichaelSecurity.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[4,12],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-313720.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[9,1,3,6,-5,-8,-6,4,-2,8,8,-1,10,6,2,-7,7,-7,3,9,-3,-10,3],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":false,\"ip\":\"33.5.4.5\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"ramUsed\":249.9,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"millenium-fitness\":[366611736,228,588,528]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":57925.96853330506,\"offlineMoneyMade\":0,\"offlineRunningTime\":327097.367,\"onlineExpGained\":25837.962808308657,\"onlineMoneyMade\":366611736,\"onlineRunningTime\":84549.80999959081,\"pid\":135,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":12,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[11772213,6,15,15]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3868.342882914795,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.683,\"onlineExpGained\":1101.7077070649636,\"onlineMoneyMade\":11772213,\"onlineRunningTime\":15993.010000023458,\"pid\":136,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[1777296,6,27,21]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5816.977845588381,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.685,\"onlineExpGained\":1402.1682616271216,\"onlineMoneyMade\":1777296,\"onlineRunningTime\":15993.010000023458,\"pid\":137,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[106948041,21,24,21]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6260.397181066292,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.686,\"onlineExpGained\":1545.8724446729323,\"onlineMoneyMade\":106948041,\"onlineRunningTime\":15993.010000023458,\"pid\":138,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,9,30,18]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5791.7934401123,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.688,\"onlineExpGained\":1398.938469084186,\"onlineMoneyMade\":0,\"onlineRunningTime\":15993.010000023458,\"pid\":139,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,6,42,18]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5450.449446951143,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.69,\"onlineExpGained\":1379.1878534938958,\"onlineMoneyMade\":0,\"onlineRunningTime\":15993.010000023458,\"pid\":140,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,12,36,24]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6308.252566280576,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.693,\"onlineExpGained\":1490.5506643356239,\"onlineMoneyMade\":0,\"onlineRunningTime\":15993.010000023458,\"pid\":141,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[3906525,6,33,18]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5200.2870054844225,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.695,\"onlineExpGained\":1246.2912609586772,\"onlineMoneyMade\":3906525,\"onlineRunningTime\":15993.010000023458,\"pid\":142,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[0,3,21,27]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3375.1693282430074,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.697,\"onlineExpGained\":995.7351172421068,\"onlineMoneyMade\":0,\"onlineRunningTime\":15993.010000023458,\"pid\":143,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[4464111,9,21,15]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2152.854889151937,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.699,\"onlineExpGained\":850.2938928424292,\"onlineMoneyMade\":4464111,\"onlineRunningTime\":15993.010000023458,\"pid\":144,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,351,0,165]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3638.0071,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.699,\"onlineExpGained\":873,\"onlineMoneyMade\":0,\"onlineRunningTime\":15993.010000023458,\"pid\":145,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[1940127,9,24,21]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4532.823989643868,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.701,\"onlineExpGained\":1133.0557124896861,\"onlineMoneyMade\":1940127,\"onlineRunningTime\":15993.010000023458,\"pid\":146,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[162,27,96,87]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12223.859058927808,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.703,\"onlineExpGained\":2558.3373083671236,\"onlineMoneyMade\":162,\"onlineRunningTime\":15993.010000023458,\"pid\":147,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[10045608,36,96,99]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":11819.039166000404,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.705,\"onlineExpGained\":2636.2730846358927,\"onlineMoneyMade\":10045608,\"onlineRunningTime\":15993.010000023458,\"pid\":148,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[6214503,84,228,201]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18855.583831679487,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.707,\"onlineExpGained\":4307.453335432864,\"onlineMoneyMade\":6214503,\"onlineRunningTime\":15993.010000023458,\"pid\":149,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[0,12,57,51]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8247.567798090993,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.70799999998,\"onlineExpGained\":1830.4635551727215,\"onlineMoneyMade\":0,\"onlineRunningTime\":15993.010000023458,\"pid\":150,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[0,12,42,33]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6269.637925286137,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.71,\"onlineExpGained\":1326.3874657033803,\"onlineMoneyMade\":0,\"onlineRunningTime\":15993.010000023458,\"pid\":151,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,369,0,255]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4679.200812499999,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.713,\"onlineExpGained\":1095.75,\"onlineMoneyMade\":0,\"onlineRunningTime\":15993.010000023458,\"pid\":152,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,6,45,36]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8327.319750345814,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.715,\"onlineExpGained\":1787.415014153078,\"onlineMoneyMade\":0,\"onlineRunningTime\":15993.010000023458,\"pid\":153,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,117,129,117]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12417.108857858439,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.718,\"onlineExpGained\":3033.567762591204,\"onlineMoneyMade\":0,\"onlineRunningTime\":15993.010000023458,\"pid\":154,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,72,87,81]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7956.453041191729,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.71899999998,\"onlineExpGained\":2047.0416609355257,\"onlineMoneyMade\":0,\"onlineRunningTime\":15993.010000023458,\"pid\":155,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,81,93,84]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5842.188656995763,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.721,\"onlineExpGained\":1533.9818236772135,\"onlineMoneyMade\":0,\"onlineRunningTime\":15993.010000023458,\"pid\":156,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,48,57,57]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6164.639628085185,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.722,\"onlineExpGained\":1610.0096338312053,\"onlineMoneyMade\":0,\"onlineRunningTime\":15993.010000023458,\"pid\":157,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,33,0,138]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2374.83133421875,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.724,\"onlineExpGained\":524.25,\"onlineMoneyMade\":0,\"onlineRunningTime\":15993.010000023458,\"pid\":158,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,489,486,477]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34923.7960475138,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.72499999998,\"onlineExpGained\":8439.816345478735,\"onlineMoneyMade\":0,\"onlineRunningTime\":15993.010000023458,\"pid\":159,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,1665,1662,1278]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43138.68985851608,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.728,\"onlineExpGained\":11137.568101636307,\"onlineMoneyMade\":0,\"onlineRunningTime\":15993.010000023458,\"pid\":160,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,1371,1368,1368]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":78651.62245439521,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.728,\"onlineExpGained\":19040.715490988106,\"onlineMoneyMade\":0,\"onlineRunningTime\":15993.010000023458,\"pid\":161,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,759,765,753]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43815.92254357756,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.72999999998,\"onlineExpGained\":10561.683111566455,\"onlineMoneyMade\":0,\"onlineRunningTime\":15993.010000023458,\"pid\":162,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,267,276,273]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":23707.919948583316,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.73200000002,\"onlineExpGained\":5790.116718428505,\"onlineMoneyMade\":0,\"onlineRunningTime\":15993.010000023458,\"pid\":163,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,186,201,192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":14051.631325423725,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.734,\"onlineExpGained\":3441.251999884241,\"onlineMoneyMade\":0,\"onlineRunningTime\":15993.010000023458,\"pid\":164,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,144,159,159]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10929.425897704283,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.737,\"onlineExpGained\":2758.8342304156713,\"onlineMoneyMade\":0,\"onlineRunningTime\":15993.010000023458,\"pid\":165,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":309,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"rothman-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":48,\"hackDifficulty\":16,\"minDifficulty\":16,\"moneyAvailable\":163620155.16855884,\"moneyMax\":6250000000,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":522,\"serverGrowth\":28}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-423081-CarmichaelSecurity.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"(()a(a())a))()((\",\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":false,\"ip\":\"84.7.2.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":63,\"hackDifficulty\":63,\"minDifficulty\":21,\"moneyAvailable\":900000000,\"moneyMax\":22500000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1074,\"serverGrowth\":57}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-469719.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[9,-1,7,0,-9,8],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-140955-CarmichaelSecurity.cct\",\"type\":\"Array Jumping Game\",\"data\":[9,8,0,4,10,5,3,6,0,3,0,0,7,8,2,5,0,0,8,9,6,0,0],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-955626.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[10,14],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-397784.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"((a)(a(a)()aa\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-581663-TheBlackHand.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"()a)(a())((())((((\",\"reward\":{\"name\":\"The Black Hand\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"snap-fitness\",\"httpPortOpen\":true,\"ip\":\"24.9.2.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"ramUsage\":2.45,\"server\":\"snap-fitness\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":116}}],\"serversOnNetwork\":[\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":49,\"hackDifficulty\":16,\"minDifficulty\":16,\"moneyAvailable\":11250000000,\"moneyMax\":11250000000,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":791,\"serverGrowth\":42}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-810052.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[30,20,47,9,39,39,21,33],[16,31,10,3,29,14,7,20],[44,41,9,35,6,39,1,18],[23,8,30,41,29,17,23,16],[30,19,2,22,15,40,8,11],[18,12,32,19,34,14,25,26],[12,40,31,38,18,36,32,21],[15,1,10,50,35,21,32,2],[12,28,37,47,9,47,25,32],[29,49,29,22,40,29,46,39],[17,16,9,27,23,20,19,46],[30,40,13,32,21,10,17,42],[11,30,2,23,8,16,17,41]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-291999.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[6,16],[12,20],[25,26],[3,10],[2,7],[10,20],[1,7],[10,18],[5,7],[20,28],[10,13],[10,14],[9,16],[9,14],[16,23],[12,13]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"run4theh111z\",\"httpPortOpen\":false,\"ip\":\"20.4.4.7\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"infocomm\",\"helios\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":518,\"serverGrowth\":0}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-584453-CarmichaelSecurity.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[7,12],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":false,\"ip\":\"94.6.8.6\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"ramUsed\":249.9,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"I.I.I.I\":[0,9276,0,3108]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":47306.106858969615,\"offlineMoneyMade\":0,\"offlineRunningTime\":327097.427,\"onlineExpGained\":19170,\"onlineMoneyMade\":0,\"onlineRunningTime\":84549.80999959081,\"pid\":166,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":12,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[34638285,15,15,15]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4980.213572967645,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.739,\"onlineExpGained\":1326.1296473930117,\"onlineMoneyMade\":34638285,\"onlineRunningTime\":16001.410000023492,\"pid\":167,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[0,3,33,21]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6071.813203603692,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.742,\"onlineExpGained\":1440.5838304388235,\"onlineMoneyMade\":0,\"onlineRunningTime\":16001.410000023492,\"pid\":168,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[81881655,15,27,21]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6260.399918548746,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.744,\"onlineExpGained\":1465.358254846217,\"onlineMoneyMade\":81881655,\"onlineRunningTime\":16001.410000023492,\"pid\":169,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,3,27,18]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5791.795992073023,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.74599999998,\"onlineExpGained\":1315.4197545119957,\"onlineMoneyMade\":0,\"onlineRunningTime\":16001.410000023492,\"pid\":170,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[53492085,6,39,15]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5450.45179115001,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.74699999997,\"onlineExpGained\":1311.9103972259009,\"onlineMoneyMade\":53492085,\"onlineRunningTime\":16001.410000023492,\"pid\":171,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[15,9,42,24]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7040.7319496501605,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.74899999998,\"onlineExpGained\":1648.3736758535138,\"onlineMoneyMade\":15,\"onlineRunningTime\":16001.410000023492,\"pid\":172,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[10350627,12,45,15]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5600.257517150374,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.75,\"onlineExpGained\":1554.0174982324243,\"onlineMoneyMade\":10350627,\"onlineRunningTime\":16001.410000023492,\"pid\":173,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[70308,12,30,27]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3558.84655338661,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.753,\"onlineExpGained\":1197.7683294361575,\"onlineMoneyMade\":70308,\"onlineRunningTime\":16001.410000023492,\"pid\":174,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[125712,9,15,15]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2152.8558053512256,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.753,\"onlineExpGained\":740.5785518305029,\"onlineMoneyMade\":125712,\"onlineRunningTime\":16001.410000023492,\"pid\":175,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,303,0,153]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3444.6633390625,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.755,\"onlineExpGained\":807.75,\"onlineMoneyMade\":0,\"onlineRunningTime\":16001.410000023492,\"pid\":176,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[3015918,3,36,18]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4469.57402336966,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.75699999998,\"onlineExpGained\":1207.5988514692708,\"onlineMoneyMade\":3015918,\"onlineRunningTime\":16001.410000023492,\"pid\":177,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[42,39,111,90]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10295.85057039299,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.76,\"onlineExpGained\":2770.727575476847,\"onlineMoneyMade\":42,\"onlineRunningTime\":16001.410000023492,\"pid\":178,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,27,114,117]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12646.644798493056,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.761,\"onlineExpGained\":3022.29878631472,\"onlineMoneyMade\":0,\"onlineRunningTime\":16001.410000023492,\"pid\":179,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[6257118,84,210,201]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":15325.867067420075,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.763,\"onlineExpGained\":4131.782318490252,\"onlineMoneyMade\":6257118,\"onlineRunningTime\":16001.410000023492,\"pid\":180,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[12,12,66,45]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8648.405416134194,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.767,\"onlineExpGained\":1902.718695508487,\"onlineMoneyMade\":12,\"onlineRunningTime\":16001.410000023492,\"pid\":181,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[0,18,45,42]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6269.640720149643,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.76799999998,\"onlineExpGained\":1547.4520433206108,\"onlineMoneyMade\":0,\"onlineRunningTime\":16001.410000023492,\"pid\":182,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,411,0,267]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4717.386585625,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.77000000002,\"onlineExpGained\":1163.25,\"onlineMoneyMade\":0,\"onlineRunningTime\":16001.410000023492,\"pid\":183,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,3,42,45]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8122.367749034527,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.771,\"onlineExpGained\":1932.3405558411653,\"onlineMoneyMade\":0,\"onlineRunningTime\":16001.410000023492,\"pid\":184,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[1412988,111,132,117]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12496.699994519648,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.773,\"onlineExpGained\":3082.8940676739876,\"onlineMoneyMade\":1412988,\"onlineRunningTime\":16001.410000023492,\"pid\":185,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,72,87,81]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8036.042412039725,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.775,\"onlineExpGained\":2055.262711782656,\"onlineMoneyMade\":0,\"onlineRunningTime\":16001.410000023492,\"pid\":186,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,75,96,84]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5955.119623601074,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.777,\"onlineExpGained\":1545.6470846937702,\"onlineMoneyMade\":0,\"onlineRunningTime\":16001.410000023492,\"pid\":187,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,54,57,57]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6164.642319280625,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.778,\"onlineExpGained\":1610.0096338312053,\"onlineMoneyMade\":0,\"onlineRunningTime\":16001.410000023492,\"pid\":188,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,51,0,147]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2327.1026525,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.77899999998,\"onlineExpGained\":558,\"onlineMoneyMade\":0,\"onlineRunningTime\":16001.410000023492,\"pid\":189,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,486,489,477]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35093.20382082583,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.781,\"onlineExpGained\":8457.314237003571,\"onlineMoneyMade\":0,\"onlineRunningTime\":16001.410000023492,\"pid\":190,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,1662,1665,1278]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43210.98956021486,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.783,\"onlineExpGained\":11145.034627737963,\"onlineMoneyMade\":0,\"onlineRunningTime\":16001.410000023492,\"pid\":191,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,1374,1374,1365]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":78876.17432049918,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.785,\"onlineExpGained\":19063.907592682368,\"onlineMoneyMade\":0,\"onlineRunningTime\":16001.410000023492,\"pid\":192,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,759,762,753]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43636.32849445469,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.78699999998,\"onlineExpGained\":10543.12943021105,\"onlineMoneyMade\":0,\"onlineRunningTime\":16001.410000023492,\"pid\":193,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,255,285,273]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":24252.131201241362,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.78999999998,\"onlineExpGained\":5853.358284527847,\"onlineMoneyMade\":0,\"onlineRunningTime\":16001.410000023492,\"pid\":194,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[882096,186,210,192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":14503.351290868277,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.791,\"onlineExpGained\":3511.243565983582,\"onlineMoneyMade\":882096,\"onlineRunningTime\":16001.410000023492,\"pid\":195,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,150,159,159]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10985.894767983074,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.793,\"onlineExpGained\":2764.66686092395,\"onlineMoneyMade\":0,\"onlineRunningTime\":16001.410000023492,\"pid\":196,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":340,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"johnson-ortho\",\"rho-construction\",\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":4.058,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":349,\"serverGrowth\":0}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-498091.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[193,25,182,6,99,9,153,64,81,67,105,59,84,140,24,103,115,159,49,179,188,70,22,1,197,39,76,171,5,188,195],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":false,\"ip\":\"23.4.7.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"ramUsed\":14.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[4932633,3,5,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1684.461925685307,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.79499999998,\"onlineExpGained\":380.83723207183925,\"onlineMoneyMade\":4932633,\"onlineRunningTime\":16042.21000002366,\"pid\":197,\"ramUsage\":2.45,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[2392616,3,12,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2349.905299214298,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.796,\"onlineExpGained\":531.415368561877,\"onlineMoneyMade\":2392616,\"onlineRunningTime\":16042.21000002366,\"pid\":198,\"ramUsage\":2.45,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[24079271,4,7,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1836.9274522565752,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.798,\"onlineExpGained\":445.51185037449073,\"onlineMoneyMade\":24079271,\"onlineRunningTime\":16042.21000002366,\"pid\":199,\"ramUsage\":2.45,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,1,12,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2318.220593042397,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.799,\"onlineExpGained\":549.8315376002521,\"onlineMoneyMade\":0,\"onlineRunningTime\":16042.21000002366,\"pid\":200,\"ramUsage\":2.45,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,0,13,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1962.5582821051999,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.80099999998,\"onlineExpGained\":487.7615579429631,\"onlineMoneyMade\":0,\"onlineRunningTime\":16042.21000002366,\"pid\":201,\"ramUsage\":2.45,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,2,16,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2527.495873991817,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.802,\"onlineExpGained\":590.3749690113646,\"onlineMoneyMade\":0,\"onlineRunningTime\":16042.21000002366,\"pid\":202,\"ramUsage\":2.45,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"avmnite-02h\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":346,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":10.882,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":203,\"serverGrowth\":0}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-975447-CarmichaelSecurity.cct\",\"type\":\"Array Jumping Game\",\"data\":[3,3,0,1,9,0,1,10,10,3],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-380628-CarmichaelSecurity.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[8,7],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\".\",\"httpPortOpen\":false,\"ip\":\"87.4.7.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"vitalife\",\"clarkinc\",\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":508,\"serverGrowth\":0}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-185416-CyberSec.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[15,22],[13,20],[21,25],[18,27],[2,4],[1,3],[8,15],[3,5],[1,6],[4,9],[11,15],[3,4],[24,27],[5,6]],\"reward\":{\"name\":\"CyberSec\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-795773-CarmichaelSecurity.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\")a)a(a)(aa)((((a((((\",\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-593808.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[175,185,31,95,24,145],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-392688-TheBlackHand.cct\",\"type\":\"Array Jumping Game\",\"data\":[0,3,0,3,3,5,4,0,7,0,6],\"reward\":{\"name\":\"The Black Hand\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":false,\"ip\":\"32.6.2.4\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[15763955,6,5,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1602.3665007573718,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.804,\"onlineExpGained\":469.2458752313734,\"onlineMoneyMade\":15763955,\"onlineRunningTime\":16088.210000023852,\"pid\":203,\"ramUsage\":2.45,\"server\":\"CSEC\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[354876,2,14,4]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2276.067892203886,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.805,\"onlineExpGained\":505.80498935407576,\"onlineMoneyMade\":354876,\"onlineRunningTime\":16088.210000023852,\"pid\":204,\"ramUsage\":2.45,\"server\":\"CSEC\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[9038999,2,8,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1631.9720261102152,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.80800000002,\"onlineExpGained\":391.83572382334734,\"onlineMoneyMade\":9038999,\"onlineRunningTime\":16088.210000023852,\"pid\":205,\"ramUsage\":2.45,\"server\":\"CSEC\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"CSEC\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":349,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"hong-fang-tea\",\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":66.84400000000001,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":57,\"serverGrowth\":0}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-264776-CyberSec.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\")(a(()\",\"reward\":{\"name\":\"CyberSec\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-330315-Sector-12.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[3],[3,1],[5,9,7],[9,2,7,9],[3,1,9,3,8],[9,1,5,5,6,6]],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"The-Cave\",\"httpPortOpen\":false,\"ip\":\"88.0.8.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":925,\"serverGrowth\":0}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"29.2.7.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":3000,\"serverGrowth\":0}},\"pserv-0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-0\",\"httpPortOpen\":false,\"ip\":\"3.6.7.5\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}],\"ramUsage\":2.45,\"server\":\"pserv-0\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":120}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-1\",\"httpPortOpen\":false,\"ip\":\"5.1.0.7\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,5925960,6024726,5893038]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":496028204.16904753,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.809,\"onlineExpGained\":104267870.84529217,\"onlineMoneyMade\":0,\"onlineRunningTime\":18056.61000003218,\"pid\":206,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,20049498,20115342,15901326]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":608251345.4124072,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.811,\"onlineExpGained\":136153074.11208427,\"onlineMoneyMade\":0,\"onlineRunningTime\":18056.61000003218,\"pid\":207,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,16790220,16888986,16888986]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1113943301.4736104,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.814,\"onlineExpGained\":234861942.42057765,\"onlineMoneyMade\":0,\"onlineRunningTime\":18056.61000003218,\"pid\":208,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[542.9999324120793,9284004,9415692,9284004]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":619797329.3318037,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.815,\"onlineExpGained\":130258281.45952581,\"onlineMoneyMade\":542.9999324120793,\"onlineRunningTime\":18056.61000003218,\"pid\":209,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,3325122,3456810,3358044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":341540184.6328546,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.81699999998,\"onlineExpGained\":71946008.77412155,\"onlineMoneyMade\":0,\"onlineRunningTime\":18056.61000003218,\"pid\":210,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1200000000,2370384,2436228,2403306]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":227939694.41207325,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.819,\"onlineExpGained\":45381166.62327338,\"onlineMoneyMade\":1200000000,\"onlineRunningTime\":18056.61000003218,\"pid\":211,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,1777788,2041164,1942398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":160216105.36399597,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.821,\"onlineExpGained\":34435920.512441635,\"onlineMoneyMade\":0,\"onlineRunningTime\":18056.61000003218,\"pid\":212,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[1500000000,1349802,1547334,1481490]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":207008931.87464362,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.82299999997,\"onlineExpGained\":40598015.398385145,\"onlineMoneyMade\":1500000000,\"onlineRunningTime\":18056.61000003218,\"pid\":213,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[1500000000,954738,1053504,987660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":134476498.95019984,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.82299999997,\"onlineExpGained\":27335997.034912687,\"onlineMoneyMade\":1500000000,\"onlineRunningTime\":18056.61000003218,\"pid\":214,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[250000000,855972,1086426,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":79603194.9397504,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.82499999998,\"onlineExpGained\":18434098.71297991,\"onlineMoneyMade\":250000000,\"onlineRunningTime\":18056.61000003218,\"pid\":215,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[500000000,559674,757206,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":99658649.49440613,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.827,\"onlineExpGained\":20974584.102325846,\"onlineMoneyMade\":500000000,\"onlineRunningTime\":18056.61000003218,\"pid\":216,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,691362,0,1646100]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":30603033.085770003,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.829,\"onlineExpGained\":6222258,\"onlineMoneyMade\":0,\"onlineRunningTime\":18056.61000003218,\"pid\":217,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[28904.159811735637,18106,54318,54318]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7700725.660292181,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.832,\"onlineExpGained\":1536096.5166993232,\"onlineMoneyMade\":28904.159811735637,\"onlineRunningTime\":18056.61000003218,\"pid\":218,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[3361651166.3068705,21398,70778,74070]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9580927.525361665,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.83299999998,\"onlineExpGained\":1999180.0326895574,\"onlineMoneyMade\":3361651166.3068705,\"onlineRunningTime\":18056.61000003218,\"pid\":219,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[2400528137.0391293,54318,149786,123450]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13810252.065704636,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.834,\"onlineExpGained\":2795160.1075795493,\"onlineMoneyMade\":2400528137.0391293,\"onlineRunningTime\":18056.61000003218,\"pid\":220,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[1464365131.202405,11522,39504,34566]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6852341.109614903,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.837,\"onlineExpGained\":1308251.5709193666,\"onlineMoneyMade\":1464365131.202405,\"onlineRunningTime\":18056.61000003218,\"pid\":221,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[5106274960,8230,24690,23044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5270089.6814252455,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.83899999998,\"onlineExpGained\":882727.2335794973,\"onlineMoneyMade\":5106274960,\"onlineRunningTime\":18056.61000003218,\"pid\":222,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,233732,0,156370]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3342511.567132813,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.841,\"onlineExpGained\":676506,\"onlineMoneyMade\":0,\"onlineRunningTime\":18056.61000003218,\"pid\":223,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[3637491200,4938,27982,24690]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6926292.048433452,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.842,\"onlineExpGained\":1228077.5698142312,\"onlineMoneyMade\":3637491200,\"onlineRunningTime\":18056.61000003218,\"pid\":224,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[307983680,1528,9168,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2475582.635225715,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.843,\"onlineExpGained\":462610.1600153617,\"onlineMoneyMade\":307983680,\"onlineRunningTime\":18056.61000003218,\"pid\":225,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[7640,1528,9168,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1647085.8879639497,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.845,\"onlineExpGained\":368366.4988860281,\"onlineMoneyMade\":7640,\"onlineRunningTime\":18056.61000003218,\"pid\":226,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[6123988575,3056,11460,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2484759.0033631544,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.847,\"onlineExpGained\":477841.3165023863,\"onlineMoneyMade\":6123988575,\"onlineRunningTime\":18056.61000003218,\"pid\":227,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[4658042296,2292,6876,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1475614.4951555796,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.849,\"onlineExpGained\":321307.2218787622,\"onlineMoneyMade\":4658042296,\"onlineRunningTime\":18056.61000003218,\"pid\":228,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[4103149096,1528,12224,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2080379.2459001255,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.85,\"onlineExpGained\":378533.274618434,\"onlineMoneyMade\":4103149096,\"onlineRunningTime\":18056.61000003218,\"pid\":229,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[2377428188,2292,9168,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1602870.7171514013,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.851,\"onlineExpGained\":314334.45199916913,\"onlineMoneyMade\":2377428188,\"onlineRunningTime\":18056.61000003218,\"pid\":230,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,108488,0,45076]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1208010.8635927083,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.853,\"onlineExpGained\":249828,\"onlineMoneyMade\":0,\"onlineRunningTime\":18056.61000003218,\"pid\":231,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[13027294048,3056,8404,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1758552.103876642,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.856,\"onlineExpGained\":341705.7490824158,\"onlineMoneyMade\":13027294048,\"onlineRunningTime\":18056.61000003218,\"pid\":232,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[2824521546,1608,2814,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":976609.4163379595,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.857,\"onlineExpGained\":191370.70911609923,\"onlineMoneyMade\":2824521546,\"onlineRunningTime\":18056.61000003218,\"pid\":233,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[3716106090,1608,4824,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1221823.48627033,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.858,\"onlineExpGained\":239367.4092657147,\"onlineMoneyMade\":3716106090,\"onlineRunningTime\":18056.61000003218,\"pid\":234,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[14136510900,2814,3618,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1045204.1639587415,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.86099999998,\"onlineExpGained\":224409.14988502074,\"onlineMoneyMade\":14136510900,\"onlineRunningTime\":18056.61000003218,\"pid\":235,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-1\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":379,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-343865-CarmichaelSecurity.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[13,14],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-219161.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[37,75,187,187,181,134,102,68,166,81,74,31,54,78],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"darkweb\",\"httpPortOpen\":false,\"ip\":\"27.7.8.9\",\"isConnectedTo\":false,\"maxRam\":1,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2\",\"httpPortOpen\":false,\"ip\":\"42.7.4.7\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,5925960,5991804,5893038]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":493549849.08510804,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.86299999998,\"onlineExpGained\":104011841.69650078,\"onlineMoneyMade\":0,\"onlineRunningTime\":18045.61000003214,\"pid\":236,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[98000000,20082420,20082420,15901326]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":651878596.9254282,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.865,\"onlineExpGained\":140659645.27126062,\"onlineMoneyMade\":98000000,\"onlineRunningTime\":18045.61000003214,\"pid\":237,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,16856064,16888986,16856064]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1113450963.9718828,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.866,\"onlineExpGained\":234811040.3957791,\"onlineMoneyMade\":0,\"onlineRunningTime\":18045.61000003214,\"pid\":238,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,9349848,9382770,9284004]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":616348184.3241518,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.867,\"onlineExpGained\":129901967.28593586,\"onlineMoneyMade\":0,\"onlineRunningTime\":18045.61000003214,\"pid\":239,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,3390966,3456810,3358044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":341540319.5476861,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.869,\"onlineExpGained\":71946008.77412155,\"onlineMoneyMade\":0,\"onlineRunningTime\":18045.61000003214,\"pid\":240,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,2370384,2502072,2370384]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":200675675.9282255,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.87099999998,\"onlineExpGained\":42564845.98656814,\"onlineMoneyMade\":0,\"onlineRunningTime\":18045.61000003214,\"pid\":241,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[1500000000,1777788,1975320,1942398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":185621358.58834243,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.872,\"onlineExpGained\":37060219.28755334,\"onlineMoneyMade\":1500000000,\"onlineRunningTime\":18045.61000003214,\"pid\":242,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[1125000000,1514412,1547334,1481490]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":200021998.04996282,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.873,\"onlineExpGained\":39876272.90241386,\"onlineMoneyMade\":1125000000,\"onlineRunningTime\":18045.61000003214,\"pid\":243,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[1312500000,921816,1119348,987660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":139716810.67192453,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.875,\"onlineExpGained\":27877303.90689116,\"onlineMoneyMade\":1312500000,\"onlineRunningTime\":18045.61000003214,\"pid\":244,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[1750000000,888894,1086426,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":90137087.66264781,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.878,\"onlineExpGained\":19522222.595343307,\"onlineMoneyMade\":1750000000,\"onlineRunningTime\":18045.61000003214,\"pid\":245,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,757206,855972,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":108660898.14792457,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.88,\"onlineExpGained\":21904491.77188709,\"onlineMoneyMade\":0,\"onlineRunningTime\":18045.61000003214,\"pid\":246,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1185192,0,1777788]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":33140958.671556566,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.88,\"onlineExpGained\":6716088,\"onlineMoneyMade\":0,\"onlineRunningTime\":18045.61000003214,\"pid\":247,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[4578973425,14814,70778,60902]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8579403.85204388,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.884,\"onlineExpGained\":1816831.3973374753,\"onlineMoneyMade\":4578973425,\"onlineRunningTime\":18045.61000003214,\"pid\":248,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[3375000000,24690,82300,75716]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10086594.957707763,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.886,\"onlineExpGained\":2112828.5100000743,\"onlineMoneyMade\":3375000000,\"onlineRunningTime\":18045.61000003214,\"pid\":249,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[6000020297.668053,60902,151432,126742]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":14089504.558191944,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.888,\"onlineExpGained\":2899255.7253790633,\"onlineMoneyMade\":6000020297.668053,\"onlineRunningTime\":18045.61000003214,\"pid\":250,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[4249179787.428898,11522,37858,34566]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5513436.575315907,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.889,\"onlineExpGained\":1275214.9150880692,\"onlineMoneyMade\":4249179787.428898,\"onlineRunningTime\":18045.61000003214,\"pid\":251,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4307042001.576929,9876,24690,26336]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4797352.650507648,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.891,\"onlineExpGained\":983802.8710122643,\"onlineMoneyMade\":4307042001.576929,\"onlineRunningTime\":18045.61000003214,\"pid\":252,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,225502,0,167892]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3484592.155305625,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.892,\"onlineExpGained\":725886,\"onlineMoneyMade\":0,\"onlineRunningTime\":18045.61000003214,\"pid\":253,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,1646,31274,27982]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6429472.529466926,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.894,\"onlineExpGained\":1298758.293256777,\"onlineMoneyMade\":0,\"onlineRunningTime\":18045.61000003214,\"pid\":254,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[13426827924,3056,9932,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2501632.638355572,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.896,\"onlineExpGained\":510466.3834652266,\"onlineMoneyMade\":13426827924,\"onlineRunningTime\":18045.61000003214,\"pid\":255,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[13249250428,2292,10696,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2061745.4069222086,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.897,\"onlineExpGained\":445466.46376915014,\"onlineMoneyMade\":13249250428,\"onlineRunningTime\":18045.61000003214,\"pid\":256,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,1528,12224,7640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2268598.0501367794,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.89899999998,\"onlineExpGained\":486772.92989495426,\"onlineMoneyMade\":0,\"onlineRunningTime\":18045.61000003214,\"pid\":257,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[4621001284,3056,10696,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1914643.8156310716,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.90099999998,\"onlineExpGained\":419266.7407442385,\"onlineMoneyMade\":4621001284,\"onlineRunningTime\":18045.61000003214,\"pid\":258,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[618678796,2292,12224,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1751395.1694324259,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.90399999998,\"onlineExpGained\":382208.35495453526,\"onlineMoneyMade\":618678796,\"onlineRunningTime\":18045.61000003214,\"pid\":259,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[3321182872,764,9168,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1366193.9582428841,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.905,\"onlineExpGained\":314334.4519991691,\"onlineMoneyMade\":3321182872,\"onlineRunningTime\":18045.61000003214,\"pid\":260,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,94736,0,44312]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1187945.1080643751,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.907,\"onlineExpGained\":243525,\"onlineMoneyMade\":0,\"onlineRunningTime\":18045.61000003214,\"pid\":261,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[33668580008,6112,9932,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1997683.840760442,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.91,\"onlineExpGained\":421437.09053497936,\"onlineMoneyMade\":33668580008,\"onlineRunningTime\":18045.61000003214,\"pid\":262,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[3886362336,1608,2814,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1032809.8873488177,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.912,\"onlineExpGained\":207773.91275462197,\"onlineMoneyMade\":3886362336,\"onlineRunningTime\":18045.61000003214,\"pid\":263,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[626669760,804,5628,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1182910.3798464898,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.913,\"onlineExpGained\":236793.56615533074,\"onlineMoneyMade\":626669760,\"onlineRunningTime\":18045.61000003214,\"pid\":264,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[10260262080,1206,4422,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1010001.8135828483,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.91499999998,\"onlineExpGained\":211462.46816088495,\"onlineMoneyMade\":10260262080,\"onlineRunningTime\":18045.61000003214,\"pid\":265,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-2\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":409,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-3\",\"httpPortOpen\":false,\"ip\":\"5.7.1.4\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,5893038,5958882,5893038]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":491691129.0574231,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.916,\"onlineExpGained\":103819819.83490723,\"onlineMoneyMade\":0,\"onlineRunningTime\":18034.6100000321,\"pid\":266,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,20049498,20115342,15868404]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":607194209.2278466,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.918,\"onlineExpGained\":136043823.90216482,\"onlineMoneyMade\":0,\"onlineRunningTime\":18034.6100000321,\"pid\":267,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,16888986,16856064,16856064]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1111480340.1877544,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.91999999998,\"onlineExpGained\":234607432.29658484,\"onlineMoneyMade\":0,\"onlineRunningTime\":18034.6100000321,\"pid\":268,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[4600000000,9349848,9349848,9284004]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":732642192.8641624,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.921,\"onlineExpGained\":141914845.13839716,\"onlineMoneyMade\":4600000000,\"onlineRunningTime\":18034.6100000321,\"pid\":269,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[412500000,3226356,3423888,3358044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338554424.2298511,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.922,\"onlineExpGained\":72794246.81968997,\"onlineMoneyMade\":412500000,\"onlineRunningTime\":18034.6100000321,\"pid\":270,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1500000000,2370384,2436228,2370384]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":232896986.76178873,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.924,\"onlineExpGained\":45893224.920856155,\"onlineMoneyMade\":1500000000,\"onlineRunningTime\":18034.6100000321,\"pid\":271,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[800000000,1744866,2008242,1942398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":172609015.77513358,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.927,\"onlineExpGained\":35716066.25639856,\"onlineMoneyMade\":800000000,\"onlineRunningTime\":18034.6100000321,\"pid\":272,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[250000000,1349802,1547334,1481490]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":175567529.44895345,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.92799999999,\"onlineExpGained\":37891481.03849283,\"onlineMoneyMade\":250000000,\"onlineRunningTime\":18034.6100000321,\"pid\":273,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[562500000,954738,1119348,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":132729852.87687218,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.929,\"onlineExpGained\":27155561.410919867,\"onlineMoneyMade\":562500000,\"onlineRunningTime\":18034.6100000321,\"pid\":274,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,855972,1119348,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":80222898.43935262,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.932,\"onlineExpGained\":18498106.000177756,\"onlineMoneyMade\":0,\"onlineRunningTime\":18034.6100000321,\"pid\":275,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[2500000000,658440,757206,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":110661433.31498954,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.934,\"onlineExpGained\":22111137.920678478,\"onlineMoneyMade\":2500000000,\"onlineRunningTime\":18034.6100000321,\"pid\":276,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1349802,0,1843632]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34336134.72587813,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.936,\"onlineExpGained\":6963003,\"onlineMoneyMade\":0,\"onlineRunningTime\":18034.6100000321,\"pid\":277,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[1526334062.4871583,24690,60902,49380]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7709920.35148837,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.93699999998,\"onlineExpGained\":1562580.9394010357,\"onlineMoneyMade\":1526334062.4871583,\"onlineRunningTime\":18034.6100000321,\"pid\":278,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[1125007185.0527067,11522,74070,70778]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8511005.392611714,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.938,\"onlineExpGained\":1911360.7547677942,\"onlineMoneyMade\":1125007185.0527067,\"onlineRunningTime\":18034.6100000321,\"pid\":279,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[3000091031.0230045,52672,141556,123450]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12542453.591275182,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.94,\"onlineExpGained\":2714196.8492910382,\"onlineMoneyMade\":3000091031.0230045,\"onlineRunningTime\":18034.6100000321,\"pid\":280,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[0,4938,32920,29628]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4668899.3336851,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.942,\"onlineExpGained\":1030743.6619364707,\"onlineMoneyMade\":0,\"onlineRunningTime\":18034.6100000321,\"pid\":281,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,9876,23044,21398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3557147.008361588,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.944,\"onlineExpGained\":795128.3478044326,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":18034.6100000321,\"pid\":282,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,235378,0,161308]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3285045.6456278125,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.946,\"onlineExpGained\":697492.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":18034.6100000321,\"pid\":283,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,4938,26336,26336]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5808604.650367833,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.947,\"onlineExpGained\":1175067.0272323221,\"onlineMoneyMade\":0,\"onlineRunningTime\":18034.6100000321,\"pid\":284,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[6586369128,1528,9932,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2259834.236856639,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.951,\"onlineExpGained\":446658.08553207334,\"onlineMoneyMade\":6586369128,\"onlineRunningTime\":18034.6100000321,\"pid\":285,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,1528,9932,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1620983.141291678,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.951,\"onlineExpGained\":385499.8244156107,\"onlineMoneyMade\":0,\"onlineRunningTime\":18034.6100000321,\"pid\":286,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[11854.142584818144,4584,10696,7640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2298223.3049530685,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.95299999998,\"onlineExpGained\":500170.3499838062,\"onlineMoneyMade\":11854.142584818144,\"onlineRunningTime\":18034.6100000321,\"pid\":287,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[1532502252,2292,9168,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1655911.5714050299,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.956,\"onlineExpGained\":368327.7909341908,\"onlineMoneyMade\":1532502252,\"onlineRunningTime\":18034.6100000321,\"pid\":288,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[449332084,2292,12224,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2060395.4261694807,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.95799999998,\"onlineExpGained\":407933.9173072444,\"onlineMoneyMade\":449332084,\"onlineRunningTime\":18034.6100000321,\"pid\":289,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[4503442312,2292,6876,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1490387.6663690363,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.95799999998,\"onlineExpGained\":282901.00679925224,\"onlineMoneyMade\":4503442312,\"onlineRunningTime\":18034.6100000321,\"pid\":290,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,123768,0,42784]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1262112.5844695831,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.96,\"onlineExpGained\":256704,\"onlineMoneyMade\":0,\"onlineRunningTime\":18034.6100000321,\"pid\":291,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[9052778868,1528,9168,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1466558.96351942,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.962,\"onlineExpGained\":326518.8269009751,\"onlineMoneyMade\":9052778868,\"onlineRunningTime\":18034.6100000321,\"pid\":292,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[4210855932,2010,2814,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1021211.4664541553,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.964,\"onlineExpGained\":213241.64730079626,\"onlineMoneyMade\":4210855932,\"onlineRunningTime\":18034.410000032098,\"pid\":293,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[5434219920,2010,5628,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1293497.7815355598,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.964,\"onlineExpGained\":259958.15414878703,\"onlineMoneyMade\":5434219920,\"onlineRunningTime\":18034.410000032098,\"pid\":294,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[10388142702,1608,3216,3618]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":888411.6242894906,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.966,\"onlineExpGained\":192042.44557468122,\"onlineMoneyMade\":10388142702,\"onlineRunningTime\":18034.410000032098,\"pid\":295,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-3\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":439,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-7\",\"httpPortOpen\":false,\"ip\":\"34.3.7.7\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,5860116,5958882,5893038]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":490452044.8327442,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.968,\"onlineExpGained\":103691805.26051155,\"onlineMoneyMade\":0,\"onlineRunningTime\":18023.61000003206,\"pid\":296,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,20049498,20082420,15868404]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":606136824.2050692,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.97,\"onlineExpGained\":135934573.6922454,\"onlineMoneyMade\":0,\"onlineRunningTime\":18023.61000003206,\"pid\":297,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[4000000000,16757298,16856064,16856064]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1228267346.7221508,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.971,\"onlineExpGained\":246671212.17384502,\"onlineMoneyMade\":4000000000,\"onlineRunningTime\":18023.61000003206,\"pid\":298,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[172500000,9349848,9382770,9284004]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":620783620.8103584,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.974,\"onlineExpGained\":130360085.50912294,\"onlineMoneyMade\":172500000,\"onlineRunningTime\":18023.61000003206,\"pid\":299,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,3226356,3423888,3358044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":334822024.4999344,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.976,\"onlineExpGained\":71251995.82774739,\"onlineMoneyMade\":0,\"onlineRunningTime\":18023.61000003206,\"pid\":300,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[150000000,2370384,2469150,2370384]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":202534755.40127766,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.97699999998,\"onlineExpGained\":42756867.848161675,\"onlineMoneyMade\":150000000,\"onlineRunningTime\":18023.61000003206,\"pid\":301,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,1711944,2008242,1942398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":158977019.85472634,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.98,\"onlineExpGained\":34307905.93804594,\"onlineMoneyMade\":0,\"onlineRunningTime\":18023.61000003206,\"pid\":302,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,1382724,1580256,1448568]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":175567603.4526198,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.983,\"onlineExpGained\":37350174.16651435,\"onlineMoneyMade\":0,\"onlineRunningTime\":18023.61000003206,\"pid\":303,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,921816,1152270,987660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":124869513.8546673,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.984,\"onlineExpGained\":26343601.102952164,\"onlineMoneyMade\":0,\"onlineRunningTime\":18023.61000003206,\"pid\":304,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,823050,1119348,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":79603291.66187327,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.985,\"onlineExpGained\":18434098.71297991,\"onlineMoneyMade\":0,\"onlineRunningTime\":18023.61000003206,\"pid\":305,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,625518,855972,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107660739.59176123,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.987,\"onlineExpGained\":21801168.697491396,\"onlineMoneyMade\":0,\"onlineRunningTime\":18023.61000003206,\"pid\":306,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,757206,0,1777788]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34712344.780020006,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.989,\"onlineExpGained\":6716088,\"onlineMoneyMade\":0,\"onlineRunningTime\":18023.61000003206,\"pid\":307,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[1526324475,13168,55964,51026]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7466198.681998,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.99,\"onlineExpGained\":1446049.4795135008,\"onlineMoneyMade\":1526324475,\"onlineRunningTime\":18023.410000032058,\"pid\":308,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[7177.125029246463,18106,74070,69132]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9737142.418513093,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.99099999998,\"onlineExpGained\":1906194.914890043,\"onlineMoneyMade\":7177.125029246463,\"onlineRunningTime\":18023.410000032058,\"pid\":309,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[1800039273.7078738,44442,148140,125096]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13308260.1185445,\"offlineMoneyMade\":0,\"offlineRunningTime\":139402.99699999997,\"onlineExpGained\":2756606.1750612105,\"onlineMoneyMade\":1800039273.7078738,\"onlineRunningTime\":18023.410000032058,\"pid\":310,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[1464364843.5108943,8230,37858,34566]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6740992.238984063,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403,\"onlineExpGained\":1262000.2527555504,\"onlineMoneyMade\":1464364843.5108943,\"onlineRunningTime\":18023.410000032058,\"pid\":311,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,6584,21398,24690]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4569436.67577609,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.003,\"onlineExpGained\":835558.6027775394,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":18023.410000032058,\"pid\":312,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,215626,0,153078]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3215483.2396032293,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.005,\"onlineExpGained\":651816,\"onlineMoneyMade\":0,\"onlineRunningTime\":18023.410000032058,\"pid\":313,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[1818749833.191285,8230,26336,23044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5900969.150962027,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.00699999998,\"onlineExpGained\":1157396.8463716856,\"onlineMoneyMade\":1818749833.191285,\"onlineRunningTime\":18023.410000032058,\"pid\":314,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,0,7640,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1864229.4456003145,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.01,\"onlineExpGained\":393484.5039211122,\"onlineMoneyMade\":0,\"onlineRunningTime\":18023.410000032058,\"pid\":315,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[24086316288,2292,13752,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2474096.6246181773,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.011,\"onlineExpGained\":458316.4579163372,\"onlineMoneyMade\":24086316288,\"onlineRunningTime\":18023.410000032058,\"pid\":316,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,1528,13752,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2511978.290866174,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.01299999998,\"onlineExpGained\":491238.73659123824,\"onlineMoneyMade\":0,\"onlineRunningTime\":18023.410000032058,\"pid\":317,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[3872787816,5348,9168,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2104310.076592498,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.01499999998,\"onlineExpGained\":423185.1214988575,\"onlineMoneyMade\":3872787816,\"onlineRunningTime\":18023.410000032058,\"pid\":318,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[4779120695,3820,10696,7640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2138356.6645286945,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.016,\"onlineExpGained\":411608.9976433456,\"onlineMoneyMade\":4779120695,\"onlineRunningTime\":18023.410000032058,\"pid\":319,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[4050184796,3820,8404,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1712656.6243214342,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.018,\"onlineExpGained\":324812.26706580806,\"onlineMoneyMade\":4050184796,\"onlineRunningTime\":18023.410000032058,\"pid\":320,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,109252,0,47368]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1223659.6294016666,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.02,\"onlineExpGained\":254412,\"onlineMoneyMade\":0,\"onlineRunningTime\":18023.410000032058,\"pid\":321,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[10424026696,2292,8404,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1772615.120518664,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.022,\"onlineExpGained\":345502.47962777596,\"onlineMoneyMade\":10424026696,\"onlineRunningTime\":18023.410000032058,\"pid\":322,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[1777437372,804,2814,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":941814.1390353767,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.023,\"onlineExpGained\":180435.2400237507,\"onlineMoneyMade\":1777437372,\"onlineRunningTime\":18023.410000032058,\"pid\":323,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[7233926886,2010,4824,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1266892.5730164768,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.024,\"onlineExpGained\":226498.19371379464,\"onlineMoneyMade\":7233926886,\"onlineRunningTime\":18023.410000032058,\"pid\":324,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[12767548140,2412,4422,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1094722.1118025677,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.027,\"onlineExpGained\":215778.02873559686,\"onlineMoneyMade\":12767548140,\"onlineRunningTime\":18023.410000032058,\"pid\":325,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-7\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":469,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-20\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-20\",\"httpPortOpen\":false,\"ip\":\"66.7.1.1\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[5312500000,5925960,5958882,5893038]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":560319785.1647145,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.02899999998,\"onlineExpGained\":120077670.78316064,\"onlineMoneyMade\":5312500000,\"onlineRunningTime\":18012.410000032018,\"pid\":326,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[372750000,20082420,20049498,15868404]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":679389612.236531,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.031,\"onlineExpGained\":153305357.069433,\"onlineMoneyMade\":372750000,\"onlineRunningTime\":18012.410000032018,\"pid\":327,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[12050000000,16823142,16856064,16823142]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1265156016.1116962,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.033,\"onlineExpGained\":271155086.1019543,\"onlineMoneyMade\":12050000000,\"onlineRunningTime\":18012.410000032018,\"pid\":328,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[12305000000,9349848,9349848,9284004]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":819458458.5910635,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.03499999997,\"onlineExpGained\":162377459.1074215,\"onlineMoneyMade\":12305000000,\"onlineRunningTime\":18012.410000032018,\"pid\":329,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[2887500000,3325122,3456810,3358044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":381597219.95714563,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.037,\"onlineExpGained\":81585077.4737627,\"onlineMoneyMade\":2887500000,\"onlineRunningTime\":18012.410000032018,\"pid\":330,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[825000000,2238696,2469150,2370384]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":206539222.74345058,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.039,\"onlineExpGained\":44357050.02810784,\"onlineMoneyMade\":825000000,\"onlineRunningTime\":18012.410000032018,\"pid\":331,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2900000000,1777788,1975320,1942398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":186584749.35434696,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.041,\"onlineExpGained\":39748525.34986289,\"onlineMoneyMade\":2900000000,\"onlineRunningTime\":18012.410000032018,\"pid\":332,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[875000000,1481490,1514412,1481490]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":182457404.53315002,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.044,\"onlineExpGained\":38974094.78244975,\"onlineMoneyMade\":875000000,\"onlineRunningTime\":18012.410000032018,\"pid\":333,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[2625000000,954738,1119348,987660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":135705322.60609195,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.046,\"onlineExpGained\":29591442.33482298,\"onlineMoneyMade\":2625000000,\"onlineRunningTime\":18012.410000032018,\"pid\":334,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[3750000000,954738,1152270,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":95965979.07459466,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.04799999998,\"onlineExpGained\":21634463.072872255,\"onlineMoneyMade\":3750000000,\"onlineRunningTime\":18012.410000032018,\"pid\":335,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[7500000000,757206,790128,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":127128012.50208557,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.05,\"onlineExpGained\":25727445.524527762,\"onlineMoneyMade\":7500000000,\"onlineRunningTime\":18012.410000032018,\"pid\":336,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1613178,0,2008242]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":37570326.03499125,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.05,\"onlineExpGained\":7604982,\"onlineMoneyMade\":0,\"onlineRunningTime\":18012.410000032018,\"pid\":337,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[9157946850,16460,75716,62548]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9753093.925584571,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.052,\"onlineExpGained\":1943956.6263056952,\"onlineMoneyMade\":9157946850,\"onlineRunningTime\":18012.410000032018,\"pid\":338,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[3375014370.1054134,24690,77362,77362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10053548.50208145,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.056,\"onlineExpGained\":2112828.5100000747,\"onlineMoneyMade\":3375014370.1054134,\"onlineRunningTime\":18012.410000032018,\"pid\":339,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[4800041866.188804,64194,133326,120158]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13002090.657511257,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.056,\"onlineExpGained\":2675642.9167727004,\"onlineMoneyMade\":4800041866.188804,\"onlineRunningTime\":18012.410000032018,\"pid\":340,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[2928720650,4938,42796,37858]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7065151.260597847,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.058,\"onlineExpGained\":1367717.5514157012,\"onlineMoneyMade\":2928720650,\"onlineRunningTime\":18012.410000032018,\"pid\":341,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[8613118264.36927,9876,29628,26336]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5389662.828730479,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.06199999998,\"onlineExpGained\":1051186.6293007755,\"onlineMoneyMade\":8613118264.36927,\"onlineRunningTime\":18012.410000032018,\"pid\":342,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,240316,0,156370]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3418794.435816146,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.063,\"onlineExpGained\":685147.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":18012.410000032018,\"pid\":343,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[3637491200,3292,29628,29628]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6607373.066577079,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.06399999998,\"onlineExpGained\":1369439.0166993223,\"onlineMoneyMade\":3637491200,\"onlineRunningTime\":18012.410000032018,\"pid\":344,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,0,9168,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2053931.7332195593,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.066,\"onlineExpGained\":425388.6528876889,\"onlineMoneyMade\":0,\"onlineRunningTime\":18012.410000032018,\"pid\":345,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,764,9168,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1672691.7173313028,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.068,\"onlineExpGained\":364083.1675036323,\"onlineMoneyMade\":0,\"onlineRunningTime\":18012.410000032018,\"pid\":346,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[12247978678,3056,11460,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2368673.916052587,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.069,\"onlineExpGained\":486772.92989495426,\"onlineMoneyMade\":12247978678,\"onlineRunningTime\":18012.410000032018,\"pid\":347,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[8398276876,1528,8404,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1679792.97067199,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.06999999998,\"onlineExpGained\":352654.26791571453,\"onlineMoneyMade\":8398276876,\"onlineRunningTime\":18012.410000032018,\"pid\":348,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[8580516852,1528,12988,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2064790.6466642863,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.072,\"onlineExpGained\":389558.51562673785,\"onlineMoneyMade\":8580516852,\"onlineRunningTime\":18012.410000032018,\"pid\":349,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[6008146424,2292,9168,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1816382.5663617523,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.073,\"onlineExpGained\":349260.502221299,\"onlineMoneyMade\":6008146424,\"onlineRunningTime\":18012.410000032018,\"pid\":350,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,92444,0,46604]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1186200.5777708334,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.075,\"onlineExpGained\":250974,\"onlineMoneyMade\":0,\"onlineRunningTime\":18012.410000032018,\"pid\":351,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[3357470580,2292,6876,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1512393.300319246,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.079,\"onlineExpGained\":303738.443628814,\"onlineMoneyMade\":3357470580,\"onlineRunningTime\":18012.410000032018,\"pid\":352,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[4561617012,2412,2412,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":938546.2842631747,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.08,\"onlineExpGained\":205040.04548153488,\"onlineMoneyMade\":4561617012,\"onlineRunningTime\":18012.410000032018,\"pid\":353,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[0,402,5226,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1062792.8925650236,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.082,\"onlineExpGained\":208481.29194110638,\"onlineMoneyMade\":0,\"onlineRunningTime\":18012.410000032018,\"pid\":354,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[6456291654,2010,4422,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1047785.5076756001,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.08599999998,\"onlineExpGained\":217935.80902295283,\"onlineMoneyMade\":6456291654,\"onlineRunningTime\":18012.410000032018,\"pid\":355,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-20\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":499,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-4\",\"httpPortOpen\":false,\"ip\":\"32.1.0.5\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[62500000,5860116,5958882,5893038]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":491691760.7915679,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.08599999998,\"onlineExpGained\":103819819.83490723,\"onlineMoneyMade\":62500000,\"onlineRunningTime\":18001.410000031978,\"pid\":356,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,20049498,20082420,15835482]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":605079737.9550619,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.088,\"onlineExpGained\":135825323.48232597,\"onlineMoneyMade\":0,\"onlineRunningTime\":18001.410000031978,\"pid\":357,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,16823142,16823142,16823142]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1107046831.53797,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.09,\"onlineExpGained\":234149314.07339776,\"onlineMoneyMade\":0,\"onlineRunningTime\":18001.410000031978,\"pid\":358,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[4255000000,9349848,9349848,9251082]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":721802173.9736792,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.09100000001,\"onlineExpGained\":140795000.59282872,\"onlineMoneyMade\":4255000000,\"onlineRunningTime\":18001.410000031978,\"pid\":359,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[68750000,3292200,3423888,3358044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":340794385.7898916,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.092,\"onlineExpGained\":71868896.22452442,\"onlineMoneyMade\":68750000,\"onlineRunningTime\":18001.410000031978,\"pid\":360,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[300000000,2304540,2436228,2370384]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":201066096.75077552,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.09399999998,\"onlineExpGained\":42820875.135359526,\"onlineMoneyMade\":300000000,\"onlineRunningTime\":18001.410000031978,\"pid\":361,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[100000000,1810710,1975320,1942398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":158357519.1737705,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.096,\"onlineExpGained\":34243898.65084809,\"onlineMoneyMade\":100000000,\"onlineRunningTime\":18001.410000031978,\"pid\":362,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[375000000,1481490,1547334,1448568]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":180808019.67664334,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.096,\"onlineExpGained\":37891481.03849281,\"onlineMoneyMade\":375000000,\"onlineRunningTime\":18001.410000031978,\"pid\":363,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,954738,1152270,987660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":123996242.18577015,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.098,\"onlineExpGained\":26253383.290955752,\"onlineMoneyMade\":0,\"onlineRunningTime\":18001.410000031978,\"pid\":364,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[250000000,888894,1086426,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":79603362.9944389,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.103,\"onlineExpGained\":18434098.71297991,\"onlineMoneyMade\":250000000,\"onlineRunningTime\":18001.410000031978,\"pid\":365,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,559674,855972,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":106660588.72025152,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.10499999998,\"onlineExpGained\":21697845.623095702,\"onlineMoneyMade\":0,\"onlineRunningTime\":18001.410000031978,\"pid\":366,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1448568,0,1909476]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":36431326.31877094,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.107,\"onlineExpGained\":7209918,\"onlineMoneyMade\":0,\"onlineRunningTime\":18001.410000031978,\"pid\":367,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[10684271325,24690,62548,51026]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8252134.624274571,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.11099999998,\"onlineExpGained\":1663221.745667543,\"onlineMoneyMade\":10684271325,\"onlineRunningTime\":18001.410000031978,\"pid\":368,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[1125000000,13168,79008,75716]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10155752.820593024,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.11299999998,\"onlineExpGained\":2014677.5523228098,\"onlineMoneyMade\":1125000000,\"onlineRunningTime\":18001.410000031978,\"pid\":369,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[1797457588.5284522,54318,146494,120158]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13361952.306213291,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.115,\"onlineExpGained\":2687209.096528201,\"onlineMoneyMade\":1797457588.5284522,\"onlineRunningTime\":18001.410000031978,\"pid\":370,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[1464376842.0486457,8230,36212,32920]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6444874.513807412,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.11599999998,\"onlineExpGained\":1202534.2722592156,\"onlineMoneyMade\":1464376842.0486457,\"onlineRunningTime\":18001.410000031978,\"pid\":371,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[0,4938,29628,24690]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4378164.5526728565,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.11800000002,\"onlineExpGained\":923157.4885526041,\"onlineMoneyMade\":0,\"onlineRunningTime\":18001.410000031978,\"pid\":372,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,218918,0,156370]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3250817.5001586457,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.12,\"onlineExpGained\":677740.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":18001.410000031978,\"pid\":373,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[1818745600,8230,27982,24690]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5745239.649308494,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.12099999998,\"onlineExpGained\":1236912.6602445496,\"onlineMoneyMade\":1818745600,\"onlineRunningTime\":18001.410000031978,\"pid\":374,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,0,10696,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2182934.0200677738,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.123,\"onlineExpGained\":462610.1600153616,\"onlineMoneyMade\":0,\"onlineRunningTime\":18001.410000031978,\"pid\":375,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[641070108,1528,12224,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2328717.379394543,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.125,\"onlineExpGained\":462599.7892987328,\"onlineMoneyMade\":641070108,\"onlineRunningTime\":18001.410000031978,\"pid\":376,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[12247977150,2292,12988,7640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2636339.091717066,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.126,\"onlineExpGained\":526965.1901615101,\"onlineMoneyMade\":12247977150,\"onlineRunningTime\":18001.410000031978,\"pid\":377,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[12223637864,3820,10696,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2047641.7275860985,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.13,\"onlineExpGained\":434940.2637627146,\"onlineMoneyMade\":12223637864,\"onlineRunningTime\":18001.410000031978,\"pid\":378,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[4160170236,2292,12224,7640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2000441.564393777,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.13199999998,\"onlineExpGained\":411608.99764334573,\"onlineMoneyMade\":4160170236,\"onlineRunningTime\":18001.410000031978,\"pid\":379,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[1820757924,2292,8404,7640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1503732.77748843,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.133,\"onlineExpGained\":349260.5022212989,\"onlineMoneyMade\":1820757924,\"onlineRunningTime\":18001.410000031978,\"pid\":380,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,106196,0,44312]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1171990.9368366664,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.134,\"onlineExpGained\":245244,\"onlineMoneyMade\":0,\"onlineRunningTime\":18001.410000031978,\"pid\":381,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[6462610296,3820,9168,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1850666.174045865,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.137,\"onlineExpGained\":375876.3239906573,\"onlineMoneyMade\":6462610296,\"onlineRunningTime\":18001.410000031978,\"pid\":382,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[2679041766,1206,2814,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":791349.8743275739,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.139,\"onlineExpGained\":185902.97456992493,\"onlineMoneyMade\":2679041766,\"onlineRunningTime\":18001.410000031978,\"pid\":383,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[1095941244,804,5226,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1136155.8276685497,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.13999999998,\"onlineExpGained\":229072.03682417865,\"onlineMoneyMade\":1095941244,\"onlineRunningTime\":18001.410000031978,\"pid\":384,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[6224676942,1206,3618,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":940761.4964774125,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.141,\"onlineExpGained\":194200.22586203716,\"onlineMoneyMade\":6224676942,\"onlineRunningTime\":18001.410000031978,\"pid\":385,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-4\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":529,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-5\",\"httpPortOpen\":false,\"ip\":\"32.3.9.4\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,5893038,6024726,5860116]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":492311625.60731363,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.14299999998,\"onlineExpGained\":103883827.12210509,\"onlineMoneyMade\":0,\"onlineRunningTime\":17990.410000031938,\"pid\":386,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,20049498,20049498,15835482]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":604022382.0049795,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.14399999997,\"onlineExpGained\":135716073.27240655,\"onlineMoneyMade\":0,\"onlineRunningTime\":17990.410000031938,\"pid\":387,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,16823142,16823142,16823142]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1106554554.8005347,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.146,\"onlineExpGained\":234098412.04859918,\"onlineMoneyMade\":0,\"onlineRunningTime\":17990.410000031938,\"pid\":388,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,9316926,9382770,9251082]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":613885649.4169858,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.147,\"onlineExpGained\":129647457.16194303,\"onlineMoneyMade\":0,\"onlineRunningTime\":17990.410000031938,\"pid\":389,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,3160512,3423888,3358044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338555014.17298573,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.149,\"onlineExpGained\":71637558.57573304,\"onlineMoneyMade\":0,\"onlineRunningTime\":17990.410000031938,\"pid\":390,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[75000000,2337462,2469150,2370384]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":200676107.79072616,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.152,\"onlineExpGained\":42564845.98656814,\"onlineMoneyMade\":75000000,\"onlineRunningTime\":17990.410000031938,\"pid\":391,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,1876554,2041164,1942398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":162075432.145204,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.153,\"onlineExpGained\":34627942.37403517,\"onlineMoneyMade\":0,\"onlineRunningTime\":17990.410000031938,\"pid\":392,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[125000000,1382724,1547334,1448568]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174694457.16768596,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.155,\"onlineExpGained\":37259956.35451794,\"onlineMoneyMade\":125000000,\"onlineRunningTime\":17990.410000031938,\"pid\":393,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[1125000000,1020582,1086426,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":137096973.71849734,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.156,\"onlineExpGained\":27606650.47090192,\"onlineMoneyMade\":1125000000,\"onlineRunningTime\":17990.410000031938,\"pid\":394,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[500000000,855972,1086426,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":80842677.58312243,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.15899999999,\"onlineExpGained\":18562113.287375603,\"onlineMoneyMade\":500000000,\"onlineRunningTime\":17990.410000031938,\"pid\":395,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,625518,855972,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":106660634.60574186,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.161,\"onlineExpGained\":21697845.623095702,\"onlineMoneyMade\":0,\"onlineRunningTime\":17990.410000031938,\"pid\":396,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,757206,0,1679022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":33141029.217229694,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.162,\"onlineExpGained\":6345715.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":17990.410000031938,\"pid\":397,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[4578992530.828356,19752,57610,51026]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8030885.609830538,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.163,\"onlineExpGained\":1551987.1703203507,\"onlineMoneyMade\":4578992530.828356,\"onlineRunningTime\":17990.410000031938,\"pid\":398,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[2250021561.11744,23044,69132,59256]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8356025.323887714,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.165,\"onlineExpGained\":1771883.078068523,\"onlineMoneyMade\":2250021561.11744,\"onlineRunningTime\":17990.410000031938,\"pid\":399,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[3600069717.069974,55964,143202,125096]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13742779.730941143,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.167,\"onlineExpGained\":2779738.5345722134,\"onlineMoneyMade\":3600069717.069974,\"onlineRunningTime\":17990.410000031938,\"pid\":400,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[1464360325,3292,36212,32920]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6364342.21738231,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.168,\"onlineExpGained\":1149675.6229291402,\"onlineMoneyMade\":1464360325,\"onlineRunningTime\":17990.410000031938,\"pid\":401,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,4938,24690,18106]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4222745.8888988765,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.169,\"onlineExpGained\":754698.0928313258,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":17990.410000031938,\"pid\":402,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,218918,0,159662]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3346426.107565417,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.171,\"onlineExpGained\":677740.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":17990.410000031938,\"pid\":403,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,3292,23044,23044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5536696.717781195,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.174,\"onlineExpGained\":1024870.4899169127,\"onlineMoneyMade\":0,\"onlineRunningTime\":17990.410000031938,\"pid\":404,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,0,9168,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2160375.2107837843,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.17599999998,\"onlineExpGained\":414753.9365654966,\"onlineMoneyMade\":0,\"onlineRunningTime\":17990.410000031938,\"pid\":405,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[34227964,3820,11460,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2308235.8897302332,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.177,\"onlineExpGained\":445466.4637691502,\"onlineMoneyMade\":34227964,\"onlineRunningTime\":17990.410000031938,\"pid\":406,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,764,10696,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1912065.599708041,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.17799999999,\"onlineExpGained\":410854.2160581266,\"onlineMoneyMade\":0,\"onlineRunningTime\":17990.410000031938,\"pid\":407,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[23205736,1528,7640,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1580048.4791681895,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.182,\"onlineExpGained\":313470.4603695241,\"onlineMoneyMade\":23205736,\"onlineRunningTime\":17990.410000031938,\"pid\":408,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[0,0,10696,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1795763.4654448512,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.184,\"onlineExpGained\":334432.3105852185,\"onlineMoneyMade\":0,\"onlineRunningTime\":17990.410000031938,\"pid\":409,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[4754749416,4584,6876,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1452812.3466902897,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.184,\"onlineExpGained\":300364.03191031714,\"onlineMoneyMade\":4754749416,\"onlineRunningTime\":17990.410000031938,\"pid\":410,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,106196,0,42020]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1109227.4183654166,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.186,\"onlineExpGained\":237795,\"onlineMoneyMade\":0,\"onlineRunningTime\":17990.410000031938,\"pid\":411,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[19957439492,3820,7640,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1675968.1527349881,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.188,\"onlineExpGained\":334112.2879916954,\"onlineMoneyMade\":19957439492,\"onlineRunningTime\":17990.410000031938,\"pid\":412,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[2077830264,1206,2814,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":847550.3531223598,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.19,\"onlineExpGained\":188636.84184301205,\"onlineMoneyMade\":2077830264,\"onlineRunningTime\":17990.410000031938,\"pid\":413,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[0,0,5628,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1081556.6667693104,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.19199999998,\"onlineExpGained\":205907.44883072242,\"onlineMoneyMade\":0,\"onlineRunningTime\":17990.410000031938,\"pid\":414,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[4290088122,1608,4020,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":983703.3871236586,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.19199999998,\"onlineExpGained\":204989.127298817,\"onlineMoneyMade\":4290088122,\"onlineRunningTime\":17990.410000031938,\"pid\":415,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-5\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":559,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-6\",\"httpPortOpen\":false,\"ip\":\"7.6.0.2\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[1937500658.557383,5893038,5991804,5860116]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":549318714.5160632,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.19400000002,\"onlineExpGained\":109772497.54430698,\"onlineMoneyMade\":1937500658.557383,\"onlineRunningTime\":17979.410000031898,\"pid\":416,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[253750000,20049498,20016576,15835482]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":717981930.0885967,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.19799999997,\"onlineExpGained\":147487783.3912248,\"onlineMoneyMade\":253750000,\"onlineRunningTime\":17979.410000031898,\"pid\":417,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,16823142,16823142,16790220]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1105076690.973126,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.199,\"onlineExpGained\":233945705.97420347,\"onlineMoneyMade\":0,\"onlineRunningTime\":17979.410000031898,\"pid\":418,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,9316926,9349848,9251082]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":611914809.9708762,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.2,\"onlineExpGained\":129443849.06274879,\"onlineMoneyMade\":0,\"onlineRunningTime\":17979.410000031898,\"pid\":419,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,3259278,3423888,3358044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":337062130.54961467,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.202,\"onlineExpGained\":71483333.47653878,\"onlineMoneyMade\":0,\"onlineRunningTime\":17979.410000031898,\"pid\":420,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,2304540,2469150,2370384]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":197577985.02209932,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.205,\"onlineExpGained\":42244809.55057891,\"onlineMoneyMade\":0,\"onlineRunningTime\":17979.410000031898,\"pid\":421,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[1500000000,1843632,1942398,1942398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":181903985.5183764,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.206,\"onlineExpGained\":36676175.56436626,\"onlineMoneyMade\":1500000000,\"onlineRunningTime\":17979.410000031898,\"pid\":422,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,1448568,1547334,1448568]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":171201011.43147084,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.20799999998,\"onlineExpGained\":36899085.1065323,\"onlineMoneyMade\":0,\"onlineRunningTime\":17979.410000031898,\"pid\":423,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,888894,1119348,987660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":121376212.78647278,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.209,\"onlineExpGained\":25982729.854966518,\"onlineMoneyMade\":0,\"onlineRunningTime\":17979.410000031898,\"pid\":424,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[2000000000,888894,1086426,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":92615875.71143565,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.21099999998,\"onlineExpGained\":19778251.744134694,\"onlineMoneyMade\":2000000000,\"onlineRunningTime\":17979.410000031898,\"pid\":425,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[500000000,625518,823050,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107660923.16959861,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.212,\"onlineExpGained\":21801168.697491396,\"onlineMoneyMade\":500000000,\"onlineRunningTime\":17979.410000031898,\"pid\":426,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,954738,0,1711944]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":33664829.3055375,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.21399999998,\"onlineExpGained\":6469173,\"onlineMoneyMade\":0,\"onlineRunningTime\":17979.410000031898,\"pid\":427,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[3052670619.7453175,23044,60902,49380]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8370217.966130413,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.215,\"onlineExpGained\":1583768.4775624056,\"onlineMoneyMade\":3052670619.7453175,\"onlineRunningTime\":17979.410000031898,\"pid\":428,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[4500058632.041555,24690,67486,60902]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9117311.37238009,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.217,\"onlineExpGained\":1808043.9572127785,\"onlineMoneyMade\":4500058632.041555,\"onlineRunningTime\":17979.410000031898,\"pid\":429,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[4800178430.483632,62548,146494,123450]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":14220847.960571406,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.21999999997,\"onlineExpGained\":2852991.006357057,\"onlineMoneyMade\":4800178430.483632,\"onlineRunningTime\":17979.410000031898,\"pid\":430,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[4518.510894321558,6584,32920,27982]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5288416.727435143,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.222,\"onlineExpGained\":1024136.3307702112,\"onlineMoneyMade\":4518.510894321558,\"onlineRunningTime\":17979.410000031898,\"pid\":431,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[175920.16555677468,9876,21398,16460]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3949339.213349643,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.223,\"onlineExpGained\":707529.4620293679,\"onlineMoneyMade\":175920.16555677468,\"onlineRunningTime\":17979.410000031898,\"pid\":432,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,246900,0,164600]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3556306.5109534375,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.225,\"onlineExpGained\":713541,\"onlineMoneyMade\":0,\"onlineRunningTime\":17979.410000031898,\"pid\":433,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,3292,24690,21398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5407886.264153771,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.228,\"onlineExpGained\":1007200.3090562762,\"onlineMoneyMade\":0,\"onlineRunningTime\":17979.410000031898,\"pid\":434,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,1528,7640,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2025017.8083693557,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.228,\"onlineExpGained\":388167.14576001605,\"onlineMoneyMade\":0,\"onlineRunningTime\":17979.410000031898,\"pid\":435,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[1829016,2292,10696,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2071991.8235990028,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.22999999998,\"onlineExpGained\":402633.14994519344,\"onlineMoneyMade\":1829016,\"onlineRunningTime\":17979.410000031898,\"pid\":436,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[6123988575,2292,9932,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2284620.036605805,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.23200000002,\"onlineExpGained\":419785.8294506945,\"onlineMoneyMade\":6123988575,\"onlineRunningTime\":17979.410000031898,\"pid\":437,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[4019891432,1528,6112,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1530176.0834838036,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.23200000002,\"onlineExpGained\":286041.7950871907,\"onlineMoneyMade\":4019891432,\"onlineRunningTime\":17979.410000031898,\"pid\":438,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[4982808,3056,7640,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1768973.4209218547,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.234,\"onlineExpGained\":323407.06957691454,\"onlineMoneyMade\":4982808,\"onlineRunningTime\":17979.410000031898,\"pid\":439,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[2051428624,3056,7640,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1395833.2415710418,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.236,\"onlineExpGained\":293378.8218658912,\"onlineMoneyMade\":2051428624,\"onlineRunningTime\":17979.410000031898,\"pid\":440,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,106960,0,42020]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1144874.3784266666,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.238,\"onlineExpGained\":237222,\"onlineMoneyMade\":0,\"onlineRunningTime\":17979.410000031898,\"pid\":441,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[3508592836,2292,6112,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1514886.6665280764,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.238,\"onlineExpGained\":284754.79090201313,\"onlineMoneyMade\":3508592836,\"onlineRunningTime\":17979.410000031898,\"pid\":442,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[3380603724,1608,2814,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":870748.3799672066,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.24,\"onlineExpGained\":194104.57638918632,\"onlineMoneyMade\":3380603724,\"onlineRunningTime\":17979.410000031898,\"pid\":443,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[3250533006,804,4824,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1092477.0151476932,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.243,\"onlineExpGained\":208481.2919411065,\"onlineMoneyMade\":3250533006,\"onlineRunningTime\":17979.410000031898,\"pid\":444,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[14231456466,2010,4020,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1063516.6463236562,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.244,\"onlineExpGained\":220093.58931030883,\"onlineMoneyMade\":14231456466,\"onlineRunningTime\":17979.410000031898,\"pid\":445,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-6\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":589,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-8\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-8\",\"httpPortOpen\":false,\"ip\":\"10.7.0.6\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,5925960,5958882,5860116]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":488594166.27863824,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.24599999998,\"onlineExpGained\":103499783.398918,\"onlineMoneyMade\":0,\"onlineRunningTime\":17968.410000031858,\"pid\":446,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,20049498,20049498,15802560]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":602965225.950537,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.247,\"onlineExpGained\":135606823.06248713,\"onlineMoneyMade\":0,\"onlineRunningTime\":17968.410000031858,\"pid\":447,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,16823142,16823142,16790220]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1104584336.5712192,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.25,\"onlineExpGained\":233894803.94940493,\"onlineMoneyMade\":0,\"onlineRunningTime\":17968.410000031858,\"pid\":448,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,9316926,9316926,9251082]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":609943964.7770797,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.253,\"onlineExpGained\":129240240.96355453,\"onlineMoneyMade\":0,\"onlineRunningTime\":17968.410000031858,\"pid\":449,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[68750000,3292200,3390966,3358044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":337808771.14567196,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.25400000002,\"onlineExpGained\":71560446.0261359,\"onlineMoneyMade\":68750000,\"onlineRunningTime\":17968.410000031858,\"pid\":450,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[375000000,2370384,2436228,2370384]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":205633385.569894,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.255,\"onlineExpGained\":43076904.28415091,\"onlineMoneyMade\":375000000,\"onlineRunningTime\":17968.410000031858,\"pid\":451,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[100000000,1843632,2008242,1942398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":161455917.4404293,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.25699999998,\"onlineExpGained\":34563935.08683732,\"onlineMoneyMade\":100000000,\"onlineRunningTime\":17968.410000031858,\"pid\":452,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,1415646,1580256,1448568]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":175567971.04008266,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.258,\"onlineExpGained\":37350174.16651435,\"onlineMoneyMade\":0,\"onlineRunningTime\":17968.410000031858,\"pid\":453,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,888894,1086426,987660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":116135984.64152673,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.259,\"onlineExpGained\":25441422.98298805,\"onlineMoneyMade\":0,\"onlineRunningTime\":17968.410000031858,\"pid\":454,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[250000000,921816,1119348,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82082020.70838816,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.261,\"onlineExpGained\":18690127.861771297,\"onlineMoneyMade\":250000000,\"onlineRunningTime\":17968.410000031858,\"pid\":455,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,592596,757206,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":93657490.9229097,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.26299999998,\"onlineExpGained\":20354645.655951682,\"onlineMoneyMade\":0,\"onlineRunningTime\":17968.410000031858,\"pid\":456,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1185192,0,1777788]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34712417.77426687,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.266,\"onlineExpGained\":6716088,\"onlineMoneyMade\":0,\"onlineRunningTime\":17968.410000031858,\"pid\":457,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[4579027289.718014,21398,59256,52672]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8672176.622976976,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.267,\"onlineExpGained\":1636737.3229658306,\"onlineMoneyMade\":4579027289.718014,\"onlineRunningTime\":17968.410000031858,\"pid\":458,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[2250007913.1818414,26336,70778,62548]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8439705.087321872,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.269,\"onlineExpGained\":1808043.9572127783,\"onlineMoneyMade\":2250007913.1818414,\"onlineRunningTime\":17968.410000031858,\"pid\":459,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[2400226341.0601516,52672,131680,115220]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12342493.107019588,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.27,\"onlineExpGained\":2552270.3327140156,\"onlineMoneyMade\":2400226341.0601516,\"onlineRunningTime\":17968.410000031858,\"pid\":460,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[91048.35879871553,4938,36212,32920]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6284585.363307833,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.274,\"onlineExpGained\":1182712.2787604374,\"onlineMoneyMade\":91048.35879871553,\"onlineRunningTime\":17968.410000031858,\"pid\":461,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[75291.51230645912,4938,19752,21398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3611487.9266206403,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.276,\"onlineExpGained\":741221.3411736235,\"onlineMoneyMade\":75291.51230645912,\"onlineRunningTime\":17968.410000031858,\"pid\":462,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,223856,0,164600]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3431705.496073437,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.276,\"onlineExpGained\":707368.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":17968.410000031858,\"pid\":463,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[6189.850049617601,1646,24690,21398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5210938.721276099,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.278,\"onlineExpGained\":1051375.7612078674,\"onlineMoneyMade\":6189.850049617601,\"onlineRunningTime\":17968.410000031858,\"pid\":464,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[6875000000,1528,9932,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2160376.9045839147,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.28,\"onlineExpGained\":436023.36920988106,\"onlineMoneyMade\":6875000000,\"onlineRunningTime\":17968.410000031858,\"pid\":465,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,0,11460,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2092976.21682129,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.282,\"onlineExpGained\":411199.8127099848,\"onlineMoneyMade\":0,\"onlineRunningTime\":17968.410000031858,\"pid\":466,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,764,10696,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2157854.0139832622,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.282,\"onlineExpGained\":424251.63614697853,\"onlineMoneyMade\":0,\"onlineRunningTime\":17968.410000031858,\"pid\":467,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[456443396,764,8404,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1511439.4190997,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.28399999999,\"onlineExpGained\":301715.3181056669,\"onlineMoneyMade\":456443396,\"onlineRunningTime\":17968.410000031858,\"pid\":468,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[8964012,3820,9932,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1900516.093559593,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.286,\"onlineExpGained\":378533.274618434,\"onlineMoneyMade\":8964012,\"onlineRunningTime\":17968.410000031858,\"pid\":469,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[7834324928,3056,7640,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1569064.9207177726,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.291,\"onlineExpGained\":303856.63693253015,\"onlineMoneyMade\":7834324928,\"onlineRunningTime\":17968.410000031858,\"pid\":470,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,98556,0,44312]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1170622.3208852082,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.291,\"onlineExpGained\":244098,\"onlineMoneyMade\":0,\"onlineRunningTime\":17968.410000031858,\"pid\":471,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[9319482100,1528,8404,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1675969.5140210856,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.293,\"onlineExpGained\":322722.0963556149,\"onlineMoneyMade\":9319482100,\"onlineRunningTime\":17968.410000031858,\"pid\":472,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[2173944444,1608,2814,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":791350.8220682287,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.29499999998,\"onlineExpGained\":194104.57638918635,\"onlineMoneyMade\":2173944444,\"onlineRunningTime\":17968.410000031858,\"pid\":473,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[3703350630,1206,4824,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1133080.2433357486,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.299,\"onlineExpGained\":221350.50749302655,\"onlineMoneyMade\":3703350630,\"onlineRunningTime\":17968.410000031858,\"pid\":474,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[11253682872,2412,4020,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":955076.4890176357,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.3,\"onlineExpGained\":204989.127298817,\"onlineMoneyMade\":11253682872,\"onlineRunningTime\":17968.410000031858,\"pid\":475,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-8\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":619,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-9\",\"httpPortOpen\":false,\"ip\":\"93.4.6.1\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[1125000000,5860116,5958882,5860116]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":520196045.9724963,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.301,\"onlineExpGained\":106764155.04600818,\"onlineMoneyMade\":1125000000,\"onlineRunningTime\":17957.410000031818,\"pid\":476,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,20049498,20016576,15802560]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":601907855.175808,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.30299999999,\"onlineExpGained\":135497572.85256767,\"onlineMoneyMade\":0,\"onlineRunningTime\":17957.410000031818,\"pid\":477,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,16823142,16790220,16790220]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1102613716.1381412,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.305,\"onlineExpGained\":233691195.85021067,\"onlineMoneyMade\":0,\"onlineRunningTime\":17957.410000031818,\"pid\":478,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,9316926,9349848,9251082]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":611915301.3486238,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.307,\"onlineExpGained\":129443849.06274879,\"onlineMoneyMade\":0,\"onlineRunningTime\":17957.410000031818,\"pid\":479,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,3127590,3423888,3358044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":337808911.20134026,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.309,\"onlineExpGained\":71560446.0261359,\"onlineMoneyMade\":0,\"onlineRunningTime\":17957.410000031818,\"pid\":480,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[75000000,2238696,2502072,2370384]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":201295986.69252008,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.31,\"onlineExpGained\":42628853.27376598,\"onlineMoneyMade\":75000000,\"onlineRunningTime\":17957.410000031818,\"pid\":481,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,1711944,2041164,1942398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":159597061.37058932,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.311,\"onlineExpGained\":34371913.225243784,\"onlineMoneyMade\":0,\"onlineRunningTime\":17957.410000031818,\"pid\":482,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[125000000,1448568,1514412,1448568]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":171201151.4758286,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.315,\"onlineExpGained\":36899085.1065323,\"onlineMoneyMade\":125000000,\"onlineRunningTime\":17957.410000031818,\"pid\":483,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[187500000,954738,1119348,987660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":123123070.24514607,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.316,\"onlineExpGained\":26163165.47895934,\"onlineMoneyMade\":187500000,\"onlineRunningTime\":17957.410000031818,\"pid\":484,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[1000000000,855972,1152270,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":90137386.48778003,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.31699999998,\"onlineExpGained\":19522222.595343307,\"onlineMoneyMade\":1000000000,\"onlineRunningTime\":17957.410000031818,\"pid\":485,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[500000000,724284,823050,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":106660762.14516181,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.319,\"onlineExpGained\":21697845.623095702,\"onlineMoneyMade\":500000000,\"onlineRunningTime\":17957.410000031818,\"pid\":486,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1119348,0,1744866]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":33664856.713102505,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.322,\"onlineExpGained\":6592630.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":17957.410000031818,\"pid\":487,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[4574637680.884281,18106,62548,54318]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8402506.000935538,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.324,\"onlineExpGained\":1647331.0920465156,\"onlineMoneyMade\":4574637680.884281,\"onlineRunningTime\":17957.410000031818,\"pid\":488,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[7913.181841406567,11522,72424,62548]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8748121.71916793,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.324,\"onlineExpGained\":1751219.71855752,\"onlineMoneyMade\":7913.181841406567,\"onlineRunningTime\":17957.410000031818,\"pid\":489,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[1804247249.0120406,49380,141556,126742]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13616097.340235911,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.326,\"onlineExpGained\":2733473.815550207,\"onlineMoneyMade\":1804247249.0120406,\"onlineRunningTime\":17957.410000031818,\"pid\":490,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[1464360325,8230,34566,27982]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5892130.994654778,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.32799999998,\"onlineExpGained\":1063780.317767768,\"onlineMoneyMade\":1464360325,\"onlineRunningTime\":17957.410000031818,\"pid\":491,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,6584,24690,19752]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3696466.8471758077,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.33000000002,\"onlineExpGained\":781651.5961467304,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":17957.410000031818,\"pid\":492,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,240316,0,158016]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3341192.577867084,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.33000000002,\"onlineExpGained\":682678.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":17957.410000031818,\"pid\":493,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,3292,24690,19752]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4611192.760342412,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.332,\"onlineExpGained\":980695.0377653218,\"onlineMoneyMade\":0,\"onlineRunningTime\":17957.410000031818,\"pid\":494,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[7145803620,2292,8404,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2160377.791918058,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.334,\"onlineExpGained\":441340.72737097717,\"onlineMoneyMade\":7145803620,\"onlineRunningTime\":17957.410000031818,\"pid\":495,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[97792,2292,9932,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1965768.1557575334,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.337,\"onlineExpGained\":398349.8185627978,\"onlineMoneyMade\":97792,\"onlineRunningTime\":17957.410000031818,\"pid\":496,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[6123990103,3056,9168,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1998010.4663866516,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.338,\"onlineExpGained\":410854.2160581266,\"onlineMoneyMade\":6123990103,\"onlineRunningTime\":17957.410000031818,\"pid\":497,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[4592238976,1528,8404,3820]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1328572.267933672,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.34,\"onlineExpGained\":289960.1758418098,\"onlineMoneyMade\":4592238976,\"onlineRunningTime\":17957.410000031818,\"pid\":498,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[4468459516,3056,9168,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1591086.5307817934,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.342,\"onlineExpGained\":349132.63192962355,\"onlineMoneyMade\":4468459516,\"onlineRunningTime\":17957.410000031818,\"pid\":499,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[2488554280,3056,8404,3820]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1419002.9468099377,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.34399999998,\"onlineExpGained\":286393.6118214652,\"onlineMoneyMade\":2488554280,\"onlineRunningTime\":17957.410000031818,\"pid\":500,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,92444,0,45076]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1100874.6120954168,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.34600000002,\"onlineExpGained\":233211,\"onlineMoneyMade\":0,\"onlineRunningTime\":17957.410000031818,\"pid\":501,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[573274276,764,6876,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1397591.4517724821,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.348,\"onlineExpGained\":261974.40762985212,\"onlineMoneyMade\":573274276,\"onlineRunningTime\":17957.410000031818,\"pid\":502,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[3103003026,1608,2814,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":915350.47393919,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.348,\"onlineExpGained\":191370.7091160992,\"onlineMoneyMade\":3103003026,\"onlineRunningTime\":17957.410000031818,\"pid\":503,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[1947464076,1206,4422,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1111240.8115156284,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.34999999998,\"onlineExpGained\":226498.19371379464,\"onlineMoneyMade\":1947464076,\"onlineRunningTime\":17957.410000031818,\"pid\":504,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[12388364856,2010,4020,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":971970.2840388917,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.352,\"onlineExpGained\":215778.02873559686,\"onlineMoneyMade\":12388364856,\"onlineRunningTime\":17957.410000031818,\"pid\":505,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-9\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":649,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-10\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-10\",\"httpPortOpen\":false,\"ip\":\"91.7.7.9\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,5958882,5958882,5860116]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":488594563.98169434,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.354,\"onlineExpGained\":103499783.398918,\"onlineMoneyMade\":0,\"onlineRunningTime\":17946.410000031778,\"pid\":506,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,19950732,20016576,15802560]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":601114865.5826995,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.354,\"onlineExpGained\":135415635.19512814,\"onlineMoneyMade\":0,\"onlineRunningTime\":17946.410000031778,\"pid\":507,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[7150000000,16823142,16757298,16790220]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1312042115.1404927,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.356,\"onlineExpGained\":255324556.3896013,\"onlineMoneyMade\":7150000000,\"onlineRunningTime\":17946.410000031778,\"pid\":508,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,9316926,9316926,9251082]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":609944460.6264287,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.359,\"onlineExpGained\":129240240.96355453,\"onlineMoneyMade\":0,\"onlineRunningTime\":17946.410000031778,\"pid\":509,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[1168750000,3292200,3423888,3358044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":374388050.05579704,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.361,\"onlineExpGained\":75338960.95639524,\"onlineMoneyMade\":1168750000,\"onlineRunningTime\":17946.410000031778,\"pid\":510,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1125000000,2238696,2436228,2370384]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":221744221.54056492,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.36299999998,\"onlineExpGained\":44741093.75129492,\"onlineMoneyMade\":1125000000,\"onlineRunningTime\":17946.410000031778,\"pid\":511,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[800000000,1876554,1975320,1942398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":171989948.2590489,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.365,\"onlineExpGained\":35652058.969200715,\"onlineMoneyMade\":800000000,\"onlineRunningTime\":17946.410000031778,\"pid\":512,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[1500000000,1382724,1514412,1448568]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":187374573.70742816,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.36599999998,\"onlineExpGained\":39786055.090417445,\"onlineMoneyMade\":1500000000,\"onlineRunningTime\":17946.410000031778,\"pid\":513,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[937500000,823050,1119348,987660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":132730293.94173086,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.369,\"onlineExpGained\":27155561.410919867,\"onlineMoneyMade\":937500000,\"onlineRunningTime\":17946.410000031778,\"pid\":514,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[250000000,954738,1086426,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":79603524.67062344,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.37,\"onlineExpGained\":18434098.71297991,\"onlineMoneyMade\":250000000,\"onlineRunningTime\":17946.410000031778,\"pid\":515,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,625518,823050,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":103660057.93177137,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.372,\"onlineExpGained\":21387876.39990862,\"onlineMoneyMade\":0,\"onlineRunningTime\":17946.410000031778,\"pid\":516,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1514412,0,1876554]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35088643.44921188,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.373,\"onlineExpGained\":7086460.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":17946.410000031778,\"pid\":517,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[3052715628.218406,16460,69132,60902]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8932049.783075102,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.374,\"onlineExpGained\":1811534.5127971328,\"onlineMoneyMade\":3052715628.218406,\"onlineRunningTime\":17946.410000031778,\"pid\":518,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[2250000000,23044,88884,75716]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10916688.760744981,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.376,\"onlineExpGained\":2174818.5885330844,\"onlineMoneyMade\":2250000000,\"onlineRunningTime\":17946.410000031778,\"pid\":519,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[4804482365.515802,62548,130034,115220]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13438253.227803878,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.37699999998,\"onlineExpGained\":2610101.2314915243,\"onlineMoneyMade\":4804482365.515802,\"onlineRunningTime\":17946.410000031778,\"pid\":520,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[1464367833.9307287,11522,37858,34566]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6848806.174593367,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.378,\"onlineExpGained\":1255392.9215892912,\"onlineMoneyMade\":1464367833.9307287,\"onlineRunningTime\":17946.410000031778,\"pid\":521,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[12919610904.298254,8230,32920,27982]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5586162.838362602,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.381,\"onlineExpGained\":1132047.139246989,\"onlineMoneyMade\":12919610904.298254,\"onlineRunningTime\":17946.410000031778,\"pid\":522,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,223856,0,167892]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3432373.9820241667,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.383,\"onlineExpGained\":713541,\"onlineMoneyMade\":0,\"onlineRunningTime\":17946.410000031778,\"pid\":523,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,4938,27982,23044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5382004.296835265,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.384,\"onlineExpGained\":1139726.6655110496,\"onlineMoneyMade\":0,\"onlineRunningTime\":17946.410000031778,\"pid\":524,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[29570620,3056,8404,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2273177.3440192705,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.386,\"onlineExpGained\":462610.1600153616,\"onlineMoneyMade\":29570620,\"onlineRunningTime\":17946.410000031778,\"pid\":525,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[12667444566,2292,9932,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1781732.0580819861,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.387,\"onlineExpGained\":372649.8302684237,\"onlineMoneyMade\":12667444566,\"onlineRunningTime\":17946.410000031778,\"pid\":526,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,2292,13752,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2309430.9449498146,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.39,\"onlineExpGained\":495704.5432875222,\"onlineMoneyMade\":0,\"onlineRunningTime\":17946.410000031778,\"pid\":527,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[506239388,1528,9168,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1577938.0809265473,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.392,\"onlineExpGained\":360491.0294249527,\"onlineMoneyMade\":506239388,\"onlineRunningTime\":17946.410000031778,\"pid\":528,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[3457995408,3056,10696,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1760618.6729563568,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.394,\"onlineExpGained\":400583.7566350418,\"onlineMoneyMade\":3457995408,\"onlineRunningTime\":17946.410000031778,\"pid\":529,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[3766053960,2292,9168,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1446756.052433979,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.396,\"onlineExpGained\":324812.267065808,\"onlineMoneyMade\":3766053960,\"onlineRunningTime\":17946.410000031778,\"pid\":530,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,108488,0,42784]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1202468.7440454166,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.396,\"onlineExpGained\":244671,\"onlineMoneyMade\":0,\"onlineRunningTime\":17946.410000031778,\"pid\":531,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[5932749556,2292,6876,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1351758.8509222332,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.398,\"onlineExpGained\":296144.98253809364,\"onlineMoneyMade\":5932749556,\"onlineRunningTime\":17946.410000031778,\"pid\":532,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[3267822624,1608,2412,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":917144.9120836729,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.4,\"onlineExpGained\":194104.57638918635,\"onlineMoneyMade\":3267822624,\"onlineRunningTime\":17946.410000031778,\"pid\":533,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[2542026900,402,5226,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1014650.8578878737,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.40099999998,\"onlineExpGained\":213628.97816187446,\"onlineMoneyMade\":2542026900,\"onlineRunningTime\":17946.410000031778,\"pid\":534,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[3357044514,804,3618,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":870105.1359085536,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.40399999998,\"onlineExpGained\":179095.76385054537,\"onlineMoneyMade\":3357044514,\"onlineRunningTime\":17946.410000031778,\"pid\":535,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-10\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":679,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-11\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-11\",\"httpPortOpen\":false,\"ip\":\"84.1.6.8\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,5860116,5958882,5860116]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":487355472.69398916,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.405,\"onlineExpGained\":103371768.82452232,\"onlineMoneyMade\":0,\"onlineRunningTime\":17935.410000031738,\"pid\":536,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,19950732,19983654,15802560]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":600057479.2398155,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.406,\"onlineExpGained\":135306384.9852087,\"onlineMoneyMade\":0,\"onlineRunningTime\":17935.410000031738,\"pid\":537,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2650000000,16823142,16823142,16724376]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1178994226.4277873,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.408,\"onlineExpGained\":241581009.6939883,\"onlineMoneyMade\":2650000000,\"onlineRunningTime\":17935.410000031738,\"pid\":538,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,9316926,9316926,9218160]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":607973604.9376245,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.40899999999,\"onlineExpGained\":129036632.86436027,\"onlineMoneyMade\":0,\"onlineRunningTime\":17935.410000031738,\"pid\":539,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[756250000,3325122,3390966,3358044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":359457982.4578347,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.412,\"onlineExpGained\":73796709.96445265,\"onlineMoneyMade\":756250000,\"onlineRunningTime\":17935.410000031738,\"pid\":540,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[75000000,2337462,2436228,2370384]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":197578298.33332518,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.414,\"onlineExpGained\":42244809.55057891,\"onlineMoneyMade\":75000000,\"onlineRunningTime\":17935.410000031738,\"pid\":541,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[100000000,1679022,2008242,1942398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":158977547.44812593,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.415,\"onlineExpGained\":34307905.93804594,\"onlineMoneyMade\":100000000,\"onlineRunningTime\":17935.410000031738,\"pid\":542,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,1481490,1547334,1448568]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":172074662.3660254,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.416,\"onlineExpGained\":36989302.918528706,\"onlineMoneyMade\":0,\"onlineRunningTime\":17935.410000031738,\"pid\":543,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[187500000,921816,1119348,987660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":122249784.75538133,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.418,\"onlineExpGained\":26072947.66696293,\"onlineMoneyMade\":187500000,\"onlineRunningTime\":17935.410000031738,\"pid\":544,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[1250000000,855972,1086426,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":87039249.59310047,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.419,\"onlineExpGained\":19202186.159354072,\"onlineMoneyMade\":1250000000,\"onlineRunningTime\":17935.410000031738,\"pid\":545,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[500000000,592596,823050,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":105660594.10336623,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.41999999998,\"onlineExpGained\":21594522.54870001,\"onlineMoneyMade\":500000000,\"onlineRunningTime\":17935.410000031738,\"pid\":546,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,855972,0,1744866]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":31945927.45345875,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.422,\"onlineExpGained\":6592630.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":17935.410000031738,\"pid\":547,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[3052649764.8387003,19752,60902,54318]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8017617.243273066,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.425,\"onlineExpGained\":1599659.131183433,\"onlineMoneyMade\":3052649764.8387003,\"onlineRunningTime\":17935.410000031738,\"pid\":548,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[1125011271.4161556,19752,67486,64194]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7963719.004300643,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.42599999998,\"onlineExpGained\":1771883.078068523,\"onlineMoneyMade\":1125011271.4161556,\"onlineRunningTime\":17935.410000031738,\"pid\":549,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[3600076079.4510202,44442,141556,116866]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12393658.28815863,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.42799999999,\"onlineExpGained\":2637088.98425436,\"onlineMoneyMade\":3600076079.4510202,\"onlineRunningTime\":17935.410000031738,\"pid\":550,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[2928724912.2566414,11522,39504,34566]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6420420.036459804,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.429,\"onlineExpGained\":1301644.239753107,\"onlineMoneyMade\":2928724912.2566414,\"onlineRunningTime\":17935.410000031738,\"pid\":551,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[0,8230,27982,21398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4092288.64227248,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.43099999998,\"onlineExpGained\":862512.1060929439,\"onlineMoneyMade\":0,\"onlineRunningTime\":17935.410000031738,\"pid\":552,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,227148,0,164600]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3265727.8407958336,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.435,\"onlineExpGained\":699961.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":17935.410000031738,\"pid\":553,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,4938,27982,19752]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4654478.59926245,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.435,\"onlineExpGained\":1069045.942068504,\"onlineMoneyMade\":0,\"onlineRunningTime\":17935.410000031738,\"pid\":554,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[1528,764,9168,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1954474.4906772545,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.43699999998,\"onlineExpGained\":441340.7273709772,\"onlineMoneyMade\":1528,\"onlineRunningTime\":17935.410000031738,\"pid\":555,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,1528,12224,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1844182.4237243966,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.43899999998,\"onlineExpGained\":415483.1440923804,\"onlineMoneyMade\":0,\"onlineRunningTime\":17935.410000031738,\"pid\":556,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,1528,9932,7640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1909138.766132006,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.43899999998,\"onlineExpGained\":424251.63614697853,\"onlineMoneyMade\":0,\"onlineRunningTime\":17935.410000031738,\"pid\":557,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[7538738676,3056,10696,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1644436.1068328514,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.441,\"onlineExpGained\":391838.0754619051,\"onlineMoneyMade\":7538738676,\"onlineRunningTime\":17935.410000031738,\"pid\":558,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[202388948,1528,9932,7640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1609091.6025284624,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.443,\"onlineExpGained\":367508.0336101301,\"onlineMoneyMade\":202388948,\"onlineRunningTime\":17935.410000031738,\"pid\":559,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[2176347972,1528,7640,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1167507.7589474185,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.44400000002,\"onlineExpGained\":289886.2168436782,\"onlineMoneyMade\":2176347972,\"onlineRunningTime\":17935.410000031738,\"pid\":560,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,108488,0,46604]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1239243.8343854167,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.445,\"onlineExpGained\":254985,\"onlineMoneyMade\":0,\"onlineRunningTime\":17935.410000031738,\"pid\":561,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[26155705788,3820,6876,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1606999.6295812186,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.448,\"onlineExpGained\":356892.6712638564,\"onlineMoneyMade\":26155705788,\"onlineRunningTime\":17935.410000031738,\"pid\":562,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[2171424708,1206,2814,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":870749.7719612934,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.449,\"onlineExpGained\":185902.9745699249,\"onlineMoneyMade\":2171424708,\"onlineRunningTime\":17935.410000031738,\"pid\":563,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[1705973430,1608,4422,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1145389.394916588,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.451,\"onlineExpGained\":221350.50749302655,\"onlineMoneyMade\":1705973430,\"onlineRunningTime\":17935.410000031738,\"pid\":564,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[7848135450,1608,3618,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":935604.5996868499,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.453,\"onlineExpGained\":189884.66528732522,\"onlineMoneyMade\":7848135450,\"onlineRunningTime\":17935.410000031738,\"pid\":565,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-11\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":709,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-12\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-12\",\"httpPortOpen\":false,\"ip\":\"48.9.7.8\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2750000000,5893038,5925960,5860116]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":485496730.3170929,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.455,\"onlineExpGained\":111628708.87304473,\"onlineMoneyMade\":2750000000,\"onlineRunningTime\":17924.410000031694,\"pid\":566,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,19983654,19950732,15802560]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":599264484.1272955,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.457,\"onlineExpGained\":135224447.32776913,\"onlineMoneyMade\":0,\"onlineRunningTime\":17924.410000031694,\"pid\":567,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[6300000000,16823142,16757298,16757298]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1098672822.8762562,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.45899999997,\"onlineExpGained\":252524945.0256786,\"onlineMoneyMade\":6300000000,\"onlineRunningTime\":17924.410000031694,\"pid\":568,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[3967500000,9284004,9349848,9218160]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":609452148.0808326,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.45899999997,\"onlineExpGained\":139726058.07205933,\"onlineMoneyMade\":3967500000,\"onlineRunningTime\":17924.410000031694,\"pid\":569,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[825000000,3160512,3390966,3358044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":335569769.09601516,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.46099999998,\"onlineExpGained\":73950935.06364691,\"onlineMoneyMade\":825000000,\"onlineRunningTime\":17924.410000031694,\"pid\":570,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[375000000,2370384,2436228,2370384]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":196339088.3654416,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.463,\"onlineExpGained\":43140911.571348764,\"onlineMoneyMade\":375000000,\"onlineRunningTime\":17924.410000031694,\"pid\":571,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[1500000000,1777788,1975320,1942398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":158357962.9220688,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.463,\"onlineExpGained\":36932204.71315767,\"onlineMoneyMade\":1500000000,\"onlineRunningTime\":17924.410000031694,\"pid\":572,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[250000000,1448568,1547334,1448568]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":171201345.73232016,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.465,\"onlineExpGained\":37530609.790507175,\"onlineMoneyMade\":250000000,\"onlineRunningTime\":17924.410000031694,\"pid\":573,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[1500000000,987660,1086426,987660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":120503069.38349684,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.467,\"onlineExpGained\":27787086.09489475,\"onlineMoneyMade\":1500000000,\"onlineRunningTime\":17924.410000031694,\"pid\":574,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[1500000000,888894,1152270,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":83941075.11191949,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.46899999998,\"onlineExpGained\":20034280.892926082,\"onlineMoneyMade\":1500000000,\"onlineRunningTime\":17924.410000031694,\"pid\":575,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[4000000000,724284,790128,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":110661883.22240159,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.471,\"onlineExpGained\":23660984.036613885,\"onlineMoneyMade\":4000000000,\"onlineRunningTime\":17924.410000031694,\"pid\":576,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1876554,0,1975320]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35088670.35437344,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.473,\"onlineExpGained\":7456833,\"onlineMoneyMade\":0,\"onlineRunningTime\":17924.410000031694,\"pid\":577,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[3052649770.2269325,21398,67486,57610]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8233160.546385724,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.473,\"onlineExpGained\":1753268.7828533654,\"onlineMoneyMade\":3052649770.2269325,\"onlineRunningTime\":17924.410000031694,\"pid\":578,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[6750007929.862309,24690,82300,75716]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10146819.600776598,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.476,\"onlineExpGained\":2195481.948044088,\"onlineMoneyMade\":6750007929.862309,\"onlineRunningTime\":17924.410000031694,\"pid\":579,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[4193826542.4839687,54318,130034,121804]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12848230.19603587,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.478,\"onlineExpGained\":2671787.5235208655,\"onlineMoneyMade\":4193826542.4839687,\"onlineRunningTime\":17924.410000031694,\"pid\":580,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[0,8230,37858,31274]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5716815.971485378,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.47999999998,\"onlineExpGained\":1162890.2852616594,\"onlineMoneyMade\":0,\"onlineRunningTime\":17924.410000031694,\"pid\":581,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306545109.978251,4938,29628,29628]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4667696.749316644,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.481,\"onlineExpGained\":1057925.0051296267,\"onlineMoneyMade\":4306545109.978251,\"onlineRunningTime\":17924.410000031694,\"pid\":582,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,253484,0,164600]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3374097.64384625,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.48200000002,\"onlineExpGained\":713541,\"onlineMoneyMade\":0,\"onlineRunningTime\":17924.410000031694,\"pid\":583,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[5456241032.791013,8230,31274,24690]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5473337.063178663,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.484,\"onlineExpGained\":1360603.9262690041,\"onlineMoneyMade\":5456241032.791013,\"onlineRunningTime\":17924.410000031694,\"pid\":584,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[6875000764,2292,9168,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2044714.2420287367,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.485,\"onlineExpGained\":430706.011048785,\"onlineMoneyMade\":6875000764,\"onlineRunningTime\":17924.410000031694,\"pid\":585,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[12684213600,764,9168,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1875407.9689927746,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.487,\"onlineExpGained\":381216.49303321505,\"onlineMoneyMade\":12684213600,\"onlineRunningTime\":17924.410000031694,\"pid\":586,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,764,13752,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2222967.5404304285,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.488,\"onlineExpGained\":468909.7031098183,\"onlineMoneyMade\":0,\"onlineRunningTime\":17924.410000031694,\"pid\":587,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[8831861392,3056,13752,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1929163.9031381654,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.49099999998,\"onlineExpGained\":462368.92904504796,\"onlineMoneyMade\":8831861392,\"onlineRunningTime\":17924.410000031694,\"pid\":588,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[14655048,2292,15280,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1725042.3196122013,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.492,\"onlineExpGained\":422634.23865164956,\"onlineMoneyMade\":14655048,\"onlineRunningTime\":17924.410000031694,\"pid\":589,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[3014821164,3820,6876,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1402303.3246327792,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.494,\"onlineExpGained\":300364.03191031714,\"onlineMoneyMade\":3014821164,\"onlineRunningTime\":17924.410000031694,\"pid\":590,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,112308,0,44312]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1176480.2130129165,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.495,\"onlineExpGained\":247536,\"onlineMoneyMade\":0,\"onlineRunningTime\":17924.410000031694,\"pid\":591,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[19810198356,3056,9932,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1639216.748656567,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.498,\"onlineExpGained\":394859.97671745816,\"onlineMoneyMade\":19810198356,\"onlineRunningTime\":17924.410000031694,\"pid\":592,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[4069098270,2010,2412,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":928744.4878474062,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.49899999998,\"onlineExpGained\":207773.91275462197,\"onlineMoneyMade\":4069098270,\"onlineRunningTime\":17924.410000031694,\"pid\":593,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[696717054,804,5226,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1125239.0045615328,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.501,\"onlineExpGained\":236793.56615533074,\"onlineMoneyMade\":696717054,\"onlineRunningTime\":17924.410000031694,\"pid\":594,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[10554172722,1608,4020,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":925034.187589675,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.50199999998,\"onlineExpGained\":202831.34701146107,\"onlineMoneyMade\":10554172722,\"onlineRunningTime\":17924.410000031694,\"pid\":595,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-12\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":739,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-13\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-13\",\"httpPortOpen\":false,\"ip\":\"24.4.8.6\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[3062500000,5827194,5893038,5860116]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":574105669.414119,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.504,\"onlineExpGained\":112332789.03222086,\"onlineMoneyMade\":3062500000,\"onlineRunningTime\":17913.410000031647,\"pid\":596,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,19950732,19983654,15769638]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":599000300.0285014,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.505,\"onlineExpGained\":135197134.77528927,\"onlineMoneyMade\":0,\"onlineRunningTime\":17913.410000031647,\"pid\":597,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,16724376,16790220,16724376]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1097687687.0857563,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.50699999998,\"onlineExpGained\":233182175.602225,\"onlineMoneyMade\":0,\"onlineRunningTime\":17913.410000031647,\"pid\":598,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,9284004,9316926,9218160]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":607481301.7947636,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.51,\"onlineExpGained\":128985730.83956172,\"onlineMoneyMade\":0,\"onlineRunningTime\":17913.410000031647,\"pid\":599,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[962500000,3061746,3423888,3325122]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":352739655.93316853,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.511,\"onlineExpGained\":74336497.81163256,\"onlineMoneyMade\":962500000,\"onlineRunningTime\":17913.410000031647,\"pid\":600,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[2250000000,2172852,2436228,2370384]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":230419460.09216386,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.514,\"onlineExpGained\":47749436.24959376,\"onlineMoneyMade\":2250000000,\"onlineRunningTime\":17913.410000031647,\"pid\":601,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[1200000000,1711944,1975320,1942398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":176947280.05325517,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.516,\"onlineExpGained\":36164117.26678349,\"onlineMoneyMade\":1200000000,\"onlineRunningTime\":17913.410000031647,\"pid\":602,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,1382724,1547334,1448568]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":170328037.31846002,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.51799999998,\"onlineExpGained\":36808867.29453588,\"onlineMoneyMade\":0,\"onlineRunningTime\":17913.410000031647,\"pid\":603,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,888894,1086426,987660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":117009596.47543097,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.519,\"onlineExpGained\":25531640.79498446,\"onlineMoneyMade\":0,\"onlineRunningTime\":17913.410000031647,\"pid\":604,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,823050,1152270,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":83321466.64091402,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.52,\"onlineExpGained\":18818142.43616699,\"onlineMoneyMade\":0,\"onlineRunningTime\":17913.410000031647,\"pid\":605,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,559674,790128,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":100659428.11099449,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.52399999998,\"onlineExpGained\":21077907.17672154,\"onlineMoneyMade\":0,\"onlineRunningTime\":17913.410000031647,\"pid\":606,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1415646,0,1810710]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32993529.502513126,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.52399999998,\"onlineExpGained\":6839545.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":17913.410000031647,\"pid\":607,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[1526324475,13168,60902,55964]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7126899.229282778,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.526,\"onlineExpGained\":1583768.4775624056,\"onlineMoneyMade\":1526324475,\"onlineRunningTime\":17913.410000031647,\"pid\":608,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[2250015098.234548,16460,67486,65840]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7886227.697491835,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.528,\"onlineExpGained\":1802878.1173350278,\"onlineMoneyMade\":2250015098.234548,\"onlineRunningTime\":17913.410000031647,\"pid\":609,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[4800226402.86696,62548,143202,118512]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12246002.463117272,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.52899999998,\"onlineExpGained\":2764316.9615648785,\"onlineMoneyMade\":4800226402.86696,\"onlineRunningTime\":17913.410000031647,\"pid\":610,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[2928732904.2466416,11522,37858,36212]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6196163.4656399945,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.52999999997,\"onlineExpGained\":1295036.9085868476,\"onlineMoneyMade\":2928732904.2466416,\"onlineRunningTime\":17913.410000031647,\"pid\":611,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,6584,29628,23044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4312157.034648316,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.532,\"onlineExpGained\":936634.2402103064,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":17913.410000031647,\"pid\":612,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,225502,0,159662]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3160313.2714606244,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.533,\"onlineExpGained\":686382,\"onlineMoneyMade\":0,\"onlineRunningTime\":17913.410000031647,\"pid\":613,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[1818775660.4711592,11522,23044,21398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4312359.293914325,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.536,\"onlineExpGained\":1104386.3037897765,\"onlineMoneyMade\":1818775660.4711592,\"onlineRunningTime\":17913.410000031647,\"pid\":614,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,1528,12224,3056]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1954476.038988558,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.538,\"onlineExpGained\":436023.3692098811,\"onlineMoneyMade\":0,\"onlineRunningTime\":17913.410000031647,\"pid\":615,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[12689644112,2292,9932,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1927116.0200268514,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.539,\"onlineExpGained\":406916.4813275891,\"onlineMoneyMade\":12689644112,\"onlineRunningTime\":17913.410000031647,\"pid\":616,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,1528,12224,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1965981.0364721566,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.541,\"onlineExpGained\":459978.0897172504,\"onlineMoneyMade\":0,\"onlineRunningTime\":17913.410000031647,\"pid\":617,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[2342980192,764,10696,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1570684.1856294128,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.543,\"onlineExpGained\":352654.2679157146,\"onlineMoneyMade\":2342980192,\"onlineRunningTime\":17913.410000031647,\"pid\":618,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[8935272612,2292,12224,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1900519.8686837829,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.54499999998,\"onlineExpGained\":422634.23865164956,\"onlineMoneyMade\":8935272612,\"onlineRunningTime\":17913.410000031647,\"pid\":619,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[3316811264,1528,5348,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1171684.0011407551,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.547,\"onlineExpGained\":230511.93146605737,\"onlineMoneyMade\":3316811264,\"onlineRunningTime\":17913.410000031647,\"pid\":620,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,92444,0,44312]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1166756.5005025002,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.549,\"onlineExpGained\":239514,\"onlineMoneyMade\":0,\"onlineRunningTime\":17913.410000031647,\"pid\":621,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[36619627800,4584,10696,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1754022.4574763807,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.55,\"onlineExpGained\":398656.7072628183,\"onlineMoneyMade\":36619627800,\"onlineRunningTime\":17913.410000031647,\"pid\":622,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[3014978694,1206,2814,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":721759.0837365042,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.552,\"onlineExpGained\":185902.97456992496,\"onlineMoneyMade\":3014978694,\"onlineRunningTime\":17913.410000031647,\"pid\":623,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[391145598,804,4824,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1017728.9981898749,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.55299999999,\"onlineExpGained\":221350.5074930266,\"onlineMoneyMade\":391145598,\"onlineRunningTime\":17913.410000031647,\"pid\":624,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[11167731252,2814,3618,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1017745.4572320473,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.554,\"onlineExpGained\":213620.2484482409,\"onlineMoneyMade\":11167731252,\"onlineRunningTime\":17913.410000031647,\"pid\":625,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-13\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":769,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-15\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-15\",\"httpPortOpen\":false,\"ip\":\"54.8.9.3\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[62500000,5827194,5893038,5860116]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":483638179.2686461,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.55599999998,\"onlineExpGained\":102987725.10133523,\"onlineMoneyMade\":62500000,\"onlineRunningTime\":17902.410000031603,\"pid\":626,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,19950732,19950732,15769638]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":597942907.4947721,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.557,\"onlineExpGained\":135087884.56536984,\"onlineMoneyMade\":0,\"onlineRunningTime\":17902.410000031603,\"pid\":627,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,16724376,16757298,16724376]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1095717043.6301165,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.56,\"onlineExpGained\":232978567.50303075,\"onlineMoneyMade\":0,\"onlineRunningTime\":17902.410000031603,\"pid\":628,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,9284004,9284004,9218160]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":605510452.2990389,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.56199999998,\"onlineExpGained\":128782122.74036746,\"onlineMoneyMade\":0,\"onlineRunningTime\":17902.410000031603,\"pid\":629,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,3127590,3423888,3325122]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":331837473.61798143,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.56199999998,\"onlineExpGained\":70943545.62935887,\"onlineMoneyMade\":0,\"onlineRunningTime\":17902.410000031603,\"pid\":630,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[75000000,2172852,2469150,2370384]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":199437450.76134986,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.56399999998,\"onlineExpGained\":42436831.412172444,\"onlineMoneyMade\":75000000,\"onlineRunningTime\":17902.410000031603,\"pid\":631,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,1810710,1942398,1942398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":154020595.9372147,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.56699999998,\"onlineExpGained\":33795847.640463166,\"onlineMoneyMade\":0,\"onlineRunningTime\":17902.410000031603,\"pid\":632,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,1415646,1514412,1448568]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":168581339.9588123,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.569,\"onlineExpGained\":36628431.67054306,\"onlineMoneyMade\":0,\"onlineRunningTime\":17902.410000031603,\"pid\":633,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,823050,1086426,987660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":116136259.7807928,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.57,\"onlineExpGained\":25441422.98298805,\"onlineMoneyMade\":0,\"onlineRunningTime\":17902.410000031603,\"pid\":634,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,954738,1152270,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82701856.0896717,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.571,\"onlineExpGained\":18754135.148969144,\"onlineMoneyMade\":0,\"onlineRunningTime\":17902.410000031603,\"pid\":635,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,625518,823050,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":101659715.5411675,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.573,\"onlineExpGained\":21181230.251117233,\"onlineMoneyMade\":0,\"onlineRunningTime\":17902.410000031603,\"pid\":636,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,691362,0,1646100]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":31945964.408403754,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.57499999998,\"onlineExpGained\":6222258,\"onlineMoneyMade\":0,\"onlineRunningTime\":17902.410000031603,\"pid\":637,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[3052663281.3022003,19752,55964,49380]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7767568.144674626,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.57499999998,\"onlineExpGained\":1493721.4403765833,\"onlineMoneyMade\":3052663281.3022003,\"onlineRunningTime\":17902.410000031603,\"pid\":638,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[4500035342.300809,24690,57610,57610]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7720460.878339121,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.577,\"onlineExpGained\":1673732.120391258,\"onlineMoneyMade\":4500035342.300809,\"onlineRunningTime\":17902.410000031603,\"pid\":639,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[2400268515.733562,52672,128388,116866]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":11962601.162674697,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.579,\"onlineExpGained\":2544559.5462103477,\"onlineMoneyMade\":2400268515.733562,\"onlineRunningTime\":17902.410000031603,\"pid\":640,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[4517.8598816287595,6584,36212,31274]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6164570.332719972,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.581,\"onlineExpGained\":1136460.9605966215,\"onlineMoneyMade\":4517.8598816287595,\"onlineRunningTime\":17902.410000031603,\"pid\":641,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[8613179918.13651,6584,21398,19752]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4088659.9103708947,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.58299999998,\"onlineExpGained\":774913.2203178792,\"onlineMoneyMade\":8613179918.13651,\"onlineRunningTime\":17902.410000031603,\"pid\":642,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,230440,0,151432]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3246112.6328260414,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.58399999997,\"onlineExpGained\":650581.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":17902.410000031603,\"pid\":643,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,3292,21398,19752]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4339283.129455059,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.585,\"onlineExpGained\":901179.2238924578,\"onlineMoneyMade\":0,\"onlineRunningTime\":17902.410000031603,\"pid\":644,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[6875000000,2292,9932,3820]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2044715.8741622835,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.589,\"onlineExpGained\":414753.93656549667,\"onlineMoneyMade\":6875000000,\"onlineRunningTime\":17902.410000031603,\"pid\":645,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[764,2292,9168,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1852116.0922080548,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.589,\"onlineExpGained\":376933.16165081935,\"onlineMoneyMade\":764,\"onlineRunningTime\":17902.410000031603,\"pid\":646,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,1528,9932,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1965981.7733302615,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.591,\"onlineExpGained\":406388.4093618426,\"onlineMoneyMade\":0,\"onlineRunningTime\":17902.410000031603,\"pid\":647,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[8222510272,2292,7640,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1713048.4507221011,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.593,\"onlineExpGained\":329143.9833880003,\"onlineMoneyMade\":8222510272,\"onlineRunningTime\":17902.410000031603,\"pid\":648,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[770876,764,10696,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1980462.9489852304,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.593,\"onlineExpGained\":363832.95327402884,\"onlineMoneyMade\":770876,\"onlineRunningTime\":17902.410000031603,\"pid\":649,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[6887460,1528,7640,3820]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1013270.943283844,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.595,\"onlineExpGained\":240989.74653269636,\"onlineMoneyMade\":6887460,\"onlineRunningTime\":17902.410000031603,\"pid\":650,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,90916,0,46604]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1127927.2180152084,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.597,\"onlineExpGained\":232638,\"onlineMoneyMade\":0,\"onlineRunningTime\":17902.410000031603,\"pid\":651,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[4976145156,3056,7640,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1774670.2628147118,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.599,\"onlineExpGained\":326518.8269009751,\"onlineMoneyMade\":4976145156,\"onlineRunningTime\":17902.410000031603,\"pid\":652,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[3832432830,1608,2814,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":855883.632608089,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.601,\"onlineExpGained\":188636.84184301208,\"onlineMoneyMade\":3832432830,\"onlineRunningTime\":17902.410000031603,\"pid\":653,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[142509402,804,4824,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1036492.3639753062,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.604,\"onlineExpGained\":208481.29194110644,\"onlineMoneyMade\":142509402,\"onlineRunningTime\":17902.410000031603,\"pid\":654,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[4769779044,1206,3618,3618]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":892411.5672406463,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.606,\"onlineExpGained\":202831.34701146107,\"onlineMoneyMade\":4769779044,\"onlineRunningTime\":17902.410000031603,\"pid\":655,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-15\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":799,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-16\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-16\",\"httpPortOpen\":false,\"ip\":\"98.9.7.0\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[3122690603,5925960,5925960,5827194]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":575965043.06733,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.607,\"onlineExpGained\":112524810.89381438,\"onlineMoneyMade\":3122690603,\"onlineRunningTime\":17891.410000031556,\"pid\":656,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,19950732,19983654,15736716]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":597943146.0357771,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.60799999998,\"onlineExpGained\":135087884.56536984,\"onlineMoneyMade\":0,\"onlineRunningTime\":17891.410000031556,\"pid\":657,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,16724376,16724376,16724376]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1093746377.5513546,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.61,\"onlineExpGained\":232774959.4038365,\"onlineMoneyMade\":0,\"onlineRunningTime\":17891.410000031556,\"pid\":658,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,9284004,9316926,9218160]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":607481773.0414673,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.612,\"onlineExpGained\":128985730.83956172,\"onlineMoneyMade\":0,\"onlineRunningTime\":17891.410000031556,\"pid\":659,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[275000000,3325122,3456810,3325122]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":337063186.2525488,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.614,\"onlineExpGained\":72408684.07170433,\"onlineMoneyMade\":275000000,\"onlineRunningTime\":17891.410000031556,\"pid\":660,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1647309906,2370384,2436228,2370384]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":232898204.50042772,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.61599999998,\"onlineExpGained\":46277268.644043244,\"onlineMoneyMade\":1647309906,\"onlineRunningTime\":17891.410000031556,\"pid\":661,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,1810710,1975320,1909476]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":153401011.8645425,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.61599999998,\"onlineExpGained\":33731840.35326532,\"onlineMoneyMade\":0,\"onlineRunningTime\":17891.410000031556,\"pid\":662,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[873587012,1448568,1514412,1448568]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":167708022.35401255,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.618,\"onlineExpGained\":38432787.9104713,\"onlineMoneyMade\":873587012,\"onlineRunningTime\":17891.410000031556,\"pid\":663,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,921816,1086426,987660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":116136304.76439631,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.62,\"onlineExpGained\":25441422.98298805,\"onlineMoneyMade\":0,\"onlineRunningTime\":17891.410000031556,\"pid\":664,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[1000000000,921816,1086426,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":85800097.800729,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.62,\"onlineExpGained\":19074171.58495838,\"onlineMoneyMade\":1000000000,\"onlineRunningTime\":17891.410000031556,\"pid\":665,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,691362,790128,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":99659252.3199683,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.62199999997,\"onlineExpGained\":20974584.102325846,\"onlineMoneyMade\":0,\"onlineRunningTime\":17891.410000031556,\"pid\":666,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1053504,0,1810710]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32469766.06908,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.626,\"onlineExpGained\":6839545.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":17891.410000031556,\"pid\":667,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[1526334031.0461674,13168,60902,55964]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7334873.382600352,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.626,\"onlineExpGained\":1594362.2466430906,\"onlineMoneyMade\":1526334031.0461674,\"onlineRunningTime\":17891.410000031556,\"pid\":668,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[3375007913.1818414,18106,74070,65840]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8467820.92492566,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.628,\"onlineExpGained\":1901029.0750122927,\"onlineMoneyMade\":3375007913.1818414,\"onlineRunningTime\":17891.410000031556,\"pid\":669,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[3000041830.2419844,57610,139910,126742]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12785346.680707967,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.63,\"onlineExpGained\":2741184.602053875,\"onlineMoneyMade\":3000041830.2419844,\"onlineRunningTime\":17891.410000031556,\"pid\":670,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[1464360325,4938,41150,37858]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6024409.092399115,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.63,\"onlineExpGained\":1314858.9020856258,\"onlineMoneyMade\":1464360325,\"onlineRunningTime\":17891.410000031556,\"pid\":671,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[5800.740168852566,3292,23044,19752]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3464132.4258247176,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.634,\"onlineExpGained\":761436.468660177,\"onlineMoneyMade\":5800.740168852566,\"onlineRunningTime\":17891.410000031556,\"pid\":672,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,246900,0,156370]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3279015.1445046877,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.635,\"onlineExpGained\":692554.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":17891.410000031556,\"pid\":673,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[1818745600,4938,24690,23044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4226831.763013549,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.636,\"onlineExpGained\":1086716.1229291402,\"onlineMoneyMade\":1818745600,\"onlineRunningTime\":17891.410000031556,\"pid\":674,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,0,6876,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1658333.1041905256,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.63799999998,\"onlineExpGained\":372215.0712767278,\"onlineMoneyMade\":0,\"onlineRunningTime\":17891.410000031556,\"pid\":675,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[25314940463,3056,8404,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1758442.1254537879,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.639,\"onlineExpGained\":368366.498886028,\"onlineMoneyMade\":25314940463,\"onlineRunningTime\":17891.410000031556,\"pid\":676,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[1528,3820,12224,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1928088.650837788,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.63999999998,\"onlineExpGained\":464443.8964135343,\"onlineMoneyMade\":1528,\"onlineRunningTime\":17891.410000031556,\"pid\":677,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[14311443584,5348,9932,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1828961.2457128984,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.642,\"onlineExpGained\":395756.4562165241,\"onlineMoneyMade\":14311443584,\"onlineRunningTime\":17891.410000031556,\"pid\":678,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[15965308,1528,12988,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1982445.3975709337,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.64299999998,\"onlineExpGained\":404258.836971143,\"onlineMoneyMade\":15965308,\"onlineRunningTime\":17891.410000031556,\"pid\":679,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[4620529896,3820,6876,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1809923.1289541556,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.64599999998,\"onlineExpGained\":300364.0319103172,\"onlineMoneyMade\":4620529896,\"onlineRunningTime\":17891.410000031556,\"pid\":680,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,102376,0,44312]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1168503.419091875,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.647,\"onlineExpGained\":240660,\"onlineMoneyMade\":0,\"onlineRunningTime\":17891.410000031556,\"pid\":681,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[0,0,8404,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1551646.8086236506,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.648,\"onlineExpGained\":322722.0963556149,\"onlineMoneyMade\":0,\"onlineRunningTime\":17891.410000031556,\"pid\":682,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[1166208030,804,2814,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":718491.3715430747,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.65,\"onlineExpGained\":166765.90365831502,\"onlineMoneyMade\":1166208030,\"onlineRunningTime\":17891.410000031556,\"pid\":683,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[3759200490,2010,5226,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1122163.3544527406,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.652,\"onlineExpGained\":239367.4092657147,\"onlineMoneyMade\":3759200490,\"onlineRunningTime\":17891.410000031556,\"pid\":684,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[15657789048,3216,4020,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1127603.1834322775,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.65399999998,\"onlineExpGained\":224409.14988502074,\"onlineMoneyMade\":15657789048,\"onlineRunningTime\":17891.410000031556,\"pid\":685,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-16\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":829,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-17\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-17\",\"httpPortOpen\":false,\"ip\":\"91.7.3.9\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,5827194,5991804,5827194]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":486736759.99163306,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.655,\"onlineExpGained\":103307761.53732447,\"onlineMoneyMade\":0,\"onlineRunningTime\":17880.41000003151,\"pid\":686,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,19950732,19950732,15736716]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":596885736.564472,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.657,\"onlineExpGained\":134978634.35545042,\"onlineMoneyMade\":0,\"onlineRunningTime\":17880.41000003151,\"pid\":687,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,16724376,16757298,16691454]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1093746781.3634799,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.65899999999,\"onlineExpGained\":232774959.4038365,\"onlineMoneyMade\":0,\"onlineRunningTime\":17880.41000003151,\"pid\":688,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,9284004,9284004,9218160]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":605510903.6798134,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.65999999997,\"onlineExpGained\":128782122.74036746,\"onlineMoneyMade\":0,\"onlineRunningTime\":17880.41000003151,\"pid\":689,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[1993750000,3358044,3423888,3325122]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":399770305.07334614,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.661,\"onlineExpGained\":77960787.64269763,\"onlineMoneyMade\":1993750000,\"onlineRunningTime\":17880.41000003151,\"pid\":690,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,2271618,2436228,2370384]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":195100105.1478178,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.663,\"onlineExpGained\":41988780.40178752,\"onlineMoneyMade\":0,\"onlineRunningTime\":17880.41000003151,\"pid\":691,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,1810710,1942398,1909476]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":152161783.29454106,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.664,\"onlineExpGained\":33603825.77886963,\"onlineMoneyMade\":0,\"onlineRunningTime\":17880.41000003151,\"pid\":692,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[125000000,1349802,1514412,1448568]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":169454847.81042305,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.666,\"onlineExpGained\":36718649.48253947,\"onlineMoneyMade\":125000000,\"onlineRunningTime\":17880.41000003151,\"pid\":693,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,823050,1086426,987660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":115262966.52227205,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.668,\"onlineExpGained\":25351205.170991637,\"onlineMoneyMade\":0,\"onlineRunningTime\":17880.41000003151,\"pid\":694,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[250000000,888894,1119348,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82701918.95016167,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.66999999998,\"onlineExpGained\":18754135.148969144,\"onlineMoneyMade\":250000000,\"onlineRunningTime\":17880.41000003151,\"pid\":695,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,691362,790128,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":99659290.4347024,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.67099999997,\"onlineExpGained\":20974584.102325846,\"onlineMoneyMade\":0,\"onlineRunningTime\":17880.41000003151,\"pid\":696,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1086426,0,1843632]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34041145.20562406,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.672,\"onlineExpGained\":6963003,\"onlineMoneyMade\":0,\"onlineRunningTime\":17880.41000003151,\"pid\":697,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[6105375481.058447,16460,64194,62548]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8249313.922905077,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.675,\"onlineExpGained\":1769159.436474393,\"onlineMoneyMade\":6105375481.058447,\"onlineRunningTime\":17880.41000003151,\"pid\":698,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[7875015104.193869,26336,79008,72424]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9968714.09594702,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.677,\"onlineExpGained\":2148989.3891443308,\"onlineMoneyMade\":7875015104.193869,\"onlineRunningTime\":17880.41000003151,\"pid\":699,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[3000639127.3381066,47734,126742,120158]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":11217771.366905944,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.67799999999,\"onlineExpGained\":2586968.8719805204,\"onlineMoneyMade\":3000639127.3381066,\"onlineRunningTime\":17880.41000003151,\"pid\":700,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[1464363596.8158748,9876,41150,36212]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6316973.476548505,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.68,\"onlineExpGained\":1321466.233251885,\"onlineMoneyMade\":1464363596.8158748,\"onlineRunningTime\":17880.41000003151,\"pid\":701,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,6584,26336,23044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3970674.719822576,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.68099999998,\"onlineExpGained\":875988.8577506461,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":17880.41000003151,\"pid\":702,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,235378,0,166246]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3412386.1433156244,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.683,\"onlineExpGained\":716010,\"onlineMoneyMade\":0,\"onlineRunningTime\":17880.41000003151,\"pid\":703,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[1818750040.404329,4938,24690,21398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4676645.770594104,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.685,\"onlineExpGained\":1086716.12292914,\"onlineMoneyMade\":1818750040.404329,\"onlineRunningTime\":17880.41000003151,\"pid\":704,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,1528,9932,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1838812.0507864486,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.686,\"onlineExpGained\":436023.3692098811,\"onlineMoneyMade\":0,\"onlineRunningTime\":17880.41000003151,\"pid\":705,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,764,9932,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1688562.7195214867,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.689,\"onlineExpGained\":389783.1557980064,\"onlineMoneyMade\":0,\"onlineRunningTime\":17880.41000003151,\"pid\":706,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[6123993655.519477,3056,12988,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2096203.8530526373,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.691,\"onlineExpGained\":509101.96337637416,\"onlineMoneyMade\":6123993655.519477,\"onlineRunningTime\":17880.41000003151,\"pid\":707,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[4175721456,2292,11460,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1791487.420072243,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.69199999998,\"onlineExpGained\":399674.83697114314,\"onlineMoneyMade\":4175721456,\"onlineRunningTime\":17880.41000003151,\"pid\":708,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[5100660348,3056,12988,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2171963.765632905,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.694,\"onlineExpGained\":433659.4796599534,\"onlineMoneyMade\":5100660348,\"onlineRunningTime\":17880.41000003151,\"pid\":709,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[5657491816,2292,9932,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1856669.7405536934,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.695,\"onlineExpGained\":366723.52733236394,\"onlineMoneyMade\":5657491816,\"onlineRunningTime\":17880.41000003151,\"pid\":710,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,107724,0,46604]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1124194.0996575,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.699,\"onlineExpGained\":250401,\"onlineMoneyMade\":0,\"onlineRunningTime\":17880.41000003151,\"pid\":711,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[16248075096,2292,8404,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1692082.9795146808,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.699,\"onlineExpGained\":356892.67126385646,\"onlineMoneyMade\":16248075096,\"onlineRunningTime\":17880.41000003151,\"pid\":712,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[1770692214,1206,2814,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":855884.2942419394,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.701,\"onlineExpGained\":177701.37275066355,\"onlineMoneyMade\":1770692214,\"onlineRunningTime\":17880.41000003151,\"pid\":713,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[1969170066,1206,6030,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1189071.4531608503,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.703,\"onlineExpGained\":231645.87993456266,\"onlineMoneyMade\":1969170066,\"onlineRunningTime\":17880.41000003151,\"pid\":714,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[7935035790,1206,4020,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":874102.7264296585,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.703,\"onlineExpGained\":194200.2258620372,\"onlineMoneyMade\":7935035790,\"onlineRunningTime\":17880.41000003151,\"pid\":715,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-17\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":859,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-18\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-18\",\"httpPortOpen\":false,\"ip\":\"92.3.9.9\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,5925960,5925960,5827194]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":483638732.3938414,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.70500000002,\"onlineExpGained\":102987725.10133523,\"onlineMoneyMade\":0,\"onlineRunningTime\":17869.41000003146,\"pid\":716,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,19950732,19917810,15736716]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":595828333.0146798,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.707,\"onlineExpGained\":134869384.14553097,\"onlineMoneyMade\":0,\"onlineRunningTime\":17869.41000003146,\"pid\":717,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,16724376,16724376,16691454]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1091776088.9005017,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.707,\"onlineExpGained\":232571351.3046422,\"onlineMoneyMade\":0,\"onlineRunningTime\":17869.41000003146,\"pid\":718,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,9284004,9284004,9185238]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":603540053.1094906,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.711,\"onlineExpGained\":128578514.6411732,\"onlineMoneyMade\":0,\"onlineRunningTime\":17869.41000003146,\"pid\":719,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[412500000,3292200,3423888,3325122]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":341459351.5205502,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.712,\"onlineExpGained\":72717134.27009284,\"onlineMoneyMade\":412500000,\"onlineRunningTime\":17869.41000003146,\"pid\":720,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[450000000,2271618,2469150,2370384]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":206873389.3837121,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.713,\"onlineExpGained\":43204918.8585466,\"onlineMoneyMade\":450000000,\"onlineRunningTime\":17869.41000003146,\"pid\":721,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[1400000000,1810710,1942398,1909476]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":176947546.85696396,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.715,\"onlineExpGained\":36164117.26678349,\"onlineMoneyMade\":1400000000,\"onlineRunningTime\":17869.41000003146,\"pid\":722,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[1369365052,1251036,1514412,1448568]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":191839279.42853993,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.716,\"onlineExpGained\":39334966.03043539,\"onlineMoneyMade\":1369365052,\"onlineRunningTime\":17869.41000003146,\"pid\":723,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,790128,1086426,987660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":114389629.0695537,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.71899999998,\"onlineExpGained\":25260987.358995225,\"onlineMoneyMade\":0,\"onlineRunningTime\":17869.41000003146,\"pid\":724,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[250000000,888894,1119348,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82082308.04776828,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.721,\"onlineExpGained\":18690127.861771297,\"onlineMoneyMade\":250000000,\"onlineRunningTime\":17869.41000003146,\"pid\":725,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,592596,790128,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":98659076.6222199,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.722,\"onlineExpGained\":20871261.02793015,\"onlineMoneyMade\":0,\"onlineRunningTime\":17869.41000003146,\"pid\":726,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1547334,0,1876554]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35612526.90048187,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.724,\"onlineExpGained\":7086460.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":17869.41000003146,\"pid\":727,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[3052660402.534064,19752,57610,55964]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8111623.270913089,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.725,\"onlineExpGained\":1626143.5538851456,\"onlineMoneyMade\":3052660402.534064,\"onlineRunningTime\":17869.41000003146,\"pid\":728,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[3375090687.6796384,19752,80654,74070]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10722250.87413734,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.726,\"onlineExpGained\":2117994.349877826,\"onlineMoneyMade\":3375090687.6796384,\"onlineRunningTime\":17869.41000003146,\"pid\":729,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[6600041830.241984,47734,148140,130034]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13634300.895937975,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.727,\"onlineExpGained\":2903111.118630897,\"onlineMoneyMade\":6600041830.241984,\"onlineRunningTime\":17869.41000003146,\"pid\":730,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[1464360325,3292,34566,31274]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5353174.617654817,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.729,\"onlineExpGained\":1143068.291762881,\"onlineMoneyMade\":1464360325,\"onlineRunningTime\":17869.41000003146,\"pid\":731,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[0,6584,26336,19752]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3693633.318024927,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.731,\"onlineExpGained\":822081.8511198371,\"onlineMoneyMade\":0,\"onlineRunningTime\":17869.41000003146,\"pid\":732,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,246900,0,161308]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3368200.8941112496,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.733,\"onlineExpGained\":708603,\"onlineMoneyMade\":0,\"onlineRunningTime\":17869.41000003146,\"pid\":733,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[3637495433.191285,8230,27982,27982]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6922608.386937147,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.734,\"onlineExpGained\":1342933.7454083678,\"onlineMoneyMade\":3637495433.191285,\"onlineRunningTime\":17869.41000003146,\"pid\":734,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[6875000000,2292,8404,3820]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1658334.3663245668,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.736,\"onlineExpGained\":372215.0712767277,\"onlineMoneyMade\":6875000000,\"onlineRunningTime\":17869.41000003146,\"pid\":735,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,764,9168,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1444887.1278758023,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.737,\"onlineExpGained\":342666.510591654,\"onlineMoneyMade\":0,\"onlineRunningTime\":17869.41000003146,\"pid\":736,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,764,12988,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2117559.599629031,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.73799999998,\"onlineExpGained\":459978.0897172504,\"onlineMoneyMade\":0,\"onlineRunningTime\":17869.41000003146,\"pid\":737,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[6843240444,5348,8404,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2066847.1350707181,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.74099999998,\"onlineExpGained\":438858.6445173337,\"onlineMoneyMade\":6843240444,\"onlineRunningTime\":17869.41000003146,\"pid\":738,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[90372796,3056,9932,8404]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2074018.167510409,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.74300000002,\"onlineExpGained\":407933.9173072444,\"onlineMoneyMade\":90372796,\"onlineRunningTime\":17869.41000003146,\"pid\":739,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[4035001824,2292,9932,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1723717.3978536753,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.744,\"onlineExpGained\":363230.9223101509,\"onlineMoneyMade\":4035001824,\"onlineRunningTime\":17869.41000003146,\"pid\":740,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,97792,0,43548]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1110978.2066545833,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.74599999998,\"onlineExpGained\":235503,\"onlineMoneyMade\":0,\"onlineRunningTime\":17869.41000003146,\"pid\":741,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[2698174488,2292,6876,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1457489.9065298494,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.747,\"onlineExpGained\":299941.7130834538,\"onlineMoneyMade\":2698174488,\"onlineRunningTime\":17869.41000003146,\"pid\":742,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[4548604272,2412,2814,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":981678.3916616077,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.748,\"onlineExpGained\":207773.91275462203,\"onlineMoneyMade\":4548604272,\"onlineRunningTime\":17869.41000003146,\"pid\":743,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[942749898,1608,4020,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1111244.2159593592,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.75,\"onlineExpGained\":226498.19371379464,\"onlineMoneyMade\":942749898,\"onlineRunningTime\":17869.41000003146,\"pid\":744,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[10257751590,2010,3618,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":929031.5678770477,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.75199999998,\"onlineExpGained\":213620.24844824092,\"onlineMoneyMade\":10257751590,\"onlineRunningTime\":17869.41000003146,\"pid\":745,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-18\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":889,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-19\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-19\",\"httpPortOpen\":false,\"ip\":\"83.4.1.9\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,5794272,5925960,5827194]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":482399628.8336278,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.754,\"onlineExpGained\":102859710.52693954,\"onlineMoneyMade\":0,\"onlineRunningTime\":17858.410000031414,\"pid\":746,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,19950732,19950732,15703794]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":595828557.4517864,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.756,\"onlineExpGained\":134869384.14553097,\"onlineMoneyMade\":0,\"onlineRunningTime\":17858.410000031414,\"pid\":747,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,16691454,16757298,16658532]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1091283731.0344296,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.75699999998,\"onlineExpGained\":232520449.27984366,\"onlineMoneyMade\":0,\"onlineRunningTime\":17858.410000031414,\"pid\":748,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,9251082,9316926,9185238]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":605018588.6598134,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.759,\"onlineExpGained\":128731220.71556889,\"onlineMoneyMade\":0,\"onlineRunningTime\":17858.410000031414,\"pid\":749,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,3358044,3423888,3325122]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":334077513.09382725,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.75999999998,\"onlineExpGained\":71174883.27815026,\"onlineMoneyMade\":0,\"onlineRunningTime\":17858.410000031414,\"pid\":750,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,2337462,2436228,2370384]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":195100252.23122987,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.763,\"onlineExpGained\":41988780.40178752,\"onlineMoneyMade\":0,\"onlineRunningTime\":17858.410000031414,\"pid\":751,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[100000000,1744866,1942398,1909476]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":152161899.30774912,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.764,\"onlineExpGained\":33603825.77886963,\"onlineMoneyMade\":100000000,\"onlineRunningTime\":17858.410000031414,\"pid\":752,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,1514412,1547334,1448568]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":172948503.94835904,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.766,\"onlineExpGained\":37079520.73052512,\"onlineMoneyMade\":0,\"onlineRunningTime\":17858.410000031414,\"pid\":753,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[750000000,855972,1053504,987660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":123996874.27431545,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.76799999998,\"onlineExpGained\":26253383.29095575,\"onlineMoneyMade\":750000000,\"onlineRunningTime\":17858.410000031414,\"pid\":754,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[1250000000,855972,1119348,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":88898409.20861013,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.77,\"onlineExpGained\":19394208.020947613,\"onlineMoneyMade\":1250000000,\"onlineRunningTime\":17858.410000031414,\"pid\":755,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[500000000,526752,790128,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":101659868.94723214,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.771,\"onlineExpGained\":21181230.251117233,\"onlineMoneyMade\":500000000,\"onlineRunningTime\":17858.410000031414,\"pid\":756,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1316880,0,1876554]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34803994.381076254,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.772,\"onlineExpGained\":7111152,\"onlineMoneyMade\":0,\"onlineRunningTime\":17858.410000031414,\"pid\":757,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[1526357859.2392108,14814,69132,62548]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8467097.356471756,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.77399999998,\"onlineExpGained\":1785050.0900954204,\"onlineMoneyMade\":1526357859.2392108,\"onlineRunningTime\":17858.410000031414,\"pid\":758,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[2255949255.1663904,19752,72424,67486]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8967926.017659053,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.77599999998,\"onlineExpGained\":1875199.8756235386,\"onlineMoneyMade\":2255949255.1663904,\"onlineRunningTime\":17858.410000031414,\"pid\":759,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[7200041830.241984,62548,143202,131680]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":14382401.08070557,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.778,\"onlineExpGained\":2906966.5118827308,\"onlineMoneyMade\":7200041830.241984,\"onlineRunningTime\":17858.410000031414,\"pid\":760,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[0,3292,36212,32920]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5320807.877295097,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.78,\"onlineExpGained\":1136460.9605966215,\"onlineMoneyMade\":0,\"onlineRunningTime\":17858.410000031414,\"pid\":761,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,8230,27982,19752]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3448813.8860682277,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.78,\"onlineExpGained\":842296.9786063905,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":17858.410000031414,\"pid\":762,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,240316,0,164600]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3338252.472435,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.78199999998,\"onlineExpGained\":712306.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":17858.410000031414,\"pid\":763,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[1818750039.94091,9876,31274,24690]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6173957.188692469,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.786,\"onlineExpGained\":1325263.5645477318,\"onlineMoneyMade\":1818750039.94091,\"onlineRunningTime\":17858.410000031414,\"pid\":764,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[764,2292,9168,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1793693.851740203,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.786,\"onlineExpGained\":425388.6528876889,\"onlineMoneyMade\":764,\"onlineRunningTime\":17858.410000031414,\"pid\":765,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[3056,4584,12988,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2380937.698419833,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.788,\"onlineExpGained\":496866.44035789825,\"onlineMoneyMade\":3056,\"onlineRunningTime\":17858.410000031414,\"pid\":766,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[6123988575,3820,12224,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2006809.399111645,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.78999999998,\"onlineExpGained\":464443.8964135343,\"onlineMoneyMade\":6123988575,\"onlineRunningTime\":17858.410000031414,\"pid\":767,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[11248429300,3056,9932,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1950477.075658138,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.791,\"onlineExpGained\":411429.9792350003,\"onlineMoneyMade\":11248429300,\"onlineRunningTime\":17858.410000031414,\"pid\":768,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[144889544,2292,12988,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1920509.0900168796,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.792,\"onlineExpGained\":411608.99764334573,\"onlineMoneyMade\":144889544,\"onlineRunningTime\":17858.410000031414,\"pid\":769,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[3887035652,1528,10696,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1507915.6995314136,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.794,\"onlineExpGained\":345767.897199086,\"onlineMoneyMade\":3887035652,\"onlineRunningTime\":17858.410000031414,\"pid\":770,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,107724,0,44312]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1140084.1820289583,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.79499999998,\"onlineExpGained\":242379,\"onlineMoneyMade\":0,\"onlineRunningTime\":17858.410000031414,\"pid\":771,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[6161428508,1528,9932,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1577278.9997892359,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.79799999998,\"onlineExpGained\":349299.2101731361,\"onlineMoneyMade\":6161428508,\"onlineRunningTime\":17858.410000031414,\"pid\":772,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[5624019798,2412,2412,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":826150.6100619603,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.8,\"onlineExpGained\":210507.78002770914,\"onlineMoneyMade\":5624019798,\"onlineRunningTime\":17858.410000031414,\"pid\":773,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[90064884,804,4824,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1056644.7839128973,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.80099999998,\"onlineExpGained\":213628.97816187446,\"onlineMoneyMade\":90064884,\"onlineRunningTime\":17858.410000031414,\"pid\":774,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[7292913552,1608,3618,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":978548.7906167897,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.802,\"onlineExpGained\":189884.66528732522,\"onlineMoneyMade\":7292913552,\"onlineRunningTime\":17858.410000031414,\"pid\":775,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-19\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":919,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-14\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-14\",\"httpPortOpen\":false,\"ip\":\"20.5.8.1\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[750000000,5893038,5893038,5827194]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":502848030.10506433,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.804,\"onlineExpGained\":104971951.00446847,\"onlineMoneyMade\":750000000,\"onlineRunningTime\":17847.410000031367,\"pid\":776,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,19950732,19917810,15703794]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":594771155.1727867,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.807,\"onlineExpGained\":134760133.93561158,\"onlineMoneyMade\":0,\"onlineRunningTime\":17847.410000031367,\"pid\":777,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,16724376,16691454,16691454]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1089313057.366317,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.808,\"onlineExpGained\":232316841.1806494,\"onlineMoneyMade\":0,\"onlineRunningTime\":17847.410000031367,\"pid\":778,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,9251082,9284004,9185238]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":603047725.5477972,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.809,\"onlineExpGained\":128527612.61637464,\"onlineMoneyMade\":0,\"onlineRunningTime\":17847.410000031367,\"pid\":779,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[825000000,3358044,3390966,3325122]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":358712559.7848828,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.811,\"onlineExpGained\":73719597.41485552,\"onlineMoneyMade\":825000000,\"onlineRunningTime\":17847.410000031367,\"pid\":780,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,2337462,2469150,2370384]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":197578897.6637809,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.81199999998,\"onlineExpGained\":42244809.55057891,\"onlineMoneyMade\":0,\"onlineRunningTime\":17847.410000031367,\"pid\":781,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[400000000,1777788,1975320,1942398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":163315531.4632286,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.81399999998,\"onlineExpGained\":34755956.948430866,\"onlineMoneyMade\":400000000,\"onlineRunningTime\":17847.410000031367,\"pid\":782,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[125000000,1448568,1547334,1448568]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174695333.78409255,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.815,\"onlineExpGained\":37259956.35451794,\"onlineMoneyMade\":125000000,\"onlineRunningTime\":17847.410000031367,\"pid\":783,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,954738,1053504,987660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":112642948.36261043,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.816,\"onlineExpGained\":25080551.735002402,\"onlineMoneyMade\":0,\"onlineRunningTime\":17847.410000031367,\"pid\":784,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,855972,1119348,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":79603796.9105067,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.819,\"onlineExpGained\":18434098.71297991,\"onlineMoneyMade\":0,\"onlineRunningTime\":17847.410000031367,\"pid\":785,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,559674,757206,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":96658646.98101987,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.821,\"onlineExpGained\":20664614.879138764,\"onlineMoneyMade\":0,\"onlineRunningTime\":17847.410000031367,\"pid\":786,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1448568,0,1909476]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35088763.772263125,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.822,\"onlineExpGained\":7209918,\"onlineMoneyMade\":0,\"onlineRunningTime\":17847.410000031367,\"pid\":787,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[48375.60009215885,16460,69132,62548]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8082824.1118742805,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.823,\"onlineExpGained\":1795643.8591761054,\"onlineMoneyMade\":48375.60009215885,\"onlineRunningTime\":17847.410000031367,\"pid\":788,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[3375039750.536562,23044,79008,69132]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9874881.806595493,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.825,\"onlineExpGained\":2050838.4314670654,\"onlineMoneyMade\":3375039750.536562,\"onlineRunningTime\":17847.410000031367,\"pid\":789,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[3600070968.6692324,57610,134972,126742]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12827749.439993773,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.82799999998,\"onlineExpGained\":2694919.883031869,\"onlineMoneyMade\":3600070968.6692324,\"onlineRunningTime\":17847.410000031367,\"pid\":790,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[4393080975,6584,42796,39504]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6873299.530119937,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.82799999998,\"onlineExpGained\":1427183.531912036,\"onlineMoneyMade\":4393080975,\"onlineRunningTime\":17847.410000031367,\"pid\":791,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,4938,29628,24690]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3938457.15098334,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.831,\"onlineExpGained\":950110.9918680086,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":17847.410000031367,\"pid\":792,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,245254,0,159662]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3271785.495089375,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.83299999998,\"onlineExpGained\":697492.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":17847.410000031367,\"pid\":793,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[1818745600,4938,27982,24690]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5580006.939096631,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.83299999998,\"onlineExpGained\":1210407.388953595,\"onlineMoneyMade\":1818745600,\"onlineRunningTime\":17847.410000031367,\"pid\":794,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,1528,10696,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1838814.1773604522,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.835,\"onlineExpGained\":436023.3692098811,\"onlineMoneyMade\":0,\"onlineRunningTime\":17847.410000031367,\"pid\":795,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[753.7916830732502,1528,11460,7640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2217383.5681190267,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.837,\"onlineExpGained\":454033.1265339415,\"onlineMoneyMade\":753.7916830732502,\"onlineRunningTime\":17847.410000031367,\"pid\":796,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[3056,3820,12988,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2006810.1614000385,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.838,\"onlineExpGained\":486772.92989495426,\"onlineMoneyMade\":3056,\"onlineRunningTime\":17847.410000031367,\"pid\":797,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[4801149428,3056,10696,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1931281.955011439,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.84100000001,\"onlineExpGained\":415348.35998961935,\"onlineMoneyMade\":4801149428,\"onlineRunningTime\":17847.410000031367,\"pid\":798,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[24448,764,14516,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1836173.896450008,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.843,\"onlineExpGained\":396908.67629894055,\"onlineMoneyMade\":24448,\"onlineRunningTime\":17847.410000031367,\"pid\":799,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[4901607788,3056,7640,7640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1676972.7326538116,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.84399999998,\"onlineExpGained\":352753.10724351194,\"onlineMoneyMade\":4901607788,\"onlineRunningTime\":17847.410000031367,\"pid\":800,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,94736,0,45840]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1135598.5544699999,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.84499999997,\"onlineExpGained\":238941,\"onlineMoneyMade\":0,\"onlineRunningTime\":17847.410000031367,\"pid\":801,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[13432843584,3056,8404,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1496738.1331602065,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.847,\"onlineExpGained\":349299.2101731361,\"onlineMoneyMade\":13432843584,\"onlineRunningTime\":17847.410000031367,\"pid\":802,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[4480642554,2010,2412,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":905549.1703789382,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.848,\"onlineExpGained\":205040.0454815349,\"onlineMoneyMade\":4480642554,\"onlineRunningTime\":17847.210000031366,\"pid\":803,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[1652648130,804,5226,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1058334.2840225059,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.851,\"onlineExpGained\":223924.35060341062,\"onlineMoneyMade\":1652648130,\"onlineRunningTime\":17847.210000031366,\"pid\":804,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[10418882838,2412,3216,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":952500.9447848371,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.853,\"onlineExpGained\":194200.22586203716,\"onlineMoneyMade\":10418882838,\"onlineRunningTime\":17847.210000031366,\"pid\":805,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-14\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":949,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-21\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-21\",\"httpPortOpen\":false,\"ip\":\"6.2.8.1\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,5827194,5925960,5827194]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":482399995.7642915,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.854,\"onlineExpGained\":102859710.52693954,\"onlineMoneyMade\":0,\"onlineRunningTime\":17836.41000003132,\"pid\":806,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,19851966,19917810,15703794]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":593978148.657276,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.85499999998,\"onlineExpGained\":134678196.27817202,\"onlineMoneyMade\":0,\"onlineRunningTime\":17836.41000003132,\"pid\":807,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,16724376,16658532,16691454]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1087342373.376405,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.857,\"onlineExpGained\":232113233.0814551,\"onlineMoneyMade\":0,\"onlineRunningTime\":17836.41000003132,\"pid\":808,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,9251082,9251082,9185238]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":601076858.5721759,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.85799999998,\"onlineExpGained\":128324004.51718038,\"onlineMoneyMade\":0,\"onlineRunningTime\":17836.41000003132,\"pid\":809,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,3292200,3423888,3325122]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":334824276.4112942,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.859,\"onlineExpGained\":71251995.82774739,\"onlineMoneyMade\":0,\"onlineRunningTime\":17836.41000003132,\"pid\":810,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[300000000,2403306,2502072,2337462]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":207493267.9699145,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.863,\"onlineExpGained\":43268926.14574445,\"onlineMoneyMade\":300000000,\"onlineRunningTime\":17836.41000003132,\"pid\":811,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[200000000,1777788,1975320,1909476]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":158358449.84861624,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.864,\"onlineExpGained\":34243898.65084809,\"onlineMoneyMade\":200000000,\"onlineRunningTime\":17836.41000003132,\"pid\":812,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,1349802,1547334,1448568]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":171201872.5479561,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.866,\"onlineExpGained\":36899085.1065323,\"onlineMoneyMade\":0,\"onlineRunningTime\":17836.41000003132,\"pid\":813,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,790128,1053504,987660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":111769611.91231221,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.868,\"onlineExpGained\":24990333.92300599,\"onlineMoneyMade\":0,\"onlineRunningTime\":17836.41000003132,\"pid\":814,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[250000000,823050,1086426,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":79603828.22073802,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.869,\"onlineExpGained\":18434098.71297991,\"onlineMoneyMade\":250000000,\"onlineRunningTime\":17836.41000003132,\"pid\":815,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[1000000000,658440,790128,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":103660451.24827456,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.87,\"onlineExpGained\":21387876.39990862,\"onlineMoneyMade\":1000000000,\"onlineRunningTime\":17836.41000003132,\"pid\":816,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1218114,0,1810710]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34564987.4855325,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.87399999998,\"onlineExpGained\":6839545.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":17836.41000003132,\"pid\":817,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[4579006822.678005,18106,59256,54318]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8280987.953153783,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.875,\"onlineExpGained\":1599659.131183433,\"onlineMoneyMade\":4579006822.678005,\"onlineRunningTime\":17836.41000003132,\"pid\":818,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[2250043524.003725,23044,74070,70778]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9977690.445145339,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.87699999998,\"onlineExpGained\":1999180.0326895572,\"onlineMoneyMade\":2250043524.003725,\"onlineRunningTime\":17836.41000003132,\"pid\":819,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[7797986803.064786,47734,136618,125096]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12932134.20479058,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.87900000002,\"onlineExpGained\":2748895.3885575426,\"onlineMoneyMade\":7797986803.064786,\"onlineRunningTime\":17836.41000003132,\"pid\":820,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[1464364589.9337418,8230,29628,31274]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5524940.155449999,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.88,\"onlineExpGained\":1070387.6489340272,\"onlineMoneyMade\":1464364589.9337418,\"onlineRunningTime\":17836.41000003132,\"pid\":821,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[8613067200,6584,21398,18106]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3399694.679365325,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.88199999998,\"onlineExpGained\":734482.9653447724,\"onlineMoneyMade\":8613067200,\"onlineRunningTime\":17836.41000003132,\"pid\":822,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,255130,0,159662]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3395058.329593959,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.884,\"onlineExpGained\":706134,\"onlineMoneyMade\":0,\"onlineRunningTime\":17836.41000003132,\"pid\":823,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[1818749833.591675,8230,24690,19752]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5141792.367127958,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.887,\"onlineExpGained\":1069045.942068504,\"onlineMoneyMade\":1818749833.591675,\"onlineRunningTime\":17836.41000003132,\"pid\":824,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,764,9932,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1861374.7856839537,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.888,\"onlineExpGained\":420071.2947265928,\"onlineMoneyMade\":0,\"onlineRunningTime\":17836.41000003132,\"pid\":825,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,764,10696,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2020294.7572277463,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.889,\"onlineExpGained\":381216.4930332151,\"onlineMoneyMade\":0,\"onlineRunningTime\":17836.41000003132,\"pid\":826,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[2292,2292,10696,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1868843.4341165232,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.891,\"onlineExpGained\":419785.82945069455,\"onlineMoneyMade\":2292,\"onlineRunningTime\":17836.41000003132,\"pid\":827,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[1627320,764,9932,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1613305.8550071002,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.892,\"onlineExpGained\":321307.2218787622,\"onlineMoneyMade\":1627320,\"onlineRunningTime\":17836.41000003132,\"pid\":828,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[0,764,12224,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1758213.7401977824,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.894,\"onlineExpGained\":367508.0336101302,\"onlineMoneyMade\":0,\"onlineRunningTime\":17836.41000003132,\"pid\":829,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[1631869620,2292,9168,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1469930.2915107696,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.897,\"onlineExpGained\":317827.0570213821,\"onlineMoneyMade\":1631869620,\"onlineRunningTime\":17836.41000003132,\"pid\":830,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,105432,0,44312]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1234762.0382466668,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.898,\"onlineExpGained\":254412,\"onlineMoneyMade\":0,\"onlineRunningTime\":17836.41000003132,\"pid\":831,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[17879188356,3820,8404,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1657821.7386810158,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.9,\"onlineExpGained\":353095.9407184963,\"onlineMoneyMade\":17879188356,\"onlineRunningTime\":17836.41000003132,\"pid\":832,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[3883139904,2010,2412,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":849349.0864760922,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.901,\"onlineExpGained\":194104.5763891864,\"onlineMoneyMade\":3883139904,\"onlineRunningTime\":17836.21000003132,\"pid\":833,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[989890026,402,5226,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1103402.4883336911,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.902,\"onlineExpGained\":211055.13505149045,\"onlineMoneyMade\":989890026,\"onlineRunningTime\":17836.21000003132,\"pid\":834,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[3916703286,1206,4020,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":858374.1072897795,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.90399999998,\"onlineExpGained\":174780.20327583342,\"onlineMoneyMade\":3916703286,\"onlineRunningTime\":17836.21000003132,\"pid\":835,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-21\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":979,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-22\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-22\",\"httpPortOpen\":false,\"ip\":\"14.8.2.2\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,5893038,5893038,5827194]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":480541256.3166178,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.906,\"onlineExpGained\":102667688.665346,\"onlineMoneyMade\":0,\"onlineRunningTime\":17825.410000031272,\"pid\":836,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,19851966,19884888,15703794]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":592920749.2062635,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.906,\"onlineExpGained\":134568946.06825256,\"onlineMoneyMade\":0,\"onlineRunningTime\":17825.410000031272,\"pid\":837,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,16691454,16724376,16625610]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1087342811.2575383,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.90899999999,\"onlineExpGained\":232113233.0814551,\"onlineMoneyMade\":0,\"onlineRunningTime\":17825.410000031272,\"pid\":838,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,9251082,9284004,9185238]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":603048197.7984021,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.911,\"onlineExpGained\":128527612.61637464,\"onlineMoneyMade\":0,\"onlineRunningTime\":17825.410000031272,\"pid\":839,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,3193434,3423888,3325122]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":333331388.4449872,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.912,\"onlineExpGained\":71097770.72855313,\"onlineMoneyMade\":0,\"onlineRunningTime\":17825.410000031272,\"pid\":840,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,2403306,2502072,2337462]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":198818338.36904496,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.913,\"onlineExpGained\":42372824.1249746,\"onlineMoneyMade\":0,\"onlineRunningTime\":17825.410000031272,\"pid\":841,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,1810710,1975320,1909476]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":154021006.5261823,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.91499999998,\"onlineExpGained\":33795847.640463166,\"onlineMoneyMade\":0,\"onlineRunningTime\":17825.410000031272,\"pid\":842,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,1415646,1547334,1448568]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":170328556.070879,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.918,\"onlineExpGained\":36808867.29453588,\"onlineMoneyMade\":0,\"onlineRunningTime\":17825.410000031272,\"pid\":843,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,855972,1053504,987660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":111769653.70070149,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.918,\"onlineExpGained\":24990333.92300599,\"onlineMoneyMade\":0,\"onlineRunningTime\":17825.410000031272,\"pid\":844,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[500000000,823050,1086426,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":80843145.19635996,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.91999999998,\"onlineExpGained\":18562113.287375603,\"onlineMoneyMade\":500000000,\"onlineRunningTime\":17825.410000031272,\"pid\":845,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[500000000,658440,757206,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":98659227.26582733,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.922,\"onlineExpGained\":20871261.02793015,\"onlineMoneyMade\":500000000,\"onlineRunningTime\":17825.410000031272,\"pid\":846,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1086426,0,1711944]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32993629.005828746,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.922,\"onlineExpGained\":6469173,\"onlineMoneyMade\":0,\"onlineRunningTime\":17825.410000031272,\"pid\":847,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[1526378309.9989426,21398,62548,57610]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8825434.646484286,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.924,\"onlineExpGained\":1695003.052909598,\"onlineMoneyMade\":1526378309.9989426,\"onlineRunningTime\":17825.410000031272,\"pid\":848,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[3375007913.1818414,18106,70778,67486]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9004989.977092354,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.92599999998,\"onlineExpGained\":1875199.8756235386,\"onlineMoneyMade\":3375007913.1818414,\"onlineRunningTime\":17825.410000031272,\"pid\":849,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[4197920340.2231946,57610,133326,123450]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12757270.042803358,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.92599999998,\"onlineExpGained\":2644799.7707580286,\"onlineMoneyMade\":4197920340.2231946,\"onlineRunningTime\":17825.410000031272,\"pid\":850,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[88088.75084120962,6584,31274,31274]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4857265.164256732,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.93,\"onlineExpGained\":1076994.9801002867,\"onlineMoneyMade\":88088.75084120962,\"onlineRunningTime\":17825.410000031272,\"pid\":851,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,6584,24690,18106]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3627617.3657999747,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.932,\"onlineExpGained\":754698.0928313258,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":17825.410000031272,\"pid\":852,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,220564,0,154724]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3432243.8484068746,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.932,\"onlineExpGained\":677740.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":17825.410000031272,\"pid\":853,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,6584,23044,19752]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4504558.7064213045,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.934,\"onlineExpGained\":954189.7664743669,\"onlineMoneyMade\":0,\"onlineRunningTime\":17825.410000031272,\"pid\":854,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,0,7640,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1613217.2503207857,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.936,\"onlineExpGained\":366897.71311563166,\"onlineMoneyMade\":0,\"onlineRunningTime\":17825.410000031272,\"pid\":855,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,1528,10696,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1906138.1211083187,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.938,\"onlineExpGained\":389783.15579800645,\"onlineMoneyMade\":0,\"onlineRunningTime\":17825.410000031272,\"pid\":856,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[6123988575,2292,8404,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1660427.3483302426,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.94,\"onlineExpGained\":388525.1825767067,\"onlineMoneyMade\":6123988575,\"onlineRunningTime\":17825.410000031272,\"pid\":857,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[2209682820,5348,7640,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1862214.2354143518,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.94199999998,\"onlineExpGained\":372246.1716888099,\"onlineMoneyMade\":2209682820,\"onlineRunningTime\":17825.410000031272,\"pid\":858,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[637627524,3056,9932,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1600310.899991314,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.94199999998,\"onlineExpGained\":345457.5515935223,\"onlineMoneyMade\":637627524,\"onlineRunningTime\":17825.410000031272,\"pid\":859,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[8716182624,4584,8404,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1643162.6834884838,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.944,\"onlineExpGained\":345767.897199086,\"onlineMoneyMade\":8716182624,\"onlineRunningTime\":17825.410000031272,\"pid\":860,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,97028,0,44312]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1149809.71465,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.946,\"onlineExpGained\":238368,\"onlineMoneyMade\":0,\"onlineRunningTime\":17825.410000031272,\"pid\":861,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[784880884,3056,6876,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1464522.649842935,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.946,\"onlineExpGained\":311331.9047195344,\"onlineMoneyMade\":784880884,\"onlineRunningTime\":17825.410000031272,\"pid\":862,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[3804910302,2010,2814,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":950151.4023732487,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.948,\"onlineExpGained\":196838.4436622735,\"onlineMoneyMade\":3804910302,\"onlineRunningTime\":17825.21000003127,\"pid\":863,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[5256588582,2010,4824,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1232753.6692317422,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.952,\"onlineExpGained\":241941.25237609877,\"onlineMoneyMade\":5256588582,\"onlineRunningTime\":17825.21000003127,\"pid\":864,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[7086295200,1206,4422,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":913303.0356477638,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.952,\"onlineExpGained\":200673.5667241051,\"onlineMoneyMade\":7086295200,\"onlineRunningTime\":17825.21000003127,\"pid\":865,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-22\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":1009,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-23\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-23\",\"httpPortOpen\":false,\"ip\":\"13.8.9.7\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,5827194,5893038,5827194]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":479302147.924743,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.954,\"onlineExpGained\":102539674.09095031,\"onlineMoneyMade\":0,\"onlineRunningTime\":17814.410000031225,\"pid\":866,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,19851966,19851966,15703794]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":591863346.6010305,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.956,\"onlineExpGained\":134459695.85833314,\"onlineMoneyMade\":0,\"onlineRunningTime\":17814.410000031225,\"pid\":867,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,16724376,16658532,16658532]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1085372120.7210605,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.957,\"onlineExpGained\":231909624.98226085,\"onlineMoneyMade\":0,\"onlineRunningTime\":17814.410000031225,\"pid\":868,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,9251082,9251082,9185238]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":601077320.2323316,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.95799999998,\"onlineExpGained\":128324004.51718038,\"onlineMoneyMade\":0,\"onlineRunningTime\":17814.410000031225,\"pid\":869,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[68750000,3292200,3390966,3325122]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":333147139.7084832,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.961,\"onlineExpGained\":71251995.82774739,\"onlineMoneyMade\":68750000,\"onlineRunningTime\":17814.410000031225,\"pid\":870,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[900000000,2370384,2502072,2337462]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":220505942.4031003,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.963,\"onlineExpGained\":44613079.176899225,\"onlineMoneyMade\":900000000,\"onlineRunningTime\":17814.410000031225,\"pid\":871,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[200000000,1777788,1975320,1876554]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":153944548.61704287,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.967,\"onlineExpGained\":33859854.92766102,\"onlineMoneyMade\":200000000,\"onlineRunningTime\":17814.410000031225,\"pid\":872,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[875000000,1283958,1514412,1448568]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":178091779.63441542,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.968,\"onlineExpGained\":38523005.7224677,\"onlineMoneyMade\":875000000,\"onlineRunningTime\":17814.410000031225,\"pid\":873,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,823050,1053504,987660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":110896315.47110751,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.97,\"onlineExpGained\":24900116.11100958,\"onlineMoneyMade\":0,\"onlineRunningTime\":17814.410000031225,\"pid\":874,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[250000000,790128,1086426,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":78984245.63267931,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.971,\"onlineExpGained\":18370091.425782062,\"onlineMoneyMade\":250000000,\"onlineRunningTime\":17814.410000031225,\"pid\":875,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,724284,757206,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":95658505.86780056,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.972,\"onlineExpGained\":20561291.80474307,\"onlineMoneyMade\":0,\"onlineRunningTime\":17814.410000031225,\"pid\":876,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1547334,0,1876554]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35612595.9235125,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.976,\"onlineExpGained\":7086460.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":17814.410000031225,\"pid\":877,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[21673.81985103753,19752,64194,52672]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8403167.866522172,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.978,\"onlineExpGained\":1599659.131183433,\"onlineMoneyMade\":21673.81985103753,\"onlineRunningTime\":17814.410000031225,\"pid\":878,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[2250321687.0904565,23044,77362,77362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10635208.291720841,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.978,\"onlineExpGained\":2097330.9903668226,\"onlineMoneyMade\":2250321687.0904565,\"onlineRunningTime\":17814.410000031225,\"pid\":879,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[2400055773.655979,47734,146494,121804]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":14039373.501420513,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.97999999998,\"onlineExpGained\":2737329.2088020416,\"onlineMoneyMade\":2400055773.655979,\"onlineRunningTime\":17814.410000031225,\"pid\":880,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[0,1646,36212,32920]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5561649.609644143,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.98200000002,\"onlineExpGained\":1129853.629430362,\"onlineMoneyMade\":0,\"onlineRunningTime\":17814.410000031225,\"pid\":881,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,4938,26336,21398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4581948.373157638,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.98200000002,\"onlineExpGained\":822081.851119837,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":17814.410000031225,\"pid\":882,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,215626,0,149786]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3187987.9290546877,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.986,\"onlineExpGained\":656754,\"onlineMoneyMade\":0,\"onlineRunningTime\":17814.410000031225,\"pid\":883,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,3292,26336,23044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5452234.153342191,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.987,\"onlineExpGained\":1095551.2133594584,\"onlineMoneyMade\":0,\"onlineRunningTime\":17814.410000031225,\"pid\":884,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,764,6112,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1522978.5000358296,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.988,\"onlineExpGained\":324358.84782686277,\"onlineMoneyMade\":0,\"onlineRunningTime\":17814.410000031225,\"pid\":885,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[25489589196,4584,10696,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2111160.3315852312,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.99,\"onlineExpGained\":415483.1440923804,\"onlineMoneyMade\":25489589196,\"onlineRunningTime\":17814.410000031225,\"pid\":886,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[6123988575,2292,8404,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1793056.937619825,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.99099999998,\"onlineExpGained\":384059.3758804227,\"onlineMoneyMade\":6123988575,\"onlineRunningTime\":17814.410000031225,\"pid\":887,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[2348023356,2292,9932,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1774867.1212971397,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.992,\"onlineExpGained\":364409.4101795717,\"onlineMoneyMade\":2348023356,\"onlineRunningTime\":17814.410000031225,\"pid\":888,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[155582488,1528,10696,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1584719.36809241,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.994,\"onlineExpGained\":327082.1499130159,\"onlineMoneyMade\":155582488,\"onlineRunningTime\":17814.410000031225,\"pid\":889,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[5800701324,3056,9168,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1645455.453291345,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.998,\"onlineExpGained\":331797.47711023403,\"onlineMoneyMade\":5800701324,\"onlineRunningTime\":17814.410000031225,\"pid\":890,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,106196,0,41256]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1095709.026884167,\"offlineMoneyMade\":0,\"offlineRunningTime\":139403.998,\"onlineExpGained\":236076,\"onlineMoneyMade\":0,\"onlineRunningTime\":17814.410000031225,\"pid\":891,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[14979462264,3056,6112,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1565267.6126765227,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404,\"onlineExpGained\":292348.25199273345,\"onlineMoneyMade\":14979462264,\"onlineRunningTime\":17814.410000031225,\"pid\":892,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[1038351528,402,2412,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":733360.5077084255,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.00199999998,\"onlineExpGained\":164032.03638522787,\"onlineMoneyMade\":1038351528,\"onlineRunningTime\":17814.210000031224,\"pid\":893,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[3319851474,804,4824,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1115711.1898494645,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.00400000002,\"onlineExpGained\":200759.76260995434,\"onlineMoneyMade\":3319851474,\"onlineRunningTime\":17814.210000031224,\"pid\":894,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[5961531360,804,4824,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1029483.3060848338,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.005,\"onlineExpGained\":209304.68787352895,\"onlineMoneyMade\":5961531360,\"onlineRunningTime\":17814.210000031224,\"pid\":895,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-23\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":1039,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-24\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-24\",\"httpPortOpen\":false,\"ip\":\"6.6.7.1\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,5827194,5860116,5827194]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":476823781.9640097,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.011,\"onlineExpGained\":102283644.94215892,\"onlineMoneyMade\":0,\"onlineRunningTime\":17803.410000031177,\"pid\":896,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,19851966,19884888,15670872]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":591863605.7118018,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.01299999998,\"onlineExpGained\":134459695.85833314,\"onlineMoneyMade\":0,\"onlineRunningTime\":17803.410000031177,\"pid\":897,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,16625610,16691454,16625610]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1083894265.5646706,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.014,\"onlineExpGained\":231756918.90786517,\"onlineMoneyMade\":0,\"onlineRunningTime\":17803.410000031177,\"pid\":898,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,9251082,9251082,9152316]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":599106486.9368833,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.01499999998,\"onlineExpGained\":128120396.41798612,\"onlineMoneyMade\":0,\"onlineRunningTime\":17803.410000031177,\"pid\":899,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,3325122,3390966,3325122]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":330345600.74199915,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.017,\"onlineExpGained\":70789320.53016461,\"onlineMoneyMade\":0,\"onlineRunningTime\":17803.410000031177,\"pid\":900,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1575000000,2337462,2469150,2337462]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":213719921.76468876,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.018,\"onlineExpGained\":46213261.35684539,\"onlineMoneyMade\":1575000000,\"onlineRunningTime\":17803.410000031177,\"pid\":901,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,1744866,1942398,1909476]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":151542554.6001063,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.02,\"onlineExpGained\":33539818.491671782,\"onlineMoneyMade\":0,\"onlineRunningTime\":17803.410000031177,\"pid\":902,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[250000000,1481490,1514412,1448568]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":172948846.3312207,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.023,\"onlineExpGained\":37079520.73052511,\"onlineMoneyMade\":250000000,\"onlineRunningTime\":17803.410000031177,\"pid\":903,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,823050,1053504,987660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":110022979.5157542,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.025,\"onlineExpGained\":24809898.299013164,\"onlineMoneyMade\":0,\"onlineRunningTime\":17803.410000031177,\"pid\":904,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,757206,1086426,1020582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":76505703.64746125,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.026,\"onlineExpGained\":18114062.276990674,\"onlineMoneyMade\":0,\"onlineRunningTime\":17803.410000031177,\"pid\":905,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[2500000000,625518,757206,691362]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":109662097.61948554,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.028,\"onlineExpGained\":22007814.846282784,\"onlineMoneyMade\":2500000000,\"onlineRunningTime\":17803.410000031177,\"pid\":906,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1613178,0,1876554]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34041238.04052,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.03,\"onlineExpGained\":7086460.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":17803.410000031177,\"pid\":907,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[4578973425,21398,65840,54318]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8188249.69988377,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.03,\"onlineExpGained\":1673815.514748228,\"onlineMoneyMade\":4578973425,\"onlineRunningTime\":17803.410000031177,\"pid\":908,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[6750258162.992524,36212,74070,59256]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8780861.07960432,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.03399999999,\"onlineExpGained\":1926858.274401046,\"onlineMoneyMade\":6750258162.992524,\"onlineRunningTime\":17803.410000031177,\"pid\":909,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[4200027886.8279896,46088,139910,116866]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13333940.627668943,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.03499999997,\"onlineExpGained\":2640944.3775061946,\"onlineMoneyMade\":4200027886.8279896,\"onlineRunningTime\":17803.410000031177,\"pid\":910,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[2928723408.311178,9876,37858,36212]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6217094.466179531,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.036,\"onlineExpGained\":1295036.9085868476,\"onlineMoneyMade\":2928723408.311178,\"onlineRunningTime\":17803.410000031177,\"pid\":911,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,16460,26336,24690]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4447061.93688169,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.039,\"onlineExpGained\":936634.2402103064,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":17803.410000031177,\"pid\":912,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,245254,0,166246]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3250030.16340625,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.04,\"onlineExpGained\":709837.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":17803.410000031177,\"pid\":913,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[11963.683101271814,6584,26336,21398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5141798.46149971,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.041,\"onlineExpGained\":1104386.3037897767,\"onlineMoneyMade\":11963.683101271814,\"onlineRunningTime\":17803.410000031177,\"pid\":914,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,0,9168,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1771137.5759558203,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.043,\"onlineExpGained\":425388.6528876889,\"onlineMoneyMade\":0,\"onlineRunningTime\":17803.210000031177,\"pid\":915,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[764,2292,12224,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1958348.5215443762,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.04499999998,\"onlineExpGained\":454033.1265339415,\"onlineMoneyMade\":764,\"onlineRunningTime\":17803.210000031177,\"pid\":916,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[1528,2292,11460,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1663359.4850517293,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.047,\"onlineExpGained\":424251.63614697853,\"onlineMoneyMade\":1528,\"onlineRunningTime\":17803.210000031177,\"pid\":917,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[5172960724,2292,12988,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1808116.7909872327,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.049,\"onlineExpGained\":423185.1214988574,\"onlineMoneyMade\":5172960724,\"onlineRunningTime\":17803.210000031177,\"pid\":918,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[122837448,3820,11460,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1820584.6331475694,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.049,\"onlineExpGained\":407933.9173072444,\"onlineMoneyMade\":122837448,\"onlineRunningTime\":17803.210000031177,\"pid\":919,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[7645695620,3820,9932,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1383316.0418003153,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.05099999998,\"onlineExpGained\":366723.5273323639,\"onlineMoneyMade\":7645695620,\"onlineRunningTime\":17803.210000031177,\"pid\":920,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,108488,0,42784]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1158782.8101722917,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.05299999999,\"onlineExpGained\":241806,\"onlineMoneyMade\":0,\"onlineRunningTime\":17803.210000031177,\"pid\":921,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[19321034368,4584,9168,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1740412.5542587633,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.055,\"onlineExpGained\":398656.70726281835,\"onlineMoneyMade\":19321034368,\"onlineRunningTime\":17803.210000031177,\"pid\":922,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[2594651514,1608,2814,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":837751.1781815432,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.057,\"onlineExpGained\":196838.44366227346,\"onlineMoneyMade\":2594651514,\"onlineRunningTime\":17803.210000031177,\"pid\":923,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[1984955400,1206,4824,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1092483.812595852,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.059,\"onlineExpGained\":218776.6643826426,\"onlineMoneyMade\":1984955400,\"onlineRunningTime\":17803.210000031177,\"pid\":924,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[7907848530,1206,3618,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":864950.3305165651,\"offlineMoneyMade\":0,\"offlineRunningTime\":139404.059,\"onlineExpGained\":185569.10471261328,\"onlineMoneyMade\":7907848530,\"onlineRunningTime\":17803.210000031177,\"pid\":925,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///3c851f5e-19a1-48eb-a504-8afbd4f2f634\"}],\"ramUsage\":2.45,\"server\":\"pserv-24\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":1069,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}}}",
        "CompaniesSave": "{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":9190.125637625206,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}}}",
        "FactionsSave": "{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"The Red Pill\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Daedalus\",\"playerReputation\":0}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"SmartJaw\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bachman & Associates\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"NeuroFlux Governor\",\"OmniTek InfoLoad\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"OmniTek Incorporated\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"BitRunners\",\"playerReputation\":0}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"NeuroFlux Governor\",\"The Black Hand\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"The Black Hand\",\"playerReputation\":293516.9062114347}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NiteSec\",\"playerReputation\":0}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"Aevum\",\"playerReputation\":303074.6430137851}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"Neuregen Gene Modification\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Chongqing\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"INFRARET Enhancement\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"NutriGen Implant\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"CashRoot Starter Kit\"],\"favor\":69.3685,\"isBanned\":false,\"isMember\":true,\"name\":\"Sector-12\",\"playerReputation\":406676.5930899539}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"DermaForce Particle Barrier\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Graphene BrachiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Syndicate\",\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tetrads\",\"playerReputation\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Slum Snakes\",\"playerReputation\":0}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\",\"NeuroFlux Governor\"],\"favor\":63.3701,\"isBanned\":false,\"isMember\":true,\"name\":\"Netburners\",\"playerReputation\":103275.3913630122}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tian Di Hui\",\"playerReputation\":0}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"NeuroFlux Governor\",\"Neurotrainer I\"],\"favor\":2,\"isBanned\":false,\"isMember\":true,\"name\":\"CyberSec\",\"playerReputation\":228246.5304755388}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}}}",
        "AliasesSave": "{}",
        "GlobalAliasesSave": "{}",
        "MessagesSave": "{\"j0.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j0.msg\",\"msg\":\"I know you can sense it. I know you're searching for it. It's why you spend night after night at your computer. <br><br>It's real, I've seen it. And I can help you find it. But not right now. You're not ready yet.<br><br>Use this program to track your progress<br><br>The fl1ght.exe program was added to your home computer<br><br>-jump3R\",\"recvd\":true}},\"j1.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j1.msg\",\"msg\":\"Soon you will be contacted by a hacking group known as CyberSec. They can help you with your search. <br><br>You should join them, garner their favor, and exploit them for their Augmentations. But do not trust them. They are not what they seem. No one is.<br><br>-jump3R\",\"recvd\":true}},\"j2.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j2.msg\",\"msg\":\"Do not try to save the world. There is no world to save. If you want to find the truth, worry only about yourself. Ethics and morals will get you killed. <br><br>Watch out for a hacking group known as NiteSec.<br><br>-jump3R\",\"recvd\":true}},\"j3.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j3.msg\",\"msg\":\"You must learn to walk before you can run. And you must run before you can fly. Look for the black hand. <br><br>I.I.I.I <br><br>-jump3R\",\"recvd\":true}},\"j4.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j4.msg\",\"msg\":\"To find what you are searching for, you must understand the bits. The bits are all around us. The runners will help you.<br><br>-jump3R\",\"recvd\":true}},\"csec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"csec-test.msg\",\"msg\":\"We've been watching you. Your skills are very impressive. But you're wasting your talents. If you join us, you can put your skills to good use and change the world for the better. If you join us, we can unlock your full potential. <br><br>But first, you must pass our test. Find and install the backdoor on our server. <br><br>-CyberSec\",\"recvd\":true}},\"nitesec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"nitesec-test.msg\",\"msg\":\"People say that the corrupted governments and corporations rule the world. Yes, maybe they do. But do you know who everyone really fears? People like us. Because they can't hide from us. Because they can't fight shadows and ideas with bullets. <br><br>Join us, and people will fear you, too. <br><br>Find and install the backdoor on our server. Then, we will contact you again.<br><br>-NiteSec\",\"recvd\":true}},\"19dfj3l1nd.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"19dfj3l1nd.msg\",\"msg\":\"We know what you are doing. We know what drives you. We know what you are looking for. <br><br> We can help you find the answers.<br><br>run4theh111z\",\"recvd\":true}},\"icarus.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"icarus.msg\",\"msg\":\"@)(#V%*N)@(#*)*C)@#%*)*V)@#(*%V@)(#VN%*)@#(*%<br>)@B(*#%)@)M#B*%V)____FIND___#$@)#%(B*)@#(*%B)<br>@_#(%_@#M(BDSPOMB__THE-CAVE_#)$(*@#$)@#BNBEGB<br>DFLSMFVMV)#@($*)@#*$MV)@#(*$V)M#(*$)M@(#*VM$)\",\"recvd\":false}}}",
        "StockMarketSave": "{\"ECorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"ECorp\",\"symbol\":\"ECP\",\"price\":11854.599709687329,\"lastPrice\":11818.4469817416,\"playerShares\":10440000,\"playerAvgPx\":10924.55902090814,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.45,\"b\":true,\"otlkMag\":15.483958951818563,\"otlkMagForecast\":67.95822049547577,\"cap\":100875914,\"spreadPerc\":0.1,\"shareTxForMovement\":74995,\"shareTxUntilMovement\":6160,\"totalShares\":116100000,\"maxShares\":23200000}},\"MegaCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"MegaCorp\",\"symbol\":\"MGCP\",\"price\":63694.65308074566,\"lastPrice\":63889.49555607117,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.45,\"b\":false,\"otlkMag\":16.272519338934654,\"otlkMagForecast\":31.195144051403922,\"cap\":635732958,\"spreadPerc\":0.3,\"shareTxForMovement\":58078,\"shareTxUntilMovement\":27548,\"totalShares\":76000000,\"maxShares\":15200000}},\"Blade Industries\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Blade Industries\",\"symbol\":\"BLD\",\"price\":7041.40866765908,\"lastPrice\":7008.061107241221,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":false,\"otlkMag\":9.037029836056883,\"otlkMagForecast\":38.893178436627096,\"cap\":56841880,\"spreadPerc\":0.2,\"shareTxForMovement\":53620,\"shareTxUntilMovement\":53620,\"totalShares\":71500000,\"maxShares\":14300000}},\"Clarke Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Clarke Incorporated\",\"symbol\":\"CLRK\",\"price\":25098.604290789735,\"lastPrice\":25219.741082759934,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.71,\"b\":false,\"otlkMag\":9.862567149524393,\"otlkMagForecast\":36.207445090383516,\"cap\":259108974,\"spreadPerc\":0.3,\"shareTxForMovement\":63264,\"shareTxUntilMovement\":20836,\"totalShares\":76200000,\"maxShares\":15200000}},\"OmniTek Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"OmniTek Incorporated\",\"symbol\":\"OMTK\",\"price\":56969.245658059575,\"lastPrice\":57217.09546839759,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.64,\"b\":false,\"otlkMag\":9.36515040928326,\"otlkMagForecast\":37.327488608335145,\"cap\":788834157,\"spreadPerc\":0.4,\"shareTxForMovement\":36159,\"shareTxUntilMovement\":3344,\"totalShares\":49400000,\"maxShares\":9900000}},\"Four Sigma\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Four Sigma\",\"symbol\":\"FSIG\",\"price\":16823.38864708668,\"lastPrice\":16703.032207509776,\"playerShares\":3150000,\"playerAvgPx\":14244.072914250006,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.06,\"b\":true,\"otlkMag\":19.914732925750958,\"otlkMagForecast\":67.07726161087652,\"cap\":646376166,\"spreadPerc\":0.6,\"shareTxForMovement\":63988,\"shareTxUntilMovement\":5846,\"totalShares\":35000000,\"maxShares\":7000000}},\"KuaiGong International\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"KuaiGong International\",\"symbol\":\"KGI\",\"price\":18083.439087344064,\"lastPrice\":17979.550960746852,\"playerShares\":8640000,\"playerAvgPx\":17259.047979930176,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.85,\"b\":true,\"otlkMag\":8.69597863265316,\"otlkMagForecast\":59.436137265232695,\"cap\":368430248,\"spreadPerc\":0.6,\"shareTxForMovement\":41416,\"shareTxUntilMovement\":23324,\"totalShares\":95900000,\"maxShares\":19200000}},\"Fulcrum Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Fulcrum Technologies\",\"symbol\":\"FLCM\",\"price\":39738.46949380056,\"lastPrice\":40076.13702105419,\"playerShares\":6075000,\"playerAvgPx\":29996.457061277364,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.25,\"b\":true,\"otlkMag\":10.685130347912416,\"otlkMagForecast\":62.967777647678986,\"cap\":379452666,\"spreadPerc\":1,\"shareTxForMovement\":50091,\"shareTxUntilMovement\":36867,\"totalShares\":67700000,\"maxShares\":13500000}},\"Storm Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Storm Technologies\",\"symbol\":\"STM\",\"price\":23772.459976679227,\"lastPrice\":23629.500583043,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.89,\"b\":false,\"otlkMag\":9.15884071922131,\"otlkMagForecast\":38.603857503989225,\"cap\":566423920,\"spreadPerc\":1,\"shareTxForMovement\":105376,\"shareTxUntilMovement\":2222,\"totalShares\":48100000,\"maxShares\":9600000}},\"DefComm\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"DefComm\",\"symbol\":\"DCOMM\",\"price\":10297.31204889633,\"lastPrice\":10343.511408684328,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.66,\"b\":true,\"otlkMag\":8.385900859775443,\"otlkMagForecast\":60.73324824087482,\"cap\":79770412,\"spreadPerc\":0.4,\"shareTxForMovement\":83075,\"shareTxUntilMovement\":21154,\"totalShares\":57400000,\"maxShares\":11500000}},\"Helios Labs\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Helios Labs\",\"symbol\":\"HLS\",\"price\":20367.925025740707,\"lastPrice\":20286.561716104192,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.59,\"b\":false,\"otlkMag\":9.150378972710556,\"otlkMagForecast\":40.77089588744389,\"cap\":209630271,\"spreadPerc\":0.2,\"shareTxForMovement\":91104,\"shareTxUntilMovement\":49860,\"totalShares\":60400000,\"maxShares\":12100000}},\"VitaLife\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"VitaLife\",\"symbol\":\"VITA\",\"price\":9251.18386226198,\"lastPrice\":9201.145849921875,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.8,\"b\":true,\"otlkMag\":6.375870625776578,\"otlkMagForecast\":56.00385449808056,\"cap\":133477999,\"spreadPerc\":0.5,\"shareTxForMovement\":105168,\"shareTxUntilMovement\":105168,\"totalShares\":116200000,\"maxShares\":23200000}},\"Icarus Microsystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Icarus Microsystems\",\"symbol\":\"ICRS\",\"price\":49074.39962115535,\"lastPrice\":48845.29178319154,\"playerShares\":1951101,\"playerAvgPx\":45487.49739344721,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.69,\"b\":false,\"otlkMag\":9.516359975994035,\"otlkMagForecast\":41.89977905790532,\"cap\":504161011,\"spreadPerc\":0.9,\"shareTxForMovement\":106892,\"shareTxUntilMovement\":70105,\"totalShares\":39200000,\"maxShares\":7800000}},\"Universal Energy\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Universal Energy\",\"symbol\":\"UNV\",\"price\":26580.77754860543,\"lastPrice\":26678.350533020588,\"playerShares\":3060000,\"playerAvgPx\":24491.79260659981,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.54,\"b\":true,\"otlkMag\":9.042993602078303,\"otlkMagForecast\":60.023878377289634,\"cap\":59548278,\"spreadPerc\":1,\"shareTxForMovement\":40301,\"shareTxUntilMovement\":38552,\"totalShares\":34200000,\"maxShares\":6800000}},\"AeroCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"AeroCorp\",\"symbol\":\"AERO\",\"price\":9088.387677153902,\"lastPrice\":9126.074092236975,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.61,\"b\":false,\"otlkMag\":6.5980211662049015,\"otlkMagForecast\":44.308327923002615,\"cap\":20808594,\"spreadPerc\":0.8,\"shareTxForMovement\":84441,\"shareTxUntilMovement\":84441,\"totalShares\":75700000,\"maxShares\":15100000}},\"Omnia Cybersystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omnia Cybersystems\",\"symbol\":\"OMN\",\"price\":8236.084945339479,\"lastPrice\":8197.634110898713,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.69,\"b\":false,\"otlkMag\":5.211874333368159,\"otlkMagForecast\":44.653458863763184,\"cap\":105106989,\"spreadPerc\":0.9,\"shareTxForMovement\":73289,\"shareTxUntilMovement\":73289,\"totalShares\":92300000,\"maxShares\":18500000}},\"Solaris Space Systems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Solaris Space Systems\",\"symbol\":\"SLRS\",\"price\":20137.308471430355,\"lastPrice\":20237.237676111,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":true,\"otlkMag\":7.220165401131459,\"otlkMagForecast\":57.86607803018652,\"cap\":328095510,\"spreadPerc\":0.5,\"shareTxForMovement\":55003,\"shareTxUntilMovement\":55003,\"totalShares\":47600000,\"maxShares\":9500000}},\"Global Pharmaceuticals\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"symbol\":\"GPH\",\"price\":11181.793835612181,\"lastPrice\":11137.126165587433,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.59,\"b\":true,\"otlkMag\":9.285097658529049,\"otlkMagForecast\":58.92814999515546,\"cap\":137431432,\"spreadPerc\":0.9,\"shareTxForMovement\":97525,\"shareTxUntilMovement\":63955,\"totalShares\":44200000,\"maxShares\":8800000}},\"Nova Medical\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Nova Medical\",\"symbol\":\"NVMD\",\"price\":16626.68800607958,\"lastPrice\":16543.46825161933,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.74,\"b\":true,\"otlkMag\":5.171076954296403,\"otlkMagForecast\":54.45406237891812,\"cap\":205948971,\"spreadPerc\":0.7,\"shareTxForMovement\":53495,\"shareTxUntilMovement\":53495,\"totalShares\":34000000,\"maxShares\":6800000}},\"Watchdog Security\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Watchdog Security\",\"symbol\":\"WDS\",\"price\":1179.15027083498,\"lastPrice\":1198.7885481043102,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.45,\"b\":false,\"otlkMag\":5.181669095318272,\"otlkMagForecast\":49.503915887817406,\"cap\":78710291,\"spreadPerc\":1.1,\"shareTxForMovement\":37576,\"shareTxUntilMovement\":37576,\"totalShares\":93900000,\"maxShares\":18800000}},\"LexoCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"LexoCorp\",\"symbol\":\"LXO\",\"price\":15768.97394620227,\"lastPrice\":15644.546272426895,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.17,\"b\":true,\"otlkMag\":7.638971551603943,\"otlkMagForecast\":55.84836559366268,\"cap\":64693126,\"spreadPerc\":0.6,\"shareTxForMovement\":48619,\"shareTxUntilMovement\":48619,\"totalShares\":41100000,\"maxShares\":8200000}},\"Rho Construction\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Rho Construction\",\"symbol\":\"RHOC\",\"price\":4108.966473155914,\"lastPrice\":4091.7213663117845,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.62,\"b\":true,\"otlkMag\":0.9924669418926029,\"otlkMagForecast\":53.590795154590104,\"cap\":21565578,\"spreadPerc\":0.4,\"shareTxForMovement\":83766,\"shareTxUntilMovement\":83766,\"totalShares\":29400000,\"maxShares\":5900000}},\"Alpha Enterprises\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Alpha Enterprises\",\"symbol\":\"APHE\",\"price\":7137.0192121466525,\"lastPrice\":7233.566058030778,\"playerShares\":4410000,\"playerAvgPx\":3216.0004425510274,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.99,\"b\":true,\"otlkMag\":14.818040175621087,\"otlkMagForecast\":68.60257606210605,\"cap\":24409420,\"spreadPerc\":0.9,\"shareTxForMovement\":34332,\"shareTxUntilMovement\":33616,\"totalShares\":49100000,\"maxShares\":9800000}},\"SysCore Securities\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"SysCore Securities\",\"symbol\":\"SYSC\",\"price\":1867.2250945767169,\"lastPrice\":1888.4224310995787,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.67,\"b\":true,\"otlkMag\":5.626262527608908,\"otlkMagForecast\":54.23266348813863,\"cap\":74359644,\"spreadPerc\":0.7,\"shareTxForMovement\":45010,\"shareTxUntilMovement\":45010,\"totalShares\":43700000,\"maxShares\":8700000}},\"CompuTek\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"CompuTek\",\"symbol\":\"CTK\",\"price\":4246.623808513947,\"lastPrice\":4272.027370178997,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.88,\"b\":true,\"otlkMag\":6.631015376263709,\"otlkMagForecast\":58.56169855522748,\"cap\":14659369,\"spreadPerc\":0.7,\"shareTxForMovement\":69946,\"shareTxUntilMovement\":69946,\"totalShares\":31300000,\"maxShares\":6300000}},\"NetLink Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"NetLink Technologies\",\"symbol\":\"NTLK\",\"price\":2496.6199052420197,\"lastPrice\":2536.672677365279,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.36,\"b\":false,\"otlkMag\":11.309861331825962,\"otlkMagForecast\":40.472442502653585,\"cap\":27041780,\"spreadPerc\":1.6,\"shareTxForMovement\":51169,\"shareTxUntilMovement\":26515,\"totalShares\":35300000,\"maxShares\":7100000}},\"Omega Software\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omega Software\",\"symbol\":\"OMGA\",\"price\":1870.9733092061654,\"lastPrice\":1857.9643441239896,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.03,\"b\":false,\"otlkMag\":3.6405825382606345,\"otlkMagForecast\":47.50176251507569,\"cap\":58064666,\"spreadPerc\":1.2,\"shareTxForMovement\":74898,\"shareTxUntilMovement\":74898,\"totalShares\":13000000,\"maxShares\":2600000}},\"FoodNStuff\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"FoodNStuff\",\"symbol\":\"FNS\",\"price\":1119.330843223282,\"lastPrice\":1125.341939864524,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.79,\"b\":false,\"otlkMag\":1.3282719527519882,\"otlkMagForecast\":51.87068566615347,\"cap\":13211236,\"spreadPerc\":0.6,\"shareTxForMovement\":102333,\"shareTxUntilMovement\":102333,\"totalShares\":33900000,\"maxShares\":6800000}},\"Sigma Cosmetics\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Sigma Cosmetics\",\"symbol\":\"SGC\",\"price\":1494.5569119366012,\"lastPrice\":1473.6206029598263,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.09,\"b\":true,\"otlkMag\":5.741796267359833,\"otlkMagForecast\":56.604753908783174,\"cap\":36089031,\"spreadPerc\":0.6,\"shareTxForMovement\":64331,\"shareTxUntilMovement\":64331,\"totalShares\":17900000,\"maxShares\":3600000}},\"Joe's Guns\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Joe's Guns\",\"symbol\":\"JGN\",\"price\":3647.0991338742715,\"lastPrice\":3720.4841556355937,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.96,\"b\":false,\"otlkMag\":12.688402011407042,\"otlkMagForecast\":40.378070222654095,\"cap\":3795944,\"spreadPerc\":1.2,\"shareTxForMovement\":24328,\"shareTxUntilMovement\":24328,\"totalShares\":113200000,\"maxShares\":22600000}},\"Catalyst Ventures\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Catalyst Ventures\",\"symbol\":\"CTYS\",\"price\":468.61946972512646,\"lastPrice\":463.9829986991275,\"playerShares\":9090000,\"playerAvgPx\":403.06776874724136,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.47,\"b\":true,\"otlkMag\":9.832527323389813,\"otlkMagForecast\":63.49835299845736,\"cap\":13144103,\"spreadPerc\":0.7,\"shareTxForMovement\":69023,\"shareTxUntilMovement\":41297,\"totalShares\":101200000,\"maxShares\":20200000}},\"Microdyne Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Microdyne Technologies\",\"symbol\":\"MDYN\",\"price\":41132.153552681746,\"lastPrice\":41327.879154203314,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":false,\"otlkMag\":7.301289165513624,\"otlkMagForecast\":41.23240274094304,\"cap\":375095736,\"spreadPerc\":0.7,\"shareTxForMovement\":189122,\"shareTxUntilMovement\":189122,\"totalShares\":16100000,\"maxShares\":3200000}},\"Titan Laboratories\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Titan Laboratories\",\"symbol\":\"TITN\",\"price\":23884.922142429252,\"lastPrice\":23804.014720560328,\"playerShares\":3105000,\"playerAvgPx\":22363.59751084027,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.5,\"b\":true,\"otlkMag\":11.087962310012868,\"otlkMagForecast\":60.53539604831294,\"cap\":155887823,\"spreadPerc\":0.6,\"shareTxForMovement\":131539,\"shareTxUntilMovement\":31649,\"totalShares\":34300000,\"maxShares\":6900000}},\"Orders\":{\"ECP\":[],\"MGCP\":[],\"BLD\":[],\"CLRK\":[],\"OMTK\":[],\"FSIG\":[],\"KGI\":[],\"FLCM\":[],\"STM\":[],\"DCOMM\":[],\"HLS\":[],\"VITA\":[],\"ICRS\":[],\"UNV\":[],\"AERO\":[],\"OMN\":[],\"SLRS\":[],\"GPH\":[],\"NVMD\":[],\"WDS\":[],\"LXO\":[],\"RHOC\":[],\"APHE\":[],\"SYSC\":[],\"CTK\":[],\"NTLK\":[],\"OMGA\":[],\"FNS\":[],\"SGC\":[],\"JGN\":[],\"CTYS\":[],\"MDYN\":[],\"TITN\":[]},\"storedCycles\":665714,\"lastUpdate\":1641532177531,\"ticksUntilCycle\":11}",
        "SettingsSave": "{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":100,\"AutosaveInterval\":60,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"EnableBashHotkeys\":false,\"TimestampsFormat\":\"MM/dd hh:mm:ss\",\"Locale\":\"en\",\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":1,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":false,\"SuppressMessages\":false,\"SuppressTravelConfirmation\":false,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":false,\"UseIEC60027_2\":false,\"MonacoTheme\":\"vs-dark\",\"MonacoInsertSpaces\":false,\"MonacoFontSize\":20,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"theme\":{\"primarylight\":\"#0f0\",\"primary\":\"#0c0\",\"primarydark\":\"#090\",\"successlight\":\"#0f0\",\"success\":\"#0c0\",\"successdark\":\"#090\",\"errorlight\":\"#f00\",\"error\":\"#c00\",\"errordark\":\"#900\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#ff0\",\"warning\":\"#cc0\",\"warningdark\":\"#990\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#000\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#000\",\"backgroundsecondary\":\"#000\",\"button\":\"#333\"}}",
        "VersionSave": "9",
        "AllGangsSave": "",
        "LastExportBonus": "1641458367009",
        "StaneksGiftSave": "{\"ctor\":\"StaneksGift\",\"data\":{\"storedCycles\":0,\"fragments\":[]}}"
    }
}