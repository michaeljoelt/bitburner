{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hacking\":1899,\"hp\":10,\"max_hp\":10,\"strength\":5,\"defense\":7,\"dexterity\":15,\"agility\":15,\"charisma\":52,\"intelligence\":0,\"hacking_chance_mult\":1.061520150601,\"hacking_speed_mult\":1.061520150601,\"hacking_money_mult\":1.061520150601,\"hacking_grow_mult\":1.061520150601,\"hacking_exp\":1.0000000000000002e+27,\"strength_exp\":74.62486658725045,\"defense_exp\":104.5597348341978,\"dexterity_exp\":281.51514393938527,\"agility_exp\":282.36436005986604,\"charisma_exp\":1928.717148610199,\"intelligence_exp\":0,\"hacking_mult\":1.061520150601,\"strength_mult\":1.061520150601,\"defense_mult\":1.061520150601,\"dexterity_mult\":1.061520150601,\"agility_mult\":1.061520150601,\"charisma_mult\":1.061520150601,\"hacking_exp_mult\":1.061520150601,\"strength_exp_mult\":1.061520150601,\"defense_exp_mult\":1.061520150601,\"dexterity_exp_mult\":1.061520150601,\"agility_exp_mult\":1.061520150601,\"charisma_exp_mult\":1.061520150601,\"company_rep_mult\":1.061520150601,\"faction_rep_mult\":1.061520150601,\"money\":3585181647440.9185,\"city\":\"Sector-12\",\"location\":\"Alpha Enterprises\",\"jobs\":{\"Alpha Enterprises\":\"Software Engineering Intern\"},\"companyName\":\"Alpha Enterprises\",\"currentServer\":\"home\",\"purchasedServers\":[\"pserv-0\",\"pserv-1\",\"pserv-2\",\"pserv-3\",\"pserv-7\",\"pserv-20\",\"pserv-4\",\"pserv-5\",\"pserv-6\",\"pserv-8\",\"pserv-9\",\"pserv-10\",\"pserv-11\",\"pserv-12\",\"pserv-13\",\"pserv-15\",\"pserv-16\",\"pserv-17\",\"pserv-18\",\"pserv-19\",\"pserv-14\",\"pserv-21\",\"pserv-22\",\"pserv-23\",\"pserv-24\"],\"hacknetNodes\":[{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":703179.200004493,\"ram\":64,\"totalMoneyGenerated\":1748530025.067516,\"name\":\"hacknet-node-0\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":703158.2000044938,\"ram\":64,\"totalMoneyGenerated\":1748492599.689761,\"name\":\"hacknet-node-1\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70674.99999989796,\"ram\":64,\"totalMoneyGenerated\":1733289164.7210796,\"name\":\"hacknet-node-2\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70674.19999989796,\"ram\":64,\"totalMoneyGenerated\":1733274271.7349608,\"name\":\"hacknet-node-3\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70673.39999989796,\"ram\":64,\"totalMoneyGenerated\":1733300991.683965,\"name\":\"hacknet-node-4\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70672.79999989796,\"ram\":64,\"totalMoneyGenerated\":1733307022.0949502,\"name\":\"hacknet-node-5\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70666.79999989796,\"ram\":64,\"totalMoneyGenerated\":1733332045.8343735,\"name\":\"hacknet-node-6\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70666.19999989796,\"ram\":64,\"totalMoneyGenerated\":1733299615.1384327,\"name\":\"hacknet-node-7\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70665.59999989797,\"ram\":64,\"totalMoneyGenerated\":1733337662.174413,\"name\":\"hacknet-node-8\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70664.99999989796,\"ram\":64,\"totalMoneyGenerated\":1733344935.0312376,\"name\":\"hacknet-node-9\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70652.39999989796,\"ram\":64,\"totalMoneyGenerated\":1733360455.561515,\"name\":\"hacknet-node-10\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70651.79999989795,\"ram\":64,\"totalMoneyGenerated\":1733349071.0811722,\"name\":\"hacknet-node-11\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70651.19999989796,\"ram\":64,\"totalMoneyGenerated\":1733364349.9596422,\"name\":\"hacknet-node-12\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70650.59999989795,\"ram\":64,\"totalMoneyGenerated\":1733371782.6484911,\"name\":\"hacknet-node-13\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70649.99999989796,\"ram\":64,\"totalMoneyGenerated\":1733408007.7134297,\"name\":\"hacknet-node-14\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70649.19999989796,\"ram\":64,\"totalMoneyGenerated\":1733385016.7082965,\"name\":\"hacknet-node-15\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70648.59999989795,\"ram\":64,\"totalMoneyGenerated\":1733412920.1034212,\"name\":\"hacknet-node-16\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70647.99999989796,\"ram\":64,\"totalMoneyGenerated\":1733423700.6628456,\"name\":\"hacknet-node-17\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70647.39999989796,\"ram\":64,\"totalMoneyGenerated\":1733458523.4499202,\"name\":\"hacknet-node-18\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70646.79999989795,\"ram\":64,\"totalMoneyGenerated\":1733447578.2394156,\"name\":\"hacknet-node-19\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70559.99999989793,\"ram\":64,\"totalMoneyGenerated\":1731747272.814078,\"name\":\"hacknet-node-20\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70559.59999989794,\"ram\":64,\"totalMoneyGenerated\":1731740155.7733977,\"name\":\"hacknet-node-21\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70558.99999989793,\"ram\":64,\"totalMoneyGenerated\":1731762358.6298714,\"name\":\"hacknet-node-22\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70558.59999989794,\"ram\":64,\"totalMoneyGenerated\":1731765325.4271512,\"name\":\"hacknet-node-23\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70557.39999989794,\"ram\":64,\"totalMoneyGenerated\":1731782396.2587142,\"name\":\"hacknet-node-24\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70556.99999989793,\"ram\":64,\"totalMoneyGenerated\":1731775918.5461307,\"name\":\"hacknet-node-25\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70556.39999989794,\"ram\":64,\"totalMoneyGenerated\":1731773072.4275537,\"name\":\"hacknet-node-26\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70555.99999989793,\"ram\":64,\"totalMoneyGenerated\":1731791907.5670545,\"name\":\"hacknet-node-27\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70555.39999989794,\"ram\":64,\"totalMoneyGenerated\":1731788138.6666863,\"name\":\"hacknet-node-28\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":24553.918197312316,\"onlineTimeSeconds\":70554.79999989794,\"ram\":64,\"totalMoneyGenerated\":1731806497.522818,\"name\":\"hacknet-node-29\"}}],\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0}}},\"factions\":[\"CyberSec\",\"Sector-12\",\"The Black Hand\",\"Aevum\",\"Netburners\"],\"factionInvitations\":[],\"queuedAugmentations\":[{\"level\":1,\"name\":\"Neuralstimulator\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"Neurotrainer I\"},{\"level\":7,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"Wired Reflexes\"},{\"level\":1,\"name\":\"Augmented Targeting I\"},{\"level\":1,\"name\":\"CashRoot Starter Kit\"},{\"level\":1,\"name\":\"Speech Processor Implant\"},{\"level\":1,\"name\":\"Augmented Targeting II\"},{\"level\":8,\"name\":\"NeuroFlux Governor\"},{\"level\":9,\"name\":\"NeuroFlux Governor\"},{\"level\":10,\"name\":\"NeuroFlux Governor\"},{\"level\":11,\"name\":\"NeuroFlux Governor\"},{\"level\":12,\"name\":\"NeuroFlux Governor\"},{\"level\":13,\"name\":\"NeuroFlux Governor\"},{\"level\":14,\"name\":\"NeuroFlux Governor\"},{\"level\":15,\"name\":\"NeuroFlux Governor\"}],\"augmentations\":[{\"level\":1,\"name\":\"Hacknet Node Core Direct-Neural Interface\"},{\"level\":1,\"name\":\"Hacknet Node Kernel Direct-Neural Interface\"},{\"level\":1,\"name\":\"Hacknet Node NIC Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node Cache Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node CPU Architecture Neural-Upload\"},{\"level\":6,\"name\":\"NeuroFlux Governor\"}],\"sourceFiles\":[],\"numPeopleKilled\":0,\"karma\":-1.6,\"crime_money_mult\":1.061520150601,\"crime_success_mult\":1.061520150601,\"isWorking\":false,\"focus\":true,\"workType\":\"\",\"workCostMult\":4,\"workExpMult\":3,\"currentWorkFactionName\":\"\",\"currentWorkFactionDescription\":\"\",\"workHackExpGainRate\":0,\"workStrExpGainRate\":0,\"workDefExpGainRate\":0,\"workDexExpGainRate\":0,\"workAgiExpGainRate\":0,\"workChaExpGainRate\":0,\"workRepGainRate\":0,\"workMoneyGainRate\":0,\"workMoneyLossRate\":0,\"workHackExpGained\":0,\"workStrExpGained\":0,\"workDefExpGained\":0,\"workDexExpGained\":0,\"workAgiExpGained\":0,\"workChaExpGained\":0,\"workRepGained\":0,\"workMoneyGained\":0,\"createProgramName\":\"\",\"createProgramReqLvl\":750,\"className\":\"\",\"crimeType\":\"\",\"timeWorked\":0,\"timeWorkedCreateProgram\":0,\"timeNeededToCompleteWork\":28800000,\"work_money_mult\":1.061520150601,\"hacknet_node_money_mult\":2.6772533373298413,\"hacknet_node_purchase_cost_mult\":0.7202323142917649,\"hacknet_node_ram_cost_mult\":0.9414801494009999,\"hacknet_node_core_cost_mult\":0.9414801494009999,\"hacknet_node_level_cost_mult\":0.80025812699085,\"hasWseAccount\":true,\"hasTixApiAccess\":true,\"has4SData\":true,\"has4SDataTixApi\":true,\"gang\":null,\"corporation\":null,\"bladeburner\":null,\"bladeburner_max_stamina_mult\":1,\"bladeburner_stamina_gain_mult\":1,\"bladeburner_analysis_mult\":1,\"bladeburner_success_chance_mult\":1,\"sleeves\":[],\"resleeves\":[],\"sleevesFromCovenant\":0,\"bitNodeN\":1,\"lastUpdate\":1641536764653,\"totalPlaytime\":1226183800,\"playtimeSinceLastAug\":704948000,\"playtimeSinceLastBitnode\":1226183800,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-33251.99999999959,\"codingcontract\":0,\"corporation\":0,\"crime\":992521.3408119349,\"gang\":0,\"hacking\":6670035522395.951,\"hacknet\":52015222781.42965,\"hacknet_expenses\":-99163521650.63858,\"hospitalization\":-4908000,\"infiltration\":0,\"sleeves\":0,\"stock\":-669013298392.6873,\"total\":3585181646440.9185,\"work\":3812672.6462657913,\"servers\":-3519188086100.392,\"other\":2999999000000,\"augmentations\":-1849503056561.4243}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-792611.9999999726,\"codingcontract\":0,\"corporation\":0,\"crime\":992521.3408119349,\"gang\":0,\"hacking\":6670291239332.114,\"hacknet\":55855553523.47793,\"hacknet_expenses\":-99826406416.10703,\"hospitalization\":-4908000,\"infiltration\":0,\"sleeves\":0,\"stock\":-669013298392.6873,\"total\":3586181379778.6553,\"work\":3848213.646265653,\"servers\":-3519653516060.1147,\"other\":2999993800000,\"augmentations\":-1851465132357.6304}},\"scriptProdSinceLastAug\":6176931180240.249,\"exploits\":[\"YoureNotMeantToAccessThis\"],\"factionWorkType\":\"Faction Hacking Work\",\"committingCrimeThruSingFn\":false,\"singFnCrimeWorkerScript\":null}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":4,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":false,\"ip\":\"11.9.2.0\",\"isConnectedTo\":true,\"maxRam\":65536,\"messages\":[\"hackers-starting-handbook.lit\",\"j0.msg\",\"j1.msg\",\"csec-test.msg\",\"j2.msg\",\"nitesec-test.msg\",\"j3.msg\",\"j4.msg\",\"19dfj3l1nd.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"fl1ght.exe\",\"AutoLink.exe\",\"BruteSSH.exe\",\"FTPCrack.exe\",\"DeepscanV1.exe\",\"ServerProfiler.exe\",\"relaySMTP.exe\",\"DeepscanV2.exe\",\"HTTPWorm.exe\",\"SQLInject.exe-1.05%-INC\"],\"ramUsed\":65512.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[5859780003,1782,2673,891]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70194.57078321227,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.49599999999,\"onlineExpGained\":181781.77166571893,\"onlineMoneyMade\":5859780003,\"onlineRunningTime\":8077.4099999948485,\"pid\":1,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[5873873000,1782,4455,1782]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":17820.410940162463,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.51,\"onlineExpGained\":211074.34283589636,\"onlineMoneyMade\":5873873000,\"onlineRunningTime\":8077.4099999948485,\"pid\":2,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[50302843074,5346,5346,1782]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":208818.11607764245,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.518000000004,\"onlineExpGained\":277387.48679099936,\"onlineMoneyMade\":50302843074,\"onlineRunningTime\":8077.4099999948485,\"pid\":3,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,891,2673,1782]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":119996.1297385046,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.53100000001,\"onlineExpGained\":148830.34936764292,\"onlineMoneyMade\":0,\"onlineRunningTime\":8077.4099999948485,\"pid\":4,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[12684213600,891,5346,891]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":96784.35294385733,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.54000000001,\"onlineExpGained\":169841.93834855314,\"onlineMoneyMade\":12684213600,\"onlineRunningTime\":8077.4099999948485,\"pid\":5,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[12247977150,1782,3564,1782]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":104910.86372885821,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.549,\"onlineExpGained\":166661.1001628914,\"onlineMoneyMade\":12247977150,\"onlineRunningTime\":8077.4099999948485,\"pid\":6,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[10730422593,1782,4455,2673]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174870.28426940244,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.557,\"onlineExpGained\":187359.11956412112,\"onlineMoneyMade\":10730422593,\"onlineRunningTime\":8077.4099999948485,\"pid\":7,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[4598908375,2673,4455,1782]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":88975.15347249512,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.564999999995,\"onlineExpGained\":150009.6600540826,\"onlineMoneyMade\":4598908375,\"onlineRunningTime\":8077.4099999948485,\"pid\":8,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[9872417214,2673,2673,891]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":150128.75566573133,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.569,\"onlineExpGained\":122195.461052033,\"onlineMoneyMade\":9872417214,\"onlineRunningTime\":8077.4099999948485,\"pid\":9,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,55242,0,20493]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":84802.68361125,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.581,\"onlineExpGained\":122289.75,\"onlineMoneyMade\":0,\"onlineRunningTime\":8077.4099999948485,\"pid\":10,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[22844381967,1782,4455,1782]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":91462.24543858501,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.589,\"onlineExpGained\":159403.04839394373,\"onlineMoneyMade\":22844381967,\"onlineRunningTime\":8077.4099999948485,\"pid\":11,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[9157946850,7128,19602,7128]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":295019.1748365519,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.597,\"onlineExpGained\":418621.21647326514,\"onlineMoneyMade\":9157946850,\"onlineRunningTime\":8077.4099999948485,\"pid\":12,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[3375000000,6237,18711,9801]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":342024.08431908354,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.609000000004,\"onlineExpGained\":413857.2132437686,\"onlineMoneyMade\":3375000000,\"onlineRunningTime\":8077.4099999948485,\"pid\":13,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[4200000000,13365,45441,16038]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":493897.6637067667,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.616,\"onlineExpGained\":653222.1362400881,\"onlineMoneyMade\":4200000000,\"onlineRunningTime\":8077.4099999948485,\"pid\":14,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[1464360325,4455,9801,3564]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":143999.5941649249,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.622,\"onlineExpGained\":250364.06126342688,\"onlineMoneyMade\":1464360325,\"onlineRunningTime\":8077.4099999948485,\"pid\":15,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[8613067200,2673,9801,891]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":79077.72824300588,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.636000000006,\"onlineExpGained\":211558.80077968913,\"onlineMoneyMade\":8613067200,\"onlineRunningTime\":8077.4099999948485,\"pid\":16,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,53460,0,33858]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":121417.64569687498,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.641,\"onlineExpGained\":148351.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":8077.4099999948485,\"pid\":17,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,1782,5346,2673]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":197171.00541738115,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.647,\"onlineExpGained\":205649.34365539608,\"onlineMoneyMade\":0,\"onlineRunningTime\":8077.4099999948485,\"pid\":18,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[500000000,13365,24948,18711]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":258902.98799407072,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.652,\"onlineExpGained\":544488.4186563081,\"onlineMoneyMade\":500000000,\"onlineRunningTime\":8077.4099999948485,\"pid\":19,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[1500000000,12474,26730,16929]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":245584.18746952855,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.670000000006,\"onlineExpGained\":576229.8959770794,\"onlineMoneyMade\":1500000000,\"onlineRunningTime\":8077.4099999948485,\"pid\":20,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[3250000000,13365,41877,24948]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":249513.9641759024,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.677,\"onlineExpGained\":618427.9801622479,\"onlineMoneyMade\":3250000000,\"onlineRunningTime\":8077.4099999948485,\"pid\":21,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[2500000000,6237,13365,8019]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":166892.8664769387,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.681000000004,\"onlineExpGained\":329967.2375862479,\"onlineMoneyMade\":2500000000,\"onlineRunningTime\":8077.4099999948485,\"pid\":22,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,26730,0,36531]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":88474.7221875,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.692,\"onlineExpGained\":141669,\"onlineMoneyMade\":0,\"onlineRunningTime\":8077.4099999948485,\"pid\":23,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[250000000,65934,82863,77517]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":781545.3978444804,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.69700000001,\"onlineExpGained\":1396226.7563326876,\"onlineMoneyMade\":250000000,\"onlineRunningTime\":8077.4099999948485,\"pid\":24,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[707000000,359964,359073,178200]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1735982.947996704,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.701,\"onlineExpGained\":2977441.546609462,\"onlineMoneyMade\":707000000,\"onlineRunningTime\":8077.4099999948485,\"pid\":25,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[200000000,212949,225423,220077]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1832279.0024586304,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.708999999995,\"onlineExpGained\":3101002.002278629,\"onlineMoneyMade\":200000000,\"onlineRunningTime\":8077.4099999948485,\"pid\":26,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[230000000,112266,127413,121176]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1005434.4182385743,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.71400000001,\"onlineExpGained\":1727523.994161447,\"onlineMoneyMade\":230000000,\"onlineRunningTime\":8077.4099999948485,\"pid\":27,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[275000000,33858,49896,42768]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":538751.1112565434,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.719,\"onlineExpGained\":974615.7751569351,\"onlineMoneyMade\":275000000,\"onlineRunningTime\":8077.4099999948485,\"pid\":28,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[375000000,19602,39204,31185]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":402538.9805523911,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.724,\"onlineExpGained\":613231.1063793717,\"onlineMoneyMade\":375000000,\"onlineRunningTime\":8077.4099999948485,\"pid\":29,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[700000000,17820,38313,27621]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":431192.366640869,\"offlineMoneyMade\":0,\"offlineRunningTime\":62938.73100000001,\"onlineExpGained\":585514.4462040329,\"onlineMoneyMade\":700000000,\"onlineRunningTime\":8077.4099999948485,\"pid\":30,\"ramUsage\":2.45,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///20c130bb-303b-4d98-9b28-ff9fd2184fc9\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"stocks.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":1844.943,\"onlineExpGained\":0,\"onlineMoneyMade\":642211017001.8716,\"onlineRunningTime\":6808.009999996004,\"pid\":31,\"ramUsage\":23.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nName: autoHack.js\\nLast updated: 2022-01-02 02:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///b1459c49-8053-4b58-8ed7-2d35e4a94da2\"}],\"ramUsage\":2.45,\"server\":\"home\",\"_hash\":\"c683346f1fb81c6d28ca083c152c3c1d91fefab8d02f34af1f23c62d38bc0955\",\"moduleSequenceNumber\":176,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nexport async function main(ns) {\\n\\tvar scriptName = \\\"autoHack.js\\\";\\n\\tvar vers = \\\"v1\\\";\\n\\tvar host = ns.getHostname();\\n\\tvar scriptRam = 2.6;\\n\\tns.tprint(\\\"script to copy/run = \\\" + scriptName + \\\"(ram: \\\" + scriptRam + \\\")\\\");\\n\\n\\tif (ns.args.length > 0) {\\n\\t\\tvar targets = ns.args;\\n\\t}\\n\\telse {\\n\\t\\tvar allServers = ns.scan();\\n\\t\\tvar targets = [];\\n\\n\\t\\tfor (let i = 0; i < allServers.length; i++) {\\n\\t\\t\\tvar server = allServers[i];\\n\\t\\t\\tif (!server.startsWith(\\\"pserv\\\") && !server.startsWith(\\\"undefined\\\")) {\\n\\t\\t\\t\\ttargets.push(server);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t}\\n\\tns.tprint(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": targets = \\\" + targets);\\n\\n\\tfor (let i = 0; i < targets.length; i++) {\\n\\t\\tvar target = targets[i];\\n\\t\\tif (ns.getServerNumPortsRequired(target) == 0) {\\n\\t\\t\\tns.kill(scriptName, target);\\n\\t\\t\\tvar targetRam = ns.getServerMaxRam(target) - ns.getServerUsedRam(target);\\n\\t\\t\\tawait ns.scp(scriptName, target);\\n\\t\\t\\tvar threads = Math.floor(targetRam / scriptRam);\\n\\t\\t\\tns.tprint(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": nuking \\\" + target);\\n\\t\\t\\tns.nuke(target);\\n\\t\\t\\tif (threads > 0) {\\n\\t\\t\\t\\tns.tprint(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running \\\" + scriptName + \\\" on \\\" + target);\\n\\t\\t\\t\\tns.exec(scriptName, target, threads);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tns.tprint(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\"not enough ram (\\\" + targetRam + \\\")\\\");\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t}\\n\\t\\tawait ns.sleep(100000)\\n}\",\"filename\":\"copyRun_autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"copyRun_autoHack.js\",\"url\":\"blob:file:///a25a3362-bb32-4744-8ec1-33d8698ce906\"}],\"ramUsage\":4.5,\"server\":\"home\",\"_hash\":\"4a0216f1dd08791fd89bc8aa70b1057f7bda35127a6fb1b9075ce8ec33f007c1\",\"moduleSequenceNumber\":75}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\n\\tvar targets = ns.args;\\n\\tns.tprint(\\\"targets = \\\" + targets);\\n\\n\\tfor (let i = 0; i < targets.length; i++) {\\n\\t\\tvar target = targets[i];\\n\\t\\tns.killall(target);\\n\\t}\\n}\",\"filename\":\"killAll.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"killAll.js\",\"url\":\"blob:file:///17f0e10c-fa86-4cbc-a924-03a0c099c743\"}],\"ramUsage\":2.1,\"server\":\"home\",\"_hash\":\"956f6d943689d201d62a4cd91cc22925f64cca50a178a48668eab3640ed9ca29\",\"moduleSequenceNumber\":76}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    var base = ns.getServer;\\n\\tns.print(\\\"base = \\\" + base);\\n\\n\\tvar scriptName = \\\"copyRun_autoHack.js\\\";\\n\\tvar scriptRam = 2.6;//ns.getScriptRam(scriptName,base);\\n\\tns.print(\\\"script to copy/run = \\\" + scriptName + \\\"(ram: \\\" + scriptRam + \\\")\\\");\\n\\nif(ns.args.length>0){\\n\\tvar targets = ns.args;\\n}\\nelse{\\n\\tvar targets = ns.scan();\\n}\\n\\tns.print(\\\"targets = \\\" + targets);\\n\\n\\tfor (let i = 0; i < targets.length; i++) {\\n\\t\\tvar target = targets[i];\\n\\t\\tns.kill(scriptName, target);\\n\\t\\tvar targetRam = ns.getServerMaxRam(target)-ns.getServerUsedRam;\\n\\t\\tawait ns.scp(scriptName, target);\\n\\t\\tvar threads = Math.floor(targetRam / scriptRam);\\n\\t\\tns.print(\\\"nuking\\\");\\n\\t\\tif(threads>0){\\n\\t\\tns.print(\\\"running \\\"+scriptName);\\n\\t\\tns.exec(\\\"NUKE.exe\\\", target); //ns.connect(targets[i]);)\\n\\t\\tns.exec(scriptName,target, threads);\\n\\t\\t}\\n\\t\\telse{\\n\\t\\t\\tns.print(\\\"not enough available ram (\\\"+targetRam+\\\")\\\")\\n\\t\\t}\\n\\n\\t}\\n}\",\"filename\":\"spread.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"spread.js\",\"url\":\"blob:file:///dc846edf-f0bc-43c8-bc3e-872a5e1f3bda\"}],\"ramUsage\":6.3,\"server\":\"home\",\"_hash\":\"bc7ab2d6e95a0bb6c5103c55da2e3386abf6de5530b050dd7993acbdac26f440\",\"moduleSequenceNumber\":77}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\n\\tlet script = \\\"autoHack.js\\\";\\n\\tlet scriptRam = ns.getScriptRam(script);\\n\\tlet targets = [\\\"joesguns\\\"];\\n\\n\\tif (ns.args.length > 0) {\\n\\t\\tlet arg = ns.args + \\\"\\\";\\n\\t\\tlet potentialTargets = arg.split(\\\" \\\");\\n\\t\\ttargets = [];\\n\\t\\tfor (let i = 0; i < potentialTargets.length; i++) {\\n\\t\\t\\tif (serverExists(potentialTargets[i]) && ns.hasRootAccess(potentialTargets[i]) && (ns.getServerRequiredHackingLevel(potentialTargets[i]) <= ns.getHackingLevel())) {\\n\\t\\t\\t\\ttargets.push(servers[i]);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tlet allServers = ns.scan();\\n\\tlet myServers = [];\\n\\n\\n\\tfor (let i = 0; i < allServers.length; i++) {\\n\\t\\tlet server = allServers[i];\\n\\n\\t\\tif (server.startsWith(\\\"pserv\\\")) {\\n\\t\\t\\tmyServers.push(server);\\n\\t\\t}\\n\\t}\\n\\n\\n\\tns.tprint(\\\"targets = \\\" + targets);\\n\\tns.tprint(\\\"my servers = \\\" + myServers);\\n\\n\\tfor (let i = 0; i < myServers.length; i++) {\\n\\t\\tlet server = myServers[i];\\n\\t\\tns.tprint(\\\"current server = \\\" + server);\\n\\t\\tns.killall(server);\\n\\t\\tawait ns.sleep(10000);\\n\\t\\tlet freeRam = ns.getServerMaxRam(server) - ns.getServerUsedRam(server);\\n\\t\\tlet threads = Math.floor(freeRam / scriptRam / targets.length);\\n\\t\\tif (threads < 1) { threads = 1; }\\n\\t\\tns.tprint(\\\"freeRam:\\\" + freeRam + \\\" ; scriptRam:\\\" + scriptRam + \\\" ; threads to use:\\\" + threads);\\n\\t\\tawait ns.scp(script, \\\"home\\\", server);\\n\\t\\tfor (let c = 0; c < targets.length; c++) {\\n\\t\\t\\tlet target = targets[c];\\n\\t\\t\\tif (!target == \\\" \\\") {\\n\\t\\t\\t\\tns.tprint(\\\"Running \\\" + script + \\\" \\\" + target + \\\" on \\\" + server + \\\"with \\\" + threads + \\\" threads\\\");\\n\\t\\t\\t\\tns.exec(script, server, threads, target);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tawait ns.sleep(1000)\\n\\t}\\n\\tawait ns.sleep(100000)\\n}\",\"filename\":\"updateServerScripts.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"updateServerScripts.js\",\"url\":\"blob:file:///c0019136-34ad-4e5c-a929-04a2950b0845\"}],\"ramUsage\":4.7,\"server\":\"home\",\"_hash\":\"22677be906b1ba3fa3e190463e5951d548e30eb6edd2ac1054ea75d35752e30c\",\"moduleSequenceNumber\":78}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/*\\nName: purchaseServers.js \\nLast updated: 2022-01-02-1741\\n*/\\nexport async function main(ns) {\\n    let script = \\\"autoHack.js\\\";\\n    // How much RAM each purchased server will have. In this case, it'll\\n    // be 8GB.\\n    let ram = 8;\\n \\n    // Iterator we'll use for our loop\\n \\n    let purchaseLimit = ns.getPurchasedServerLimit();\\n    ns.tprint(\\\"purchased server limit: \\\" + purchaseLimit);\\n    let allServers = ns.scan();\\n \\n    let serverCount = 0;\\n    //let targets = []\\n    //ns.tprint(\\\"length: \\\"+targets.length)\\n    for (let i = 0; i < allServers.length; i++) {\\n        let server = allServers[i];\\n        //ns.tprint(\\\"servername \\\"+server);\\n        if (server.startsWith(\\\"pserv\\\")) {\\n            ++serverCount;\\n        }\\n        //else{\\n        // targets = targets +\\\" \\\"+ server;\\n        //}\\n        ns.tprint(\\\"servers owned: \\\" + serverCount);\\n        //   ns.tprint(\\\"targets: \\\"+ targets);\\n    }\\n \\n \\n    ns.tprint(\\\"servers owned: \\\" + serverCount);\\n \\n    // Continuously try to purchase servers until we've reached the maximum\\n    // amount of servers\\n    while (serverCount < purchaseLimit) {\\n        // Check if we have enough money to purchase a server\\n        if (ns.getServerMoneyAvailable(\\\"home\\\") / 2 > ns.getPurchasedServerCost(ram)) {\\n            ns.print(ns.getServerMoneyAvailable(\\\"home\\\") / 2 + \\\">\\\" + ns.getPurchasedServerCost(ram));\\n            // If we have enough money, then:\\n            //  1. Purchase the server\\n            //  2. Copy our hacking script onto the newly-purchased server\\n            //  3. Run our hacking script on the newly-purchased server with 3 threads\\n            //  4. Increment our iterator to indicate that we've bought a new server\\n            let hostname = ns.purchaseServer(\\\"pserv-\\\" + serverCount, ram);\\n            ns.print(\\\"purchased \\\" + hostname);\\n            await ns.scp(script, hostname);\\n            //    await ns.scp(\\\"copyRun_autoHack.js\\\", hostname);\\n            //ns.exec(\\\"copyRun_autoHack.js \\\" + targets, hostname, 1);\\n            ns.exec(script, hostname, 1, \\\"joesguns\\\");\\n            ++serverCount;\\n        }\\n        await ns.sleep(1000);\\n    }\\n \\n    // Continuously try to upgrade servers \\n    allServers = ns.scan();\\n    let myServers = [];\\n    for (let i = 0; i < allServers.length; i++) {\\n        let server = allServers[i];\\n        if (server.startsWith(\\\"pserv\\\")) {\\n            myServers.push(server);\\n        }\\n    }\\n \\n    ns.tprint(\\\"checking servers for upgrades: \\\" + myServers);\\n    let maxRam = ns.getPurchasedServerMaxRam();\\n \\n    for (let i = 0; i < myServers.length; i++) {\\n        let server = myServers[i];\\n        let upgradedServer = 0;\\n        ns.tprint(\\\"current server = \\\" + server);\\n \\n        let serverSize = ns.getServerMaxRam(server);\\n        ns.tprint(\\\"serverSize = \\\" + serverSize);\\n        let myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n        ns.tprint(\\\"myMoney = \\\" + myMoney);\\n        for (ram = maxRam; ram > serverSize; ram = ram / 2) {\\n            if ((myMoney / 2) > ns.getPurchasedServerCost(ram)) {\\n                ns.tprint(\\\"cost of server with ram \\\" + ram + \\\": \\\" + ns.getPurchasedServerCost(ram));\\n                ns.tprint((myMoney / 2) + \\\" > \\\" + ns.getPurchasedServerCost(ram));\\n                // let killed = false;\\n                // while (killed != true) {\\n                //     killed = ns.killall(server);\\n                //     //await ns.sleep(500000);\\n                // }\\n                ns.killall(server);\\n                await ns.sleep(10000);\\n                ns.deleteServer(server);\\n                ns.purchaseServer(server, ram);\\n                ns.tprint(server + \\\" upgraded from \\\" + serverSize + \\\" to \\\" + ram);\\n                await ns.scp(script, server);\\n                ns.exec(script, server, ns.getServerMaxRam(server) / 3, \\\"joesguns\\\");\\n                upgradedServer = 1;\\n                break;\\n            }\\n        }\\n \\n        if (upgradedServer != 1) {\\n            ns.tprint(\\\"cannot afford upgrading \\\" + server + \\\" (current RAM: \\\" + serverSize + \\\" current money: \\\" + myMoney + \\\" next upgrade cost\\\" + \\\"(for \\\" + serverSize * 2 + \\\"ram)\\\" + \\\": \\\" + ns.getPurchasedServerCost(serverSize * 2));\\n        }\\n \\n        // if (upgradedServer == 1) {\\n        //     let killed = false;\\n        //     while (killed != true) {\\n        //         killed = ns.killall(server);\\n        //         ns.killall(server);\\n        //         await ns.sleep(500000);\\n        //     }\\n \\n    }\\n    await ns.sleep(1000);\\n}\",\"filename\":\"purchaseServers.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"purchaseServers.js\",\"url\":\"blob:file:///a8cd9821-4a2d-48ef-8c35-81b76907953d\"}],\"ramUsage\":9.2,\"server\":\"home\",\"_hash\":\"1e5a318258ac9cfae83bb85d4582bc445ee2e9bb5a6ebe0d34fa8cdf7dbc940d\",\"moduleSequenceNumber\":79}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n    let script = \\\"autoHack.js\\\"; //to run early on (targetting joesguns) while purchasing each server\\n    let postScript = \\\"updateServerScripts.js\\\"; //to run after complete purchases/upgrades\\n    let targets = [];\\n\\n    // Start other scripts\\n    ns.exec(\\\"purchase-server-8gb\\\", \\\"home\\\", 1);\\n\\n    // Array of all servers that don't need any ports opened\\n    // to gain root access. These have 16 GB of RAM\\n    let servers0Port = [\\\"joesguns\\\", \\\"n00dles\\\", \\\"foodnstuff\\\", \\\"sigma-cosmetics\\\", \\\"nectar-net\\\", \\\"hong-fang-tea\\\", \\\"harakiri-sushi\\\"];\\n\\n    // Array of all servers that only need 1 port opened\\n    // to gain root access. These have 32 GB of RAM\\n    let servers1Port = [\\\"neo-net\\\", \\\"zer0\\\", \\\"max-hardware\\\", \\\"iron-gym\\\", \\\"CSEC\\\"];\\n\\n    // Array of all servers that only need 2 port opened\\n    // to gain root access. \\n    let servers2Port = [\\\"omega-net\\\", \\\"silver-helix\\\", \\\"phantasy\\\", \\\"crush-fitness\\\", \\\"the-hub\\\", \\\"avmnite-02h\\\", \\\"johnson-ortho\\\"];\\n\\n    let servers3Port = [\\\"netlink\\\", \\\"catalyst\\\", \\\"comptek\\\", \\\"summit-uni\\\", \\\"rothman-uni\\\", \\\"millenium-fitness\\\", \\\"I.I.I.I\\\", \\\"rho-construction\\\"];\\n\\n    let servers4Port = [\\\"syscore\\\", \\\"lexo-corp\\\", \\\"aevum-police\\\", \\\"zb-def\\\", \\\"nova-med\\\", \\\"unitalife\\\", \\\"univ-energy\\\", \\\"alpha-ent\\\", \\\"global-pharm\\\", \\\"snap-fitness\\\"];\\n    let servers5Port = [\\\"zb-institute\\\", \\\"galactic-cyber\\\", \\\"omnia\\\", \\\"icarus\\\", \\\"taiyang-digital\\\", \\\"zeus-med\\\", \\\"infocomm\\\", \\\"aerocorp\\\", \\\"defcomm\\\", \\\"solaris\\\", \\\"deltaone\\\"];\\n\\n\\n    // Copy our scripts onto each server that requires 0 ports\\n    // to gain root access. Then use nuke() to gain admin access and\\n    // run the scripts.\\n    for (let i = 0; i < servers0Port.length; ++i) {\\n        let serv = servers0Port[i];\\n        //targets.push(serv);\\n        targets = targets + \\\" \\\" + serv;\\n\\n        await ns.scp(script, serv);\\n        ns.nuke(serv);\\n        ns.exec(script, serv, 6);\\n    }\\n\\n    // Wait until we acquire the \\\"BruteSSH.exe\\\" program\\n    while (!ns.fileExists(\\\"BruteSSH.exe\\\")) {\\n        await ns.sleep(60000);\\n    }\\n\\n    // Copy our scripts onto each server that requires 1 port\\n    // to gain root access. Then use brutessh() and nuke()\\n    // to gain admin access and run the scripts.\\n    for (let i = 0; i < servers1Port.length; ++i) {\\n        let serv = servers1Port[i];\\n        //targets.push(serv);\\n        targets = targets + \\\" \\\" + serv;\\n\\n        await ns.scp(script, serv);\\n        ns.brutessh(serv);\\n        ns.nuke(serv);\\n        ns.exec(script, serv, 12);\\n    }\\n\\n    ns.exec(postScript, \\\"home\\\", 1, targets);\\n\\n    // Wait until we acquire the \\\"BruteSSH.exe\\\" program\\n    while (!ns.fileExists(\\\"FTPCrack.exe\\\")) {\\n        await ns.sleep(60000);\\n    }\\n\\n\\n\\n    // Copy our scripts onto each server that requires 2 port\\n    // to gain root access. Then use ftpcrack(), brutessh() and nuke()\\n    // to gain admin access and run the scripts.\\n    for (let i = 0; i < servers2Port.length; ++i) {\\n        let serv = servers2Port[i];\\n        //targets.push(serv);\\n        targets = targets + \\\" \\\" + serv;\\n\\n        await ns.scp(script, serv);\\n        ns.ftpcrack(serv);\\n        ns.brutessh(serv);\\n        ns.nuke(serv);\\n        ns.exec(script, serv, 12);\\n    }\\n\\n    ns.exec(postScript, \\\"home\\\", 1, targets);\\n\\n\\n    // Wait until we acquire the \\\"BruteSSH.exe\\\" program\\n    while (!ns.fileExists(\\\"relaySMTP.exe\\\")) {\\n        await ns.sleep(60000);\\n    }\\n\\n\\n    // Copy our scripts onto each server that requires 3 port\\n    for (let i = 0; i < servers3Port.length; ++i) {\\n        let serv = servers3Port[i];\\n        targets = targets + \\\" \\\" + serv;\\n\\n        await ns.scp(script, serv);\\n        ns.ftpcrack(serv);\\n        ns.brutessh(serv);\\n        ns.relaysmtp(serv);\\n        ns.nuke(serv);\\n        ns.exec(script, serv, 12);\\n    }\\n\\n    ns.exec(postScript, \\\"home\\\", 1, targets);\\n\\n    // Wait until we acquire the \\\"BruteSSH.exe\\\" program\\n    while (!ns.fileExists(\\\"HTTPWorm.exe\\\")) {\\n        await ns.sleep(60000);\\n    }\\n\\n    // Copy our scripts onto each server that requires 4 port\\n    for (let i = 0; i < servers4Port.length; ++i) {\\n        let serv = servers4Port[i];\\n        targets = targets + \\\" \\\" + serv;\\n\\n        await ns.scp(script, serv);\\n        ns.ftpcrack(serv);\\n        ns.brutessh(serv);\\n        ns.relaysmtp(serv);\\n        ns.httpworm(serv);\\n        ns.nuke(serv);\\n        ns.exec(script, serv, 12);\\n    }\\n\\n    ns.exec(postScript, \\\"home\\\", 1, targets);\\n\\n}\",\"filename\":\"startup.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"startup.js\",\"url\":\"blob:file:///4cba4ba5-ce34-4c35-a43c-33f5a052125c\"}],\"ramUsage\":3.85,\"server\":\"home\",\"_hash\":\"5ddc9e46ba056ce204156acb423ed83845b4bac507fa5cbc11af1f4f46875457\",\"moduleSequenceNumber\":80}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\n/*recursive code credit: milonti on reddit https://www.reddit.com/r/Bitburner/comments/9uuh3u/recursive_variables/ */\\nexport async function main(ns) {\\n\\tlet scanned = [];\\n\\tfunction recursive(host) {\\n\\t\\tscanned.push(host);\\n\\t\\tlet newScan = ns.scan(host);\\n\\t\\tfor (let x = 0; x < newScan.length; x++) {\\n\\t\\t\\tif (scanned.includes(newScan[x])) continue;\\n\\t\\t\\t//Insert recursing code below\\n\\t\\t\\tif (ns.getServerMaxMoney(host) > 0) {\\n\\t\\t\\t\\tns.tprint(\\\"server: \\\" + host + \\\" ; maxMoney: \\\" + ns.getServerMaxMoney(host));\\n\\t\\t\\t}\\n\\t\\t\\t//Insert recursing code above\\n\\t\\t\\trecursive(newScan[x])\\n\\t\\t}\\n\\t}\\n\\trecursive('home');\\n}\",\"filename\":\"recursiveScan.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"recursiveScan.js\",\"url\":\"blob:file:///1b91e9ff-231a-48de-950a-6d85bf4898a0\"}],\"ramUsage\":1.9,\"server\":\"home\",\"_hash\":\"7ee2cca68833127f497e21d9e734303eae6d29dd16d1f3af89d10a2856323d02\",\"moduleSequenceNumber\":81}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nscript: hostsetup.js\\nlast updated: 2022-01-05 0128\\n*/\\nexport async function main(ns) {\\n\\tlet host = \\\"home\\\";\\n\\tif (ns.args.length > 0) {\\n\\t\\thost = ns.args[0];\\n\\t\\tawait ns.scp(\\\"autoHack.js\\\", \\\"home\\\", host);\\n\\t}\\n\\tlet servers0Port = [\\\"joesguns\\\", \\\"n00dles\\\", \\\"foodnstuff\\\", \\\"sigma-cosmetics\\\", \\\"nectar-net\\\", \\\"hong-fang-tea\\\", \\\"harakiri-sushi\\\"];\\n\\tlet servers1Port = [\\\"neo-net\\\", \\\"zer0\\\", \\\"max-hardware\\\", \\\"iron-gym\\\", \\\"CSEC\\\"];\\n\\tlet servers2Port = [\\\"omega-net\\\", \\\"silver-helix\\\", \\\"phantasy\\\", \\\"crush-fitness\\\", \\\"the-hub\\\", \\\"avmnite-02h\\\", \\\"johnson-ortho\\\"];\\n\\tlet servers3Port = [\\\"netlink\\\", \\\"catalyst\\\", \\\"comptek\\\", \\\"summit-uni\\\", \\\"rothman-uni\\\", \\\"millenium-fitness\\\", \\\"I.I.I.I\\\", \\\"rho-construction\\\"];\\n\\tlet servers4Port = [\\\"syscore\\\", \\\"lexo-corp\\\", \\\"aevum-police\\\", \\\"zb-def\\\", \\\"nova-med\\\", \\\"unitalife\\\", \\\"univ-energy\\\", \\\"alpha-ent\\\", \\\"global-pharm\\\", \\\"snap-fitness\\\"];\\n\\tlet servers5Port = [\\\"zb-institute\\\", \\\"galactic-cyber\\\", \\\"omnia\\\", \\\"icarus\\\", \\\"taiyang-digital\\\", \\\"zeus-med\\\", \\\"infocomm\\\", \\\"aerocorp\\\", \\\"defcomm\\\", \\\"solaris\\\", \\\"deltaone\\\"];\\n\\tlet servers = servers5Port.concat(servers4Port).concat(servers3Port).concat(servers2Port).concat(servers1Port).concat(servers0Port);\\n\\tlet hackableServers = [];\\n\\n\\tlet test = ns.getScriptRam(\\\"autoHack.js\\\");\\n\\tns.tprint(test);\\n\\n\\tfor (let i = 0; i < servers.length; i++) {\\n\\t\\ttry {\\n\\t\\t\\t//if(servers[i]!=\\\"\\\"){\\n\\t\\t\\tns.exec(\\\"autoHack.js\\\", host, 1, servers[i]);\\n\\t\\t\\tns.kill(\\\"autoHack.js\\\", host, servers[i]);\\n\\t\\t\\tif (ns.hasRootAccess(servers[i]) && ns.getServerRequiredHackingLevel(servers[i]) <= ns.getHackingLevel()) {\\n\\t\\t\\t\\thackableServers.push(servers[i]);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tcatch (e) {\\n\\t\\t\\tns.tprint(\\\"unhackable server discovered \\\" + servers[i] + \\\"error: \\\" + e);\\n\\t\\t}\\n\\t}\\n\\n\\tlet threads = (ns.getServerMaxRam(host) - ns.getServerUsedRam(host)) / ns.getScriptRam(\\\"autoHack.js\\\") / hackableServers.length;\\n\\tif (threads < 1) { threads = 1; }\\n\\tns.tprint(\\\"threads for each run: \\\" + threads);\\n\\tns.tprint(\\\"hackable: \\\" + hackableServers);\\n\\n\\tfor (let i = 0; i < hackableServers.length; i++) {\\n\\t\\ttry {\\n\\t\\t\\tns.exec(\\\"autoHack.js\\\", host, threads, hackableServers[i]);\\n\\t\\t}\\n\\t\\tcatch (e) {\\n\\t\\t\\tns.tprint(\\\"error attempting to hack 'hackable' server: \\\" + hackableServers[i] + \\\"error: \\\" + e);\\n\\t\\t}\\n\\t}\\n\\tawait ns.sleep(30000);\\n}\",\"filename\":\"hostsetup.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hostsetup.js\",\"url\":\"blob:file:///2b31265f-fef8-4bf4-83d0-82bf723adf29\"}],\"ramUsage\":4.4,\"server\":\"home\",\"_hash\":\"5e1e5b06fc9ba31e7927852998a525a0a57c8e393af4912c676e39c52547ccac\",\"moduleSequenceNumber\":82}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* base code credit: pwillia7 with modifications by JKelsey: https://www.reddit.com/r/Bitburner/comments/rkd3mu/stocksns_basic_stock_market_setup/hpmg8b7/*/\\n\\nexport async function main(ns) {\\n    //*********PARAMS FOR SCRIPT ************//\\n    var maxSharePer = 0.45                  // maximum percent of a symbol's total stock to buy\\n    var stockBuyPer = 0.6                  //  percent probablity to buy symbol\\n    var stockVolPer = .03                 //   percent stock will move to buy\\n    var moneyKeep = 1000000000           //    min money to keep on hand\\n    var minSharePer = 5                 //     min shares to buy\\n    var orderMax = 1000000000000           //      max money to spend on a single order\\n    var profPer = 0.05                //       min profit percentage to sell\\n    var panicPer = 0.15              //        percentage loss to panic sell at\\n    //******************************//\\n    while (true) {\\n        ns.disableLog('disableLog');\\n        ns.disableLog('sleep');\\n        ns.disableLog('getServerMoneyAvailable')\\n        var stocks = ns.stock.getSymbols();\\n        for (const stock of stocks) {\\n            var position = ns.stock.getPosition(stock)\\n            var forecast = ns.stock.getForecast(stock);\\n            if (position[0]) {\\n                ns.print('Position: ' + stock + \\\", \\\" + position[0] + \\\" Profit: \\\" + ns.nFormat(Math.round(ns.stock.getSaleGain(stock, position[0], \\\"Long\\\") - (position[0] * position[1])), '0,0', \\\"Long\\\") + ' % ' + ns.nFormat(ns.stock.getSaleGain(stock, position[0], \\\"Long\\\") / (position[0] * position[1]), \\\"0%\\\"));\\n                sellPositions(stock);\\n            }\\n            buyPositions(stock);\\n \\n        }\\n        await ns.sleep(6000);\\n    }\\n    function sellPositions(stock) {\\n        //sell if only 40% chance increase\\n\\t\\tif (ns.stock.getForecast(stock) < 0.4) {\\n\\t\\t\\t//sell stock\\n            ns.toast(\\\"SOLD STOCK \\\" + stock + \\\" for \\\" + ns.nFormat(Math.round(ns.stock.getSaleGain(stock, position[0], \\\"Long\\\") - (position[0] * position[1])), '0,0') + \\\" profit!\\\");\\n            ns.stock.sell(stock, position[0]);\\n\\t\\t}     \\n    }\\n \\n    function buyPositions(stock) {\\n        var maxShares = (ns.stock.getMaxShares(stock) * maxSharePer) - position[0];\\n        var askPrice = ns.stock.getAskPrice(stock);\\n        var forecast = ns.stock.getForecast(stock);\\n        var volPer = ns.stock.getVolatility(stock);\\n        var minBuy = 10000000;\\n        var playerMoney = ns.getServerMoneyAvailable('home');\\n        //if the stock will move positive by stockbuyper or more and it will grow stockvolper or more\\n        if (forecast >= stockBuyPer && volPer <= stockVolPer) {\\n            //check money for one share\\n            if (playerMoney - moneyKeep > ns.stock.getPurchaseCost(stock, minSharePer, \\\"Long\\\")) {\\n                var shares = Math.min((playerMoney - moneyKeep - 100000) / askPrice, orderMax / askPrice);\\n                if (shares * askPrice > minBuy) {\\n                    ns.stock.buy(stock, Math.min(shares, maxShares));\\n                }\\n            }\\n        }\\n    }\\n \\n}\",\"filename\":\"stocks.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"stocks.js\",\"url\":\"blob:file:///f5afb8f3-e994-465c-a555-fb1a27607933\"}],\"ramUsage\":23.7,\"server\":\"home\",\"_hash\":\"91815d771c77c158aa5623ce679706a09965e1af7bc9c9f0d7c1ab0f63416b12\",\"moduleSequenceNumber\":177,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"stock.getSymbols\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getPosition\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getForecast\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.getSaleGain\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.sell\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.getMaxShares\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getAskPrice\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getVolatility\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"stock.getPurchaseCost\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.buy\",\"cost\":2.5}]}}],\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"pserv-0\",\"pserv-1\",\"darkweb\",\"pserv-2\",\"pserv-3\",\"pserv-7\",\"pserv-20\",\"pserv-4\",\"pserv-5\",\"pserv-6\",\"pserv-8\",\"pserv-9\",\"pserv-10\",\"pserv-11\",\"pserv-12\",\"pserv-13\",\"pserv-15\",\"pserv-16\",\"pserv-17\",\"pserv-18\",\"pserv-19\",\"pserv-14\",\"pserv-21\",\"pserv-22\",\"pserv-23\",\"pserv-24\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":5.983999999991615,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-299068.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":717442654,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-557743.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"7610490238\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-581406.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"()())))(aa\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-412969-CyberSec.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":391184165,\"reward\":{\"name\":\"CyberSec\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-950802.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[8],[3,3],[6,8,6],[9,6,1,3],[2,2,8,1,5],[6,7,1,4,4,2],[4,7,3,9,1,8,3],[8,6,2,2,6,8,1,8],[3,6,4,3,9,9,1,4,6],[3,8,8,3,6,8,3,2,6,4],[7,7,1,1,5,3,3,9,9,1,5],[3,2,9,9,2,3,7,6,8,9,9,3]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"ecorp\",\"httpPortOpen\":false,\"ip\":\"44.3.8.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"clarkinc\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":48525661453,\"moneyMax\":1213141536325,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1069,\"serverGrowth\":99}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-804563.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[12,14],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-116715.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[10,7,8,45,17,28,6,15,47],[39,32,37,7,22,6,50,8,11]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-819275.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[18,20,27,40,41,16,49,33,32,26,19,4,16,28,50],[44,27,25,39,36,20,23,23,26,48,34,9,15,45,28],[21,2,35,16,41,13,3,19,38,5,43,3,29,14,3],[33,22,14,13,23,12,14,23,23,37,28,34,36,4,21],[20,23,15,50,44,46,48,47,11,6,37,14,42,12,13],[28,22,14,29,18,14,20,26,23,9,35,25,40,2,18],[36,50,46,46,33,30,4,18,12,11,26,3,19,43,29]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"megacorp\",\"httpPortOpen\":false,\"ip\":\"24.9.9.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":55868972954,\"moneyMax\":1396724323850,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1317,\"serverGrowth\":99}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-922231.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[10,182,21,98,118,189,47,189,14,157,72],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-586748.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[7,16],[8,14],[10,19],[15,22],[4,10],[21,24],[3,9],[9,16],[24,28],[23,31],[8,12],[18,21],[8,18],[22,29],[23,25],[11,19],[24,32]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-840056.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":702053152,\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"b-and-a\",\"httpPortOpen\":false,\"ip\":\"86.5.7.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnitek\",\"fulcrumassets\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":83,\"hackDifficulty\":83,\"minDifficulty\":28,\"moneyAvailable\":27697494242,\"moneyMax\":692437356050,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1056,\"serverGrowth\":69}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-817189-CarmichaelSecurity.cct\",\"type\":\"Array Jumping Game\",\"data\":[8,0,9,8,0,0,6,9,9,10,10,6,3,7,2,2,0,10,2,1,0,5,9],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"blade\",\"httpPortOpen\":false,\"ip\":\"48.3.0.7\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"4sigma\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":92,\"hackDifficulty\":92,\"minDifficulty\":31,\"moneyAvailable\":31572310236,\"moneyMax\":789307755900,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1124,\"serverGrowth\":74}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-207978.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[4,[22,46,172,24,25,170,93,161,163,110,186,191,85,86,193,106,87,73,54,54,17,39,57,125,116,88,107,152,68,66,143,43,46,184,165,127,4,81,10]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nwo\",\"httpPortOpen\":false,\"ip\":\"22.1.7.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnitek\",\"megacorp\",\"The-Cave\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":20466391826,\"moneyMax\":511659795650,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":957,\"serverGrowth\":77}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-498200.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[51,2,84,90,141,170,35,153,49,93,29,12,17,187,111,146,161,158,5,167,106,181,169,15,43,10,62,69,128,35,135,89,44,3,100,179,171,5,86,14,43,106,58,135,198,89,167],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-253625-CarmichaelSecurity.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"))(()a)((a()()a))))\",\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-778141-CarmichaelSecurity.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":261916599,\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"clarkinc\",\"httpPortOpen\":false,\"ip\":\"22.5.7.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\".\",\"ecorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":53,\"hackDifficulty\":53,\"minDifficulty\":18,\"moneyAvailable\":19834823591,\"moneyMax\":495870589775,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1054,\"serverGrowth\":54}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-372337.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,1,0,0],[0,0,0,0,1,0,0,0,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-647918-CarmichaelSecurity.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"22457005717\",8],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-45703.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[3],[7,5],[4,4,8],[6,9,9,7],[9,8,5,8,1],[6,6,8,1,3,5],[5,5,5,3,3,3,4],[2,8,2,5,8,8,9,5]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnitek\",\"httpPortOpen\":false,\"ip\":\"26.8.7.4\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"vitalife\",\"b-and-a\",\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":95,\"minDifficulty\":32,\"moneyAvailable\":18944376509,\"moneyMax\":473609412725,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":901,\"serverGrowth\":99}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-761249.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[21,24],[3,4],[8,16],[8,13],[14,17],[6,11],[10,19],[3,11],[10,13],[2,10],[6,15],[18,24],[25,31],[15,21],[24,30],[18,24],[3,10]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"4sigma\",\"httpPortOpen\":false,\"ip\":\"33.8.1.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"fulcrumtech\",\"blade\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":61,\"hackDifficulty\":61,\"minDifficulty\":20,\"moneyAvailable\":21947904077,\"moneyMax\":548697601925,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":966,\"serverGrowth\":79}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-123708.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[35],[6],[24],[21],[11],[34],[9],[20],[33],[7],[40]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-857612-CarmichaelSecurity.cct\",\"type\":\"Total Ways to Sum\",\"data\":98,\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"kuai-gong\",\"httpPortOpen\":false,\"ip\":\"39.1.3.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"helios\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":98,\"hackDifficulty\":98,\"minDifficulty\":33,\"moneyAvailable\":26526113030,\"moneyMax\":663152825750,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1177,\"serverGrowth\":93}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-173478-Sector-12.cct\",\"type\":\"Total Ways to Sum\",\"data\":50,\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":false,\"ip\":\"18.1.1.2\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"microdyne\",\"4sigma\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":1522712209,\"moneyMax\":38067805225,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1025,\"serverGrowth\":99}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-4964-CyberSec.cct\",\"type\":\"Total Ways to Sum\",\"data\":8,\"reward\":{\"name\":\"CyberSec\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":false,\"ip\":\"88.1.3.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"b-and-a\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":1000000,\"moneyMax\":25000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1330,\"serverGrowth\":1}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-347134.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[157,47,51,137,106,158,54,60,44],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"stormtech\",\"httpPortOpen\":false,\"ip\":\"52.4.7.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"applied-energetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":91,\"hackDifficulty\":91,\"minDifficulty\":30,\"moneyAvailable\":1031469439,\"moneyMax\":25786735975,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":888,\"serverGrowth\":76}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-345426.cct\",\"type\":\"Array Jumping Game\",\"data\":[8,2,8,4,10,1,0,9,10,7,6,0,2,5,5,4,0,1,9,5,8],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-813160-CarmichaelSecurity.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":534426026,\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-683064.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[12,9],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"defcomm\",\"httpPortOpen\":false,\"ip\":\"63.8.7.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":96,\"minDifficulty\":32,\"moneyAvailable\":808389171,\"moneyMax\":20209729275,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1030,\"serverGrowth\":63}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-498859.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[25,31,19,43,20,49,2,27,4,18,5],[35,17,15,18,38,45,29,22,8,50,19],[3,10,36,28,44,49,48,1,19,23,46],[27,44,12,41,12,13,43,25,5,27,30]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"infocomm\",\"httpPortOpen\":false,\"ip\":\"56.3.5.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zeus-med\",\"titan-labs\",\"run4theh111z\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":618093587,\"moneyMax\":15452339675,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":875,\"serverGrowth\":44}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-760821-CarmichaelSecurity.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":233781579,\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"helios\",\"httpPortOpen\":false,\"ip\":\"38.5.2.8\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"run4theh111z\",\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":88,\"hackDifficulty\":88,\"minDifficulty\":29,\"moneyAvailable\":705082421,\"moneyMax\":17627060525,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":813,\"serverGrowth\":79}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-826604-CyberSec.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"24923831\",\"reward\":{\"name\":\"CyberSec\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-327011-CarmichaelSecurity.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"5951\",30],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-786837-CarmichaelSecurity.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[51,70,110,111,173,99,169,81,157,167,43,121,198,161,64,124,67,43,74,23,123,86,37,194,104,60,74,10,42,137,37,167],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"vitalife\",\"httpPortOpen\":false,\"ip\":\"79.4.0.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"applied-energetics\",\"omnitek\",\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":82,\"minDifficulty\":27,\"moneyAvailable\":780442963,\"moneyMax\":19511074075,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":798,\"serverGrowth\":76}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-58927-Sector-12.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[45,122,64,134,53,194,75,58,87,3,16,90,123,182],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-258983.cct\",\"type\":\"Array Jumping Game\",\"data\":[9,7,7,9,0,9,0,10,2,6,0,9,8,9],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"icarus\",\"httpPortOpen\":false,\"ip\":\"10.1.6.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnia\",\"taiyang-digital\",\"zb-def\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":93,\"hackDifficulty\":93,\"minDifficulty\":31,\"moneyAvailable\":967113752,\"moneyMax\":24177843800,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":879,\"serverGrowth\":86}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-994887.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[1,-7,9,-4,0,-4,-2,1,-10,3,-7,2,-8],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-556254.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[139,186,177,188,20,157,74,2,66,149,28,31,189,193,165,128,144,24,19,58,91,183,161,149,97,30,91,192,99,7,164,168,9,102,54,151,119,154,54,17,94,195],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"univ-energy\",\"httpPortOpen\":true,\"ip\":\"63.2.0.1\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}],\"ramUsage\":2.45,\"server\":\"univ-energy\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":84}}],\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":28,\"minDifficulty\":28,\"moneyAvailable\":27702308525,\"moneyMax\":27702308525,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":802,\"serverGrowth\":83}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-660074-Sector-12.cct\",\"type\":\"Array Jumping Game\",\"data\":[3,3,1,0,2,6,3,10,0,7,3,3,0,3,6,0,1,0,4,5,0,0,8,8,9],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"titan-labs\",\"httpPortOpen\":false,\"ip\":\"43.0.6.0\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"infocomm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":70,\"hackDifficulty\":70,\"minDifficulty\":23,\"moneyAvailable\":784318505,\"moneyMax\":19607962625,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":857,\"serverGrowth\":72}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"microdyne\",\"httpPortOpen\":false,\"ip\":\"53.9.8.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zb-def\",\"fulcrumtech\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":73,\"minDifficulty\":24,\"moneyAvailable\":537815283,\"moneyMax\":13445382075,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":836,\"serverGrowth\":86}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-724448-CyberSec.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[12,26,14,35,39,11,22,50,13,37,37,39,32,18,40],[28,36,9,24,36,15,30,6,29,15,26,8,8,43,4],[26,7,44,23,26,40,37,28,2,40,36,7,4,3,20],[31,5,45,22,2,40,11,19,33,25,37,36,6,36,39],[37,46,7,41,46,11,45,17,9,30,21,11,15,9,9],[49,48,27,41,25,37,31,39,49,9,33,47,1,48,37],[20,32,35,7,48,20,20,16,30,15,16,30,5,49,42],[9,44,45,38,34,7,30,50,38,8,9,12,49,21,27]],\"reward\":{\"name\":\"CyberSec\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-72356-CarmichaelSecurity.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[8,9],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-12630.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-7,-5,9,-2,6,10,3,5,1,3,6,4,7,-2,-7,-6,2,7,-10,-4,0,-8,-1,6,-6,-7,1,10],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-509720-Sector-12.cct\",\"type\":\"Array Jumping Game\",\"data\":[0,2,0],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":false,\"ip\":\"29.0.6.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"icarus\",\"applied-energetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":847833679,\"moneyMax\":21195841975,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":924,\"serverGrowth\":78}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-628285-CarmichaelSecurity.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[116,59,146,68,177,16,54,104,171,140,145,180,10,42,158,192,115,140,36,131,60,76],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-774502.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[8],[7,9],[6,3,5]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-569351.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[132,13,152,192,132,188,149,149,156,143,16,82,151,65,51,149,159,16,18,3,84,129,86,102,105,117,41,162,35,149,191,48,63,115,58,127,81,22,117,20,46,148,162],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":false,\"ip\":\"34.2.0.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"rho-construction\",\"omnia\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":58,\"hackDifficulty\":58,\"minDifficulty\":19,\"moneyAvailable\":834378992,\"moneyMax\":20859474800,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":845,\"serverGrowth\":73}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-50909.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[2],[7,6],[6,7,2],[5,3,4,3],[8,4,4,2,3],[6,5,8,6,6,1],[2,3,6,6,1,7,2],[8,4,6,4,5,6,1,6],[1,1,2,6,7,4,1,1,3],[9,5,2,6,9,9,5,2,8,5],[6,5,7,8,4,8,6,1,7,5,7],[7,9,9,6,7,6,1,5,2,1,7,8]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-121628-CarmichaelSecurity.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[50,48,47,5],[11,19,24,32],[33,8,15,36]],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"aerocorp\",\"httpPortOpen\":false,\"ip\":\"41.4.9.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"rho-construction\",\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":1047133492,\"moneyMax\":26178337300,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":894,\"serverGrowth\":65}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-346600-Sector-12.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[127,91,121,165,61,10,28,18,114,77,54,44,183,172,199,158,30,40,122,102,120,108,190,48,6,25,159,186,68,134],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-496154-Sector-12.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[4,0,8,-10,-2,7,2,-1,4,5,5,-5,-9,-9,-3,1,-3,-4,3,-7,-2,9,9,-1,8,8,-8,-10,-8,9,8,4,10,-9,-6,2,8,1,0,4],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-463910-Sector-12.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[8,[174,31,125,136,66,179,127,182,49,198,188,185,101,86,81,107,144,108,184,32,124,112,15,69,26,170,101,147,110,55,140,33,109,197,67,40,98,169,88,165,117,39,190,109]],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnia\",\"httpPortOpen\":false,\"ip\":\"54.3.0.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"galactic-cyber\",\"icarus\",\"zeus-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":89,\"minDifficulty\":30,\"moneyAvailable\":951358234,\"moneyMax\":23783955850,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":871,\"serverGrowth\":66}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-557502.cct\",\"type\":\"Total Ways to Sum\",\"data\":15,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-882226.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"12786151118\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-43558.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"334316681124\",-13],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-120204-CarmichaelSecurity.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":763381194,\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-183429-CarmichaelSecurity.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0],[0,0,0,0,0],[0,0,0,1,0]],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-276645.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":77455516,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-def\",\"httpPortOpen\":true,\"ip\":\"1.5.8.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"ramUsage\":2.45,\"server\":\"zb-def\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":85}}],\"serversOnNetwork\":[\"icarus\",\"microdyne\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":58,\"hackDifficulty\":20.3,\"minDifficulty\":19,\"moneyAvailable\":24687795550,\"moneyMax\":24687795550,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":778,\"serverGrowth\":73}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-824675.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[8,24,29,32,49,8,30,19,27,50,18,36],[29,49,9,11,17,11,5,5,50,29,4,16],[31,25,42,23,24,25,38,7,2,49,5,50],[30,16,28,9,33,24,29,19,20,35,31,43],[15,31,19,15,41,6,20,25,45,49,35,13],[40,46,37,33,33,26,32,12,45,35,2,14]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-811871.cct\",\"type\":\"Array Jumping Game\",\"data\":[0,0,0,0,9,0,0,4,7,3,0,0,1,3,0,3,1,8,10],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-951891.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[2,7],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-934482-CyberSec.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[64,11,152,83,47,49,153,17,189,100,193,75,56,191],\"reward\":{\"name\":\"CyberSec\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-24917.cct\",\"type\":\"Array Jumping Game\",\"data\":[2,0,8,0,9,10,9,0,0,0,3,0,0,7],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"applied-energetics\",\"httpPortOpen\":false,\"ip\":\"66.2.9.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"taiyang-digital\",\"stormtech\",\"vitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":944078705,\"moneyMax\":23601967625,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":821,\"serverGrowth\":71}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-240318.cct\",\"type\":\"Total Ways to Sum\",\"data\":94,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"solaris\",\"httpPortOpen\":false,\"ip\":\"81.0.6.9\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":841094526,\"moneyMax\":21027363150,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":750,\"serverGrowth\":71}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-124368.cct\",\"type\":\"Total Ways to Sum\",\"data\":61,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"deltaone\",\"httpPortOpen\":false,\"ip\":\"21.2.7.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"global-pharm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":1463145712,\"moneyMax\":36578642800,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":802,\"serverGrowth\":53}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"global-pharm\",\"httpPortOpen\":true,\"ip\":\"69.5.6.2\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"ramUsage\":2.45,\"server\":\"global-pharm\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":86}}],\"serversOnNetwork\":[\"alpha-ent\",\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":81,\"hackDifficulty\":27,\"minDifficulty\":27,\"moneyAvailable\":38613351975,\"moneyMax\":38613351975,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":837,\"serverGrowth\":88}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-427924-CyberSec.cct\",\"type\":\"Array Jumping Game\",\"data\":[0,9,0,4],\"reward\":{\"name\":\"CyberSec\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nova-med\",\"httpPortOpen\":true,\"ip\":\"54.3.2.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"ramUsage\":2.45,\"server\":\"nova-med\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":87}}],\"serversOnNetwork\":[\"zeus-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":26,\"minDifficulty\":26,\"moneyAvailable\":31137361100,\"moneyMax\":31137361100,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":807,\"serverGrowth\":85}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zeus-med\",\"httpPortOpen\":false,\"ip\":\"70.0.0.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnia\",\"infocomm\",\"nova-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":1454599823,\"moneyMax\":36364995575,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":849,\"serverGrowth\":77}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-854430-CarmichaelSecurity.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[42,48,36,39,32,16,14,25,1],[34,42,47,42,40,46,17,31,13],[5,13,48,24,21,16,25,8,2],[11,11,10,31,10,12,43,33,8],[11,15,7,13,14,13,41,30,16],[37,34,14,9,46,35,50,1,29],[40,43,37,44,47,31,33,33,24],[29,14,3,35,25,6,33,41,34],[50,31,29,34,9,40,31,47,31],[13,20,27,26,9,17,14,2,35],[12,35,11,8,33,43,4,45,7],[40,16,8,17,34,31,22,6,14],[44,42,38,30,49,31,16,18,20]],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"unitalife\",\"httpPortOpen\":true,\"ip\":\"83.6.6.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}],\"ramUsage\":2.45,\"server\":\"unitalife\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":88}}],\"serversOnNetwork\":[\"aerocorp\",\"defcomm\",\"univ-energy\",\"solaris\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":28.940000000000005,\"minDifficulty\":24,\"moneyAvailable\":25671253125,\"moneyMax\":25671253125,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":808,\"serverGrowth\":80}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-339663-CarmichaelSecurity.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[7],[5,3],[7,6,8],[8,6,3,2],[8,4,3,1,9],[6,2,8,3,1,6],[1,9,9,3,9,1,7],[4,2,7,7,5,3,5,1],[6,5,1,4,1,1,5,2,7],[5,7,6,4,4,8,5,7,8,5],[5,5,2,5,1,7,3,7,2,1,6]],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lexo-corp\",\"httpPortOpen\":true,\"ip\":\"11.2.9.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"ramUsage\":2.45,\"server\":\"lexo-corp\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":89}}],\"serversOnNetwork\":[\"zb-institute\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":31.963999999999988,\"minDifficulty\":27,\"moneyAvailable\":19429501350,\"moneyMax\":19429501350,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":665,\"serverGrowth\":55}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-159765-CarmichaelSecurity.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[5,[35,126,97,3,176,171,49,131,20,121,136,188,38,101,42,53,178,59,96,169,9,110,133,29,133,69,145,103,150,144,156,27,170,101,20,24,70,53,184,196]],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-764008.cct\",\"type\":\"Total Ways to Sum\",\"data\":35,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-131999-Sector-12.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"21514241166\",\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":false,\"ip\":\"55.6.8.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"ramUsed\":14.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[7753546,3,6,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1335.441797762727,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.352,\"onlineExpGained\":435.2425509392449,\"onlineMoneyMade\":7753546,\"onlineRunningTime\":18746.61000003347,\"pid\":32,\"ramUsage\":2.45,\"server\":\"rho-construction\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[519676,2,13,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2162.8507547567606,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.36000000002,\"onlineExpGained\":557.0257477696783,\"onlineMoneyMade\":519676,\"onlineRunningTime\":18746.61000003347,\"pid\":33,\"ramUsage\":2.45,\"server\":\"rho-construction\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[20184895,4,11,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2053.5688505271664,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.367,\"onlineExpGained\":520.6584275460915,\"onlineMoneyMade\":20184895,\"onlineRunningTime\":18746.61000003347,\"pid\":34,\"ramUsage\":2.45,\"server\":\"rho-construction\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,3,10,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1981.1411105669192,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.375,\"onlineExpGained\":473.27271590907765,\"onlineMoneyMade\":0,\"onlineRunningTime\":18746.61000003347,\"pid\":35,\"ramUsage\":2.45,\"server\":\"rho-construction\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[7115,4,16,4]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2084.89655122143,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.385,\"onlineExpGained\":493.3680126319627,\"onlineMoneyMade\":7115,\"onlineRunningTime\":18746.61000003347,\"pid\":36,\"ramUsage\":2.45,\"server\":\"rho-construction\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,2,14,9]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2333.6934813289095,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.39299999998,\"onlineExpGained\":561.1484853969406,\"onlineMoneyMade\":0,\"onlineRunningTime\":18746.61000003347,\"pid\":37,\"ramUsage\":2.45,\"server\":\"rho-construction\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"rho-construction\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":183,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"I.I.I.I\",\"galactic-cyber\",\"aerocorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":53,\"hackDifficulty\":72.40099999999991,\"minDifficulty\":18,\"moneyAvailable\":925002175.9057286,\"moneyMax\":15456635625,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":512,\"serverGrowth\":60}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-561607-CyberSec.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[7,3,145,107,9,65,192,117,163,105,19,120,30,189,175,70,23,167,46,74,31,35,54,150,126,42,153,164,144,124,69,140,118,183,198,190,133,46,63,16,113,123,121,23,160,175,63],\"reward\":{\"name\":\"CyberSec\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"alpha-ent\",\"httpPortOpen\":true,\"ip\":\"88.6.1.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"ramUsed\":14.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[4956531,3,6,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1761.761923329576,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.4,\"onlineExpGained\":455.644545514522,\"onlineMoneyMade\":4956531,\"onlineRunningTime\":18707.010000033308,\"pid\":38,\"ramUsage\":2.45,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[8260633,4,12,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2048.6813883099417,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.406,\"onlineExpGained\":537.8179633638274,\"onlineMoneyMade\":8260633,\"onlineRunningTime\":18707.010000033308,\"pid\":39,\"ramUsage\":2.45,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[20720762,5,10,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2049.565728862316,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.416,\"onlineExpGained\":515.2908148909772,\"onlineMoneyMade\":20720762,\"onlineRunningTime\":18707.010000033308,\"pid\":40,\"ramUsage\":2.45,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,1,12,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2108.963133263483,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.421,\"onlineExpGained\":556.791430481268,\"onlineMoneyMade\":0,\"onlineRunningTime\":18707.010000033308,\"pid\":41,\"ramUsage\":2.45,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[48610,4,15,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1896.8577236833705,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.42899999997,\"onlineExpGained\":538.2196501439593,\"onlineMoneyMade\":48610,\"onlineRunningTime\":18707.010000033308,\"pid\":42,\"ramUsage\":2.45,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,3,16,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2391.102999169507,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.44100000002,\"onlineExpGained\":566.9937821198254,\"onlineMoneyMade\":0,\"onlineRunningTime\":18707.010000033308,\"pid\":43,\"ramUsage\":2.45,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"alpha-ent\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":189,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"I.I.I.I\",\"global-pharm\",\"snap-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":58,\"hackDifficulty\":24.376,\"minDifficulty\":19,\"moneyAvailable\":17619166300,\"moneyMax\":17619166300,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":543,\"serverGrowth\":60}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-946072.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[164,10,162,141,2,141,138,138,33,144,181,123,124,44,94,135,45,99,91,192,116,43,21,160,127,111,4,145,163,110,146,154,165,2,11,125,167,180,165,34,9,124,62,79,88,167,199,153,31],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"42.0.3.9\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"ramUsed\":63.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"aevum-police\":[333686844,120,612,396]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":62902.843506949444,\"offlineMoneyMade\":0,\"offlineRunningTime\":173524.55399999997,\"onlineExpGained\":29656.81912263394,\"onlineMoneyMade\":333686844,\"onlineRunningTime\":78480.60999966222,\"pid\":44,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":12,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[8837758,3,5,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1562.7143725196643,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.456,\"onlineExpGained\":442.0432157976706,\"onlineMoneyMade\":8837758,\"onlineRunningTime\":18700.81000003328,\"pid\":45,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[2428,2,13,4]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1686.0198232867199,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.461,\"onlineExpGained\":473.7920153443241,\"onlineMoneyMade\":2428,\"onlineRunningTime\":18700.81000003328,\"pid\":46,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[685825,1,12,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1797.5054362606593,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.468,\"onlineExpGained\":440.14423771937635,\"onlineMoneyMade\":685825,\"onlineRunningTime\":18700.81000003328,\"pid\":47,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[10,3,10,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1505.8817236916761,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.479,\"onlineExpGained\":480.2326087900935,\"onlineMoneyMade\":10,\"onlineRunningTime\":18700.81000003328,\"pid\":48,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[16769034,1,15,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1756.556151681718,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.487,\"onlineExpGained\":527.0067407659601,\"onlineMoneyMade\":16769034,\"onlineRunningTime\":18700.81000003328,\"pid\":49,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,4,15,9]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2493.0100453369987,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.492,\"onlineExpGained\":590.3749690113646,\"onlineMoneyMade\":0,\"onlineRunningTime\":18700.81000003328,\"pid\":50,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[5188634,5,16,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2284.451382782661,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.497,\"onlineExpGained\":589.8086214413494,\"onlineMoneyMade\":5188634,\"onlineRunningTime\":18700.81000003328,\"pid\":51,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[171842,1,12,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1313.4415943273098,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.504,\"onlineExpGained\":418.49736811624774,\"onlineMoneyMade\":171842,\"onlineRunningTime\":18700.81000003328,\"pid\":52,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[686561,2,12,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1031.507775886125,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.509,\"onlineExpGained\":402.28958371039687,\"onlineMoneyMade\":686561,\"onlineRunningTime\":18700.81000003328,\"pid\":53,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,139,0,61]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1184.31626218427,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.51499999998,\"onlineExpGained\":336.75,\"onlineMoneyMade\":0,\"onlineRunningTime\":18700.81000003328,\"pid\":54,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[320688,2,9,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1380.3294649592474,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.521,\"onlineExpGained\":367.74615229928423,\"onlineMoneyMade\":320688,\"onlineRunningTime\":18700.81000003328,\"pid\":55,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,11,39,34]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3865.9283662395933,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.53299999997,\"onlineExpGained\":987.9365454952282,\"onlineMoneyMade\":0,\"onlineRunningTime\":18700.81000003328,\"pid\":56,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[108,13,50,43]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4906.66533858835,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.54499999998,\"onlineExpGained\":1223.9839321523793,\"onlineMoneyMade\":108,\"onlineRunningTime\":18700.81000003328,\"pid\":57,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[4155870,37,90,75]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6435.809051430594,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.55800000002,\"onlineExpGained\":1672.3880812936734,\"onlineMoneyMade\":4155870,\"onlineRunningTime\":18700.81000003328,\"pid\":58,\"ramUsage\":2.45,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"aevum-police\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":204,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"zb-institute\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":69.01799999999992,\"minDifficulty\":24,\"moneyAvailable\":78696.94949568062,\"moneyMax\":5871712325,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":435,\"serverGrowth\":40}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-33606.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[61,58,16,97,160],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-828684-CarmichaelSecurity.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[37],[42],[27]],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":false,\"ip\":\"97.7.0.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"ramUsed\":63.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"rothman-uni\":[545248020,228,876,540]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":76405.58642541309,\"offlineMoneyMade\":0,\"offlineRunningTime\":328942.188,\"onlineExpGained\":32267.5901761356,\"onlineMoneyMade\":545248020,\"onlineRunningTime\":87287.80999955101,\"pid\":59,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":12,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[9589141,5,6,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1737.5341124410165,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.58199999997,\"onlineExpGained\":496.44853466507624,\"onlineMoneyMade\":9589141,\"onlineRunningTime\":18725.610000033383,\"pid\":60,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[9878365,2,13,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2048.622044467022,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.592,\"onlineExpGained\":537.8179633638274,\"onlineMoneyMade\":9878365,\"onlineRunningTime\":18725.610000033383,\"pid\":61,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[21626305,6,9,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2186.5385765713195,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.6,\"onlineExpGained\":499.1879769256342,\"onlineMoneyMade\":21626305,\"onlineRunningTime\":18725.610000033383,\"pid\":62,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[7,2,12,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1988.392238060297,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.606,\"onlineExpGained\":535.9117518382203,\"onlineMoneyMade\":7,\"onlineRunningTime\":18725.610000033383,\"pid\":63,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[143598,2,12,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1731.8559235290138,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.614,\"onlineExpGained\":493.3680126319627,\"onlineMoneyMade\":143598,\"onlineRunningTime\":18725.610000033383,\"pid\":64,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[5,3,13,9]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2308.3101321893064,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.61899999998,\"onlineExpGained\":555.3031886740558,\"onlineMoneyMade\":5,\"onlineRunningTime\":18725.610000033383,\"pid\":65,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[6566424,4,10,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1692.080908789188,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.624,\"onlineExpGained\":451.3318146681629,\"onlineMoneyMade\":6566424,\"onlineRunningTime\":18725.610000033383,\"pid\":66,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[43825,3,13,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1313.3738491264073,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.63,\"onlineExpGained\":418.49736811624774,\"onlineMoneyMade\":43825,\"onlineRunningTime\":18725.610000033383,\"pid\":67,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[9769409,9,9,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1132.6120231797283,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.636,\"onlineExpGained\":438.8613640477057,\"onlineMoneyMade\":9769409,\"onlineRunningTime\":18725.610000033383,\"pid\":68,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,135,0,63]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1220.6153580192538,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.643,\"onlineExpGained\":333.75,\"onlineMoneyMade\":0,\"onlineRunningTime\":18725.610000033383,\"pid\":69,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[8804261,7,9,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1580.2816840018293,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.652,\"onlineExpGained\":457.1979190747859,\"onlineMoneyMade\":8804261,\"onlineRunningTime\":18725.610000033383,\"pid\":70,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[743,10,37,32]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3574.6402939424524,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.65899999999,\"onlineExpGained\":946.1020989433131,\"onlineMoneyMade\":743,\"onlineRunningTime\":18725.610000033383,\"pid\":71,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[28,12,45,43]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4690.593852179997,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.66700000002,\"onlineExpGained\":1167.4923660530387,\"onlineMoneyMade\":28,\"onlineRunningTime\":18725.610000033383,\"pid\":72,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[2085662,37,92,74]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6151.7933400066395,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.67399999994,\"onlineExpGained\":1655.9921197123629,\"onlineMoneyMade\":2085662,\"onlineRunningTime\":18725.610000033383,\"pid\":73,\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"rothman-uni\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":219,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"johnson-ortho\",\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":51,\"hackDifficulty\":66.55499999999995,\"minDifficulty\":17,\"moneyAvailable\":482156.0453829426,\"moneyMax\":4598908375,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":419,\"serverGrowth\":36}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-672828.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"46779738\",-92],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-690684.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[9,17],[15,21],[17,26],[20,27],[11,13],[21,28],[9,16],[18,28],[6,12],[13,19],[7,11],[12,15],[12,14],[14,20],[21,29],[17,21],[14,20],[10,14],[3,10]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zb-institute\",\"httpPortOpen\":false,\"ip\":\"82.2.6.3\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"the-hub\",\"lexo-corp\",\"aevum-police\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":67,\"hackDifficulty\":67,\"minDifficulty\":22,\"moneyAvailable\":882496013,\"moneyMax\":22062400325,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":735,\"serverGrowth\":82}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-245404-Aevum.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[124,52,159],\"reward\":{\"name\":\"Aevum\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":false,\"ip\":\"12.8.8.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"ramUsed\":14.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[5245280,3,6,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1819.430418442064,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.68,\"onlineExpGained\":455.644545514522,\"onlineMoneyMade\":5245280,\"onlineRunningTime\":18721.210000033367,\"pid\":74,\"ramUsage\":2.45,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[2576815,3,12,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2073.600939942459,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.68599999996,\"onlineExpGained\":537.8179633638274,\"onlineMoneyMade\":2576815,\"onlineRunningTime\":18721.210000033367,\"pid\":75,\"ramUsage\":2.45,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[30414411,5,9,9]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1847.642595981726,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.693,\"onlineExpGained\":526.0260402012059,\"onlineMoneyMade\":30414411,\"onlineRunningTime\":18721.210000033367,\"pid\":76,\"ramUsage\":2.45,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,3,10,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1981.2283314730646,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.699,\"onlineExpGained\":473.27271590907765,\"onlineMoneyMade\":0,\"onlineRunningTime\":18721.210000033367,\"pid\":77,\"ramUsage\":2.45,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[15969439,7,12,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1918.4816760923534,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.70500000002,\"onlineExpGained\":493.3680126319627,\"onlineMoneyMade\":15969439,\"onlineRunningTime\":18721.210000033367,\"pid\":78,\"ramUsage\":2.45,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,2,14,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2099.8805982797344,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.71099999998,\"onlineExpGained\":467.6237378307839,\"onlineMoneyMade\":0,\"onlineRunningTime\":18721.210000033367,\"pid\":79,\"ramUsage\":2.45,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"summit-uni\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":225,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"comptek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":55,\"hackDifficulty\":70.2571249999999,\"minDifficulty\":18,\"moneyAvailable\":2769926.743920795,\"moneyMax\":5597604975,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":467,\"serverGrowth\":51}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-494109.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"2717718101\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-443067-CarmichaelSecurity.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[4],[2,5],[4,9,9]],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"syscore\",\"httpPortOpen\":true,\"ip\":\"80.2.6.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"ramUsage\":2.45,\"server\":\"syscore\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":95}}],\"serversOnNetwork\":[\"crush-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":32.192,\"minDifficulty\":25,\"moneyAvailable\":11177810450,\"moneyMax\":11177810450,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":587,\"serverGrowth\":65}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":false,\"ip\":\"69.4.7.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"ramUsed\":31.85,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"catalyst\":[1370009328,252,792,516]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":77998.54630490912,\"offlineMoneyMade\":0,\"offlineRunningTime\":328942.338,\"onlineExpGained\":35118.83217189337,\"onlineMoneyMade\":1370009328,\"onlineRunningTime\":87287.80999955101,\"pid\":80,\"ramUsage\":2.45,\"server\":\"catalyst\",\"threads\":12,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[4210345,3,6,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1644.2110140385873,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.72299999997,\"onlineExpGained\":455.644545514522,\"onlineMoneyMade\":4210345,\"onlineRunningTime\":18712.61000003333,\"pid\":81,\"ramUsage\":2.45,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"catalyst\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":227,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"netlink\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":61,\"hackDifficulty\":20,\"minDifficulty\":20,\"moneyAvailable\":7882123.113318777,\"moneyMax\":12684213600,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":400,\"serverGrowth\":55}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-37686-CarmichaelSecurity.cct\",\"type\":\"Total Ways to Sum\",\"data\":66,\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-958893.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":890436275,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-489453-CarmichaelSecurity.cct\",\"type\":\"Array Jumping Game\",\"data\":[0,4,7,0,4,1,9,0,9,5,0,9,8],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":false,\"ip\":\"38.7.1.7\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[13824000,7,5,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1661.511537280233,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.72800000003,\"onlineExpGained\":530.4518589572048,\"onlineMoneyMade\":13824000,\"onlineRunningTime\":18773.410000033582,\"pid\":82,\"ramUsage\":2.45,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[1224755,3,15,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2302.2428884169117,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.739,\"onlineExpGained\":608.246506185281,\"onlineMoneyMade\":1224755,\"onlineRunningTime\":18773.410000033582,\"pid\":83,\"ramUsage\":2.45,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[9271214,2,10,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1918.1394657075923,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.74699999997,\"onlineExpGained\":456.24707568471945,\"onlineMoneyMade\":9271214,\"onlineRunningTime\":18773.410000033582,\"pid\":84,\"ramUsage\":2.45,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"the-hub\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":230,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"omega-net\",\"zb-institute\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":42,\"hackDifficulty\":14,\"minDifficulty\":14,\"moneyAvailable\":4306533600,\"moneyMax\":4306533600,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":317,\"serverGrowth\":52}},\"comptek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-134493-CyberSec.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\")((())a\",\"reward\":{\"name\":\"CyberSec\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"comptek\",\"httpPortOpen\":false,\"ip\":\"25.8.3.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"ramUsage\":2.45,\"server\":\"comptek\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":98}}],\"serversOnNetwork\":[\"phantasy\",\"summit-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":64,\"hackDifficulty\":67.26099999999988,\"minDifficulty\":21,\"moneyAvailable\":8092556.413284892,\"moneyMax\":6123988575,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":366,\"serverGrowth\":65}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":false,\"ip\":\"53.1.6.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"ramUsed\":14.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[5544634,3,6,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1728.437992667729,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.755,\"onlineExpGained\":435.2425509392449,\"onlineMoneyMade\":5544634,\"onlineRunningTime\":18709.410000033316,\"pid\":85,\"ramUsage\":2.45,\"server\":\"netlink\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[1690137,2,12,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2073.6416793750022,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.762,\"onlineExpGained\":537.8179633638274,\"onlineMoneyMade\":1690137,\"onlineRunningTime\":18709.410000033316,\"pid\":86,\"ramUsage\":2.45,\"server\":\"netlink\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[10247817,2,10,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1799.9508456805836,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.766,\"onlineExpGained\":461.6146883398337,\"onlineMoneyMade\":10247817,\"onlineRunningTime\":18709.410000033316,\"pid\":87,\"ramUsage\":2.45,\"server\":\"netlink\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,1,11,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2105.768992438652,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.77499999997,\"onlineExpGained\":528.9518589572044,\"onlineMoneyMade\":0,\"onlineRunningTime\":18709.410000033316,\"pid\":88,\"ramUsage\":2.45,\"server\":\"netlink\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[48673,4,13,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1867.2819540411951,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.78100000005,\"onlineExpGained\":487.7615579429631,\"onlineMoneyMade\":48673,\"onlineRunningTime\":18709.410000033316,\"pid\":89,\"ramUsage\":2.45,\"server\":\"netlink\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,2,16,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2592.1815798632474,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.78999999998,\"onlineExpGained\":590.3749690113646,\"onlineMoneyMade\":0,\"onlineRunningTime\":18709.410000033316,\"pid\":90,\"ramUsage\":2.45,\"server\":\"netlink\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"netlink\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":236,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"neo-net\",\"catalyst\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":75.50899999999993,\"minDifficulty\":26,\"moneyAvailable\":2488634.2784332936,\"moneyMax\":6875000000,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":381,\"serverGrowth\":62}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-35962-CarmichaelSecurity.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[156,138,165,62,66,139,66,32,189,72,120,84],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-59820.cct\",\"type\":\"Total Ways to Sum\",\"data\":21,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-378987.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[9,[138,175,118,101,98,91,58,123,173,181]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":false,\"ip\":\"50.4.8.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"ramUsage\":2.45,\"server\":\"johnson-ortho\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":100}}],\"serversOnNetwork\":[\"phantasy\",\"rothman-uni\",\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":58,\"hackDifficulty\":19,\"minDifficulty\":19,\"moneyAvailable\":5111788.593103607,\"moneyMax\":1818745600,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":269,\"serverGrowth\":36}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":false,\"ip\":\"28.9.0.9\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"ramUsed\":2.45,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"n00dles\":[202851719,36786,4810,4037]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174719.37825926108,\"offlineMoneyMade\":0,\"offlineRunningTime\":377773.777,\"onlineExpGained\":143038.7293713811,\"onlineMoneyMade\":202851719,\"onlineRunningTime\":318861.8100087311,\"pid\":91,\"ramUsage\":2.45,\"server\":\"n00dles\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"n00dles\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":237,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":9.064,\"minDifficulty\":1,\"moneyAvailable\":1750000,\"moneyMax\":1750000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":3000}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-629277.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[6,32,38,20,20],[44,44,43,44,24],[34,11,25,31,35],[19,12,10,35,19],[41,30,4,3,44],[20,24,17,22,34]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":false,\"ip\":\"40.8.0.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"ramUsed\":14.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"foodnstuff\":[490289160,17202,88086,21612]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":799709.0106324803,\"offlineMoneyMade\":0,\"offlineRunningTime\":377773.8,\"onlineExpGained\":720216.8028544823,\"onlineMoneyMade\":490289160,\"onlineRunningTime\":318861.8100087311,\"pid\":92,\"ramUsage\":2.45,\"server\":\"foodnstuff\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"foodnstuff\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":238,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":3.468,\"minDifficulty\":3,\"moneyAvailable\":0,\"moneyMax\":50000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":5}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-226311-CyberSec.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"33768591527\",76],\"reward\":{\"name\":\"CyberSec\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":false,\"ip\":\"56.7.8.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"ramUsed\":14.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"sigma-cosmetics\":[970599510,13476,70974,13986]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":676710.4665419138,\"offlineMoneyMade\":0,\"offlineRunningTime\":377773.818,\"onlineExpGained\":572325.408770315,\"onlineMoneyMade\":970599510,\"onlineRunningTime\":318861.8100087311,\"pid\":93,\"ramUsage\":2.45,\"server\":\"sigma-cosmetics\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"sigma-cosmetics\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":239,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":100,\"minDifficulty\":3,\"moneyAvailable\":57500000,\"moneyMax\":57500000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":5,\"serverGrowth\":10}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":false,\"ip\":\"45.4.9.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"ramUsed\":14.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"joesguns\":[121376508,13680,25764,18846]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":457378.4311946648,\"offlineMoneyMade\":0,\"offlineRunningTime\":377773.83200000005,\"onlineExpGained\":380835.7764075776,\"onlineMoneyMade\":121376508,\"onlineRunningTime\":318861.8100087311,\"pid\":94,\"ramUsage\":2.45,\"server\":\"joesguns\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"joesguns\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":240,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":5.48,\"minDifficulty\":5,\"moneyAvailable\":0,\"moneyMax\":62500000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":10,\"serverGrowth\":20}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-752032.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[193,140,198,97,77,9],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-63345-Sector-12.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[12,1,49,28,3,6,12,24,27,1,20,26,38],[34,38,18,3,10,42,30,42,38,8,17,22,27],[48,8,3,5,13,42,11,4,13,6,39,26,50],[28,8,13,38,29,12,16,25,4,29,8,29,26],[2,19,26,13,10,33,37,34,20,7,4,40,39],[39,43,5,33,34,25,42,1,46,38,23,50,25],[5,17,18,34,49,20,25,31,40,44,6,14,43],[22,19,43,30,5,26,44,32,14,48,23,3,3],[34,10,28,2,3,30,12,46,49,14,21,12,10],[27,47,29,20,2,2,21,40,32,26,8,7,26],[44,5,34,15,14,24,34,37,16,35,5,2,8],[7,6,23,45,9,43,43,27,41,46,5,43,37],[5,24,14,45,12,28,47,43,36,14,29,36,42],[11,2,25,14,19,40,27,19,25,5,33,39,44],[45,45,31,25,27,21,10,35,8,3,42,46,25]],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-84469.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[51,42,170,99,113,18,29,53,32,188,117,10,148,94],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":false,\"ip\":\"78.5.6.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"ramUsed\":31.85,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"zer0\":[2743281720,8184,26172,4740]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":536083.5880308283,\"offlineMoneyMade\":0,\"offlineRunningTime\":377773.851,\"onlineExpGained\":421772.79266116273,\"onlineMoneyMade\":2743281720,\"onlineRunningTime\":314759.01000844955,\"pid\":95,\"ramUsage\":2.45,\"server\":\"zer0\",\"threads\":12,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[12263793,6,6,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1623.4107321618098,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.833,\"onlineExpGained\":489.64786980665053,\"onlineMoneyMade\":12263793,\"onlineRunningTime\":18813.610000033746,\"pid\":96,\"ramUsage\":2.45,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"zer0\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":242,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"harakiri-sushi\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":100,\"minDifficulty\":8,\"moneyAvailable\":187500000,\"moneyMax\":187500000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":75,\"serverGrowth\":40}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-108856-CarmichaelSecurity.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":516169086,\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":false,\"ip\":\"98.6.5.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"ramUsed\":14.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"nectar-net\":[1144554042,8682,36492,6546]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":570801.774672283,\"offlineMoneyMade\":0,\"offlineRunningTime\":377773.87299999996,\"onlineExpGained\":466694.65045037476,\"onlineMoneyMade\":1144554042,\"onlineRunningTime\":316328.8100085567,\"pid\":97,\"ramUsage\":2.45,\"server\":\"nectar-net\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"nectar-net\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":243,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"iron-gym\",\"silver-helix\",\"phantasy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":100,\"minDifficulty\":7,\"moneyAvailable\":68750000,\"moneyMax\":68750000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":20,\"serverGrowth\":25}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-391061.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[128,75,70,198,180,137,40,113,120,61,71,67,117,192,61,189,137,104,129,132,91,18,155,2,122,1,63,154],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-662022-Sector-12.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[9,[147,37,169,151,107,174,101,138,32,18,142,101,189,85,55,165,25,187,122,47,8,19,187,199,90,120,141,169,163,173,66,178,42,102,10,64,122,179,10,169,27,77,87]],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":false,\"ip\":\"68.7.8.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"ramUsed\":31.85,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"neo-net\":[1707172536,7728,37956,6768]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":702058.7730933876,\"offlineMoneyMade\":0,\"offlineRunningTime\":377773.891,\"onlineExpGained\":562451.4147572448,\"onlineMoneyMade\":1707172536,\"onlineRunningTime\":314759.01000844955,\"pid\":98,\"ramUsage\":2.45,\"server\":\"neo-net\",\"threads\":12,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[7450808,4,5,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1363.390929271075,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.85,\"onlineExpGained\":428.4418860808192,\"onlineMoneyMade\":7450808,\"onlineRunningTime\":18794.61000003367,\"pid\":99,\"ramUsage\":2.45,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"neo-net\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":245,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"max-hardware\",\"netlink\",\"crush-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":25,\"hackDifficulty\":100,\"minDifficulty\":8,\"moneyAvailable\":125000000,\"moneyMax\":125000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":50,\"serverGrowth\":25}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-135253-Sector-12.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"7977931888\",74],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":false,\"ip\":\"75.9.5.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"ramUsed\":63.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"silver-helix\":[231744492,4044,15444,3252]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":313464.4602280825,\"offlineMoneyMade\":0,\"offlineRunningTime\":377773.911,\"onlineExpGained\":286525.22325585445,\"onlineMoneyMade\":231744492,\"onlineRunningTime\":310484.0100081516,\"pid\":100,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":12,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[8747493,4,6,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1646.9938574685332,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.85899999997,\"onlineExpGained\":442.0432157976706,\"onlineMoneyMade\":8747493,\"onlineRunningTime\":18756.610000033514,\"pid\":101,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[0,1,13,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2048.312155149156,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.864,\"onlineExpGained\":505.80498935407576,\"onlineMoneyMade\":0,\"onlineRunningTime\":18756.610000033514,\"pid\":102,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[2698717,2,8,9]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1749.5171526325087,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.86700000003,\"onlineExpGained\":450.87946302960506,\"onlineMoneyMade\":2698717,\"onlineRunningTime\":18756.610000033514,\"pid\":103,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[1528,4,12,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2381.482194365582,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.87199999997,\"onlineExpGained\":584.6310020053314,\"onlineMoneyMade\":1528,\"onlineRunningTime\":18756.610000033514,\"pid\":104,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,4,17,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2116.3595197920376,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.875,\"onlineExpGained\":560.6454688999576,\"onlineMoneyMade\":0,\"onlineRunningTime\":18756.610000033514,\"pid\":105,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,5,16,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2391.592854048809,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.87900000004,\"onlineExpGained\":572.8390788427103,\"onlineMoneyMade\":0,\"onlineRunningTime\":18756.610000033514,\"pid\":106,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[3119086,5,15,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1941.9116757510362,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.883,\"onlineExpGained\":528.2633739865997,\"onlineMoneyMade\":3119086,\"onlineRunningTime\":18756.610000033514,\"pid\":107,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[5856293,2,13,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1436.8422710159246,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.88899999997,\"onlineExpGained\":428.1179972683454,\"onlineMoneyMade\":5856293,\"onlineRunningTime\":18756.610000033514,\"pid\":108,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[1941643,2,11,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":948.0341444801119,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.89400000003,\"onlineExpGained\":352.0033857465972,\"onlineMoneyMade\":1941643,\"onlineRunningTime\":18756.610000033514,\"pid\":109,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,138,0,60]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1192.6927601046043,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.898,\"onlineExpGained\":327.75,\"onlineMoneyMade\":0,\"onlineRunningTime\":18756.610000033514,\"pid\":110,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[17238144,7,10,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1816.0973266090755,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.90099999995,\"onlineExpGained\":491.9847172652588,\"onlineMoneyMade\":17238144,\"onlineRunningTime\":18756.610000033514,\"pid\":111,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,15,39,34]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3952.3188703789874,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.909,\"onlineExpGained\":1000.8086828958176,\"onlineMoneyMade\":0,\"onlineRunningTime\":18756.610000033514,\"pid\":112,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[3318388,18,51,42]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5015.935495825483,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.915,\"onlineExpGained\":1242.8144541854929,\"onlineMoneyMade\":3318388,\"onlineRunningTime\":18756.610000033514,\"pid\":113,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[45,33,82,72]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5558.99534021001,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.919,\"onlineExpGained\":1541.2203886431892,\"onlineMoneyMade\":45,\"onlineRunningTime\":18756.610000033514,\"pid\":114,\"ramUsage\":2.45,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"silver-helix\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":260,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"nectar-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":10.546,\"minDifficulty\":10,\"moneyAvailable\":0,\"moneyMax\":1125000000,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":150,\"serverGrowth\":30}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":false,\"ip\":\"4.9.8.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"ramUsed\":14.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"hong-fang-tea\":[929232282,6882,32184,5364]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":417455.63672254916,\"offlineMoneyMade\":0,\"offlineRunningTime\":377773.98799999995,\"onlineExpGained\":334116.4060362412,\"onlineMoneyMade\":929232282,\"onlineRunningTime\":318861.8100087311,\"pid\":115,\"ramUsage\":2.45,\"server\":\"hong-fang-tea\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"hong-fang-tea\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":261,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"max-hardware\",\"CSEC\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":100,\"minDifficulty\":5,\"moneyAvailable\":75000000,\"moneyMax\":75000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":30,\"serverGrowth\":20}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-642063.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[8,11],[9,10],[15,19],[17,20],[12,18],[14,22],[6,10],[12,15],[24,29],[5,14],[18,19],[15,24]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":false,\"ip\":\"32.9.7.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"ramUsed\":14.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"harakiri-sushi\":[2025916038,9894,25332,4446]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":380821.0180786958,\"offlineMoneyMade\":0,\"offlineRunningTime\":377774.006,\"onlineExpGained\":299517.24186111725,\"onlineMoneyMade\":2025916038,\"onlineRunningTime\":318861.8100087311,\"pid\":116,\"ramUsage\":2.45,\"server\":\"harakiri-sushi\",\"threads\":6,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"harakiri-sushi\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":262,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"zer0\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":100,\"minDifficulty\":5,\"moneyAvailable\":100000000,\"moneyMax\":100000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":40,\"serverGrowth\":40}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-422383.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[19,26],[22,27],[5,13],[5,15],[22,29],[23,30],[3,11],[13,23],[17,24],[2,5],[14,24]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-666649-CyberSec.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[62,131,6,93,160,96,97,158,46,56,68,74,24,184,199,40,115,187,95,88,86,55,139,177,121,175,168,54,91,80,113,14,11,176,109,129,52,24,148,83,129,51,26,174,138,67,177],\"reward\":{\"name\":\"CyberSec\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":false,\"ip\":\"51.7.5.0\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"ramUsed\":31.85,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"phantasy\":[7411873344,6816,26916,5772]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":411899.52629384265,\"offlineMoneyMade\":0,\"offlineRunningTime\":377774.02099999995,\"onlineExpGained\":366491.9023863401,\"onlineMoneyMade\":7411873344,\"onlineRunningTime\":310484.0100081516,\"pid\":117,\"ramUsage\":2.45,\"server\":\"phantasy\",\"threads\":12,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[6220930,2,6,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1332.2938181834245,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.93899999998,\"onlineExpGained\":408.0398915055421,\"onlineMoneyMade\":6220930,\"onlineRunningTime\":18763.410000033542,\"pid\":118,\"ramUsage\":2.45,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"phantasy\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":264,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"nectar-net\",\"comptek\",\"johnson-ortho\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":7,\"minDifficulty\":7,\"moneyAvailable\":0,\"moneyMax\":600000000,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":100,\"serverGrowth\":35}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-978774.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[7],[3,1],[8,1,6],[9,1,4,7],[9,9,5,1,9],[8,5,1,3,8,4],[1,5,3,7,3,2,5]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-993635.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[184,156,7,131,101,199,188,163,71,66,76,191,41,4,167,192,44,87,71,25,98,158,69,89,75,137,23,14,93,3,32,193,145,164,86,173,124,84,59,78,188,71,70,80],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":false,\"ip\":\"45.1.6.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"ramUsed\":31.85,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"max-hardware\":[4443534456,9504,30924,5100]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":452291.2231401956,\"offlineMoneyMade\":0,\"offlineRunningTime\":377774.043,\"onlineExpGained\":349491.22005603934,\"onlineMoneyMade\":4443534456,\"onlineRunningTime\":314759.01000844955,\"pid\":119,\"ramUsage\":2.45,\"server\":\"max-hardware\",\"threads\":12,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[7007200,4,6,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1446.4035589090242,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.949,\"onlineExpGained\":455.644545514522,\"onlineMoneyMade\":7007200,\"onlineRunningTime\":18819.41000003377,\"pid\":120,\"ramUsage\":2.45,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"max-hardware\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":266,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"hong-fang-tea\",\"neo-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":15,\"hackDifficulty\":100,\"minDifficulty\":5,\"moneyAvailable\":250000000,\"moneyMax\":250000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":80,\"serverGrowth\":30}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":false,\"ip\":\"98.1.7.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"ramUsed\":31.85,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"omega-net\":[205643772,4464,11580,2688]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":270938.88579567824,\"offlineMoneyMade\":0,\"offlineRunningTime\":377774.063,\"onlineExpGained\":245445.91595443094,\"onlineMoneyMade\":205643772,\"onlineRunningTime\":310484.0100081516,\"pid\":121,\"ramUsage\":2.45,\"server\":\"omega-net\",\"threads\":12,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[4243059,2,7,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1561.0151838238403,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.96,\"onlineExpGained\":428.4418860808192,\"onlineMoneyMade\":4243059,\"onlineRunningTime\":18753.210000033498,\"pid\":122,\"ramUsage\":2.45,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"omega-net\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":268,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"CSEC\",\"the-hub\",\"avmnite-02h\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":31,\"hackDifficulty\":12.092,\"minDifficulty\":10,\"moneyAvailable\":1526324475,\"moneyMax\":1526324475,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":183,\"serverGrowth\":36}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-522757.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[7],[5,1],[8,7,4],[4,3,2,3],[4,7,9,1,1],[7,1,4,6,9,5],[7,5,7,5,4,7,8],[2,6,9,9,5,7,9,9],[1,9,4,1,9,4,5,6,5],[6,7,2,2,8,4,8,1,2,3],[7,1,9,5,1,8,4,4,8,4,9]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":false,\"ip\":\"85.7.8.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"ramUsage\":2.45,\"server\":\"crush-fitness\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":114}}],\"serversOnNetwork\":[\"neo-net\",\"syscore\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":41,\"hackDifficulty\":23.924,\"minDifficulty\":14,\"moneyAvailable\":1464360325,\"moneyMax\":1464360325,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":249,\"serverGrowth\":27}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-826556-CarmichaelSecurity.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,1,0,0,1,0],[0,0,0,0,1,0,0,0]],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-46818.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[3,[149,178,17,32,36,164,10,108,171,25,127]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-613344-CyberSec.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":914201880,\"reward\":{\"name\":\"CyberSec\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":false,\"ip\":\"2.2.1.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"ramUsed\":31.85,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"iron-gym\":[1807356,53,1500,391]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":27893.47036444136,\"offlineMoneyMade\":0,\"offlineRunningTime\":377774.08400000003,\"onlineExpGained\":23952.424026120323,\"onlineMoneyMade\":1807356,\"onlineRunningTime\":316314.21000855573,\"pid\":123,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[3089624,3,7,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1554.7777314698847,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.97,\"onlineExpGained\":448.8438806560963,\"onlineMoneyMade\":3089624,\"onlineRunningTime\":18904.61000003413,\"pid\":124,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[15035973,8,15,4]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2891.289903230925,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.97600000002,\"onlineExpGained\":678.6750490067346,\"onlineMoneyMade\":15035973,\"onlineRunningTime\":18904.61000003413,\"pid\":125,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[16874389,4,9,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2277.5027108949685,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.98,\"onlineExpGained\":477.71752630517676,\"onlineMoneyMade\":16874389,\"onlineRunningTime\":18904.61000003413,\"pid\":126,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,3,13,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2206.5371997045527,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.985,\"onlineExpGained\":535.9117518382203,\"onlineMoneyMade\":0,\"onlineRunningTime\":18904.61000003413,\"pid\":127,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,5,12,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1408.5432439564277,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.99199999997,\"onlineExpGained\":459.72928449796524,\"onlineMoneyMade\":0,\"onlineRunningTime\":18904.61000003413,\"pid\":128,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,4,14,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2371.227997174545,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.995,\"onlineExpGained\":555.3031886740558,\"onlineMoneyMade\":0,\"onlineRunningTime\":18904.61000003413,\"pid\":129,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[46340,2,10,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1666.8821517019683,\"offlineMoneyMade\":0,\"offlineRunningTime\":141247.99899999998,\"onlineExpGained\":425.6879615620173,\"onlineMoneyMade\":46340,\"onlineRunningTime\":18904.61000003413,\"pid\":130,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[5856293,3,15,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2004.3691345423365,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.004,\"onlineExpGained\":485.8417721809313,\"onlineMoneyMade\":5856293,\"onlineRunningTime\":18904.61000003413,\"pid\":131,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[0,0,8,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":650.2923324682357,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.00799999997,\"onlineExpGained\":260.57393490332515,\"onlineMoneyMade\":0,\"onlineRunningTime\":18904.61000003413,\"pid\":132,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,146,0,62]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1217.0583958215718,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.01200000002,\"onlineExpGained\":336,\"onlineMoneyMade\":0,\"onlineRunningTime\":18904.61000003413,\"pid\":133,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[7094003,4,10,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1397.2579237474504,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.017,\"onlineExpGained\":387.62432269384016,\"onlineMoneyMade\":7094003,\"onlineRunningTime\":18904.61000003413,\"pid\":134,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[4345319,14,40,32]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4071.3637733836445,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.02,\"onlineExpGained\":987.9365454952282,\"onlineMoneyMade\":4345319,\"onlineRunningTime\":18904.61000003413,\"pid\":135,\"ramUsage\":2.45,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"iron-gym\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":281,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nexport async function main(ns) {\\n\\tvar scriptName = \\\"autoHack.js\\\";\\n\\tvar vers = \\\"v1\\\";\\n\\tvar host = ns.getHostname();\\n\\tvar scriptRam = 2.6;\\n\\tns.tprint(\\\"script to copy/run = \\\" + scriptName + \\\"(ram: \\\" + scriptRam + \\\")\\\");\\n\\n\\tif (ns.args.length > 0) {\\n\\t\\tvar targets = ns.args;\\n\\t}\\n\\telse {\\n\\t\\tvar allServers = ns.scan();\\n\\t\\tvar targets = [];\\n\\n\\t\\tfor (let i = 0; i < allServers.length; i++) {\\n\\t\\t\\tvar server = allServers[i];\\n\\t\\t\\tif (!server.startsWith(\\\"pserv\\\") && !server.startsWith(\\\"undefined\\\")) {\\n\\t\\t\\t\\ttargets.push(server);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t}\\n\\tns.tprint(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": targets = \\\" + targets);\\n\\n\\tfor (let i = 0; i < targets.length; i++) {\\n\\t\\tvar target = targets[i];\\n\\t\\tif (ns.getServerNumPortsRequired(target) == 0) {\\n\\t\\t\\tns.kill(scriptName, target);\\n\\t\\t\\tvar targetRam = ns.getServerMaxRam(target) - ns.getServerUsedRam(target);\\n\\t\\t\\tawait ns.scp(scriptName, target);\\n\\t\\t\\tvar threads = Math.floor(targetRam / scriptRam);\\n\\t\\t\\tns.tprint(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": nuking \\\" + target);\\n\\t\\t\\tns.nuke(target);\\n\\t\\t\\tif (threads > 0) {\\n\\t\\t\\t\\tns.tprint(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running \\\" + scriptName + \\\" on \\\" + target);\\n\\t\\t\\t\\tns.exec(scriptName, target, threads);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tns.tprint(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\"not enough ram (\\\" + targetRam + \\\")\\\");\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t}\\n\\t\\tawait ns.sleep(100000)\\n}\",\"filename\":\"copyRun_autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"copyRun_autoHack.js\",\"url\":\"blob:file:///1308c6ed-3147-4a92-9102-c4da6126131e\"}],\"ramUsage\":4.5,\"server\":\"iron-gym\",\"_hash\":\"4a0216f1dd08791fd89bc8aa70b1057f7bda35127a6fb1b9075ce8ec33f007c1\",\"moduleSequenceNumber\":116}}],\"serversOnNetwork\":[\"home\",\"nectar-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":30,\"hackDifficulty\":100,\"minDifficulty\":10,\"moneyAvailable\":500000000,\"moneyMax\":500000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":100,\"serverGrowth\":20}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-538904-CarmichaelSecurity.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[4,12],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-313720.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[9,1,3,6,-5,-8,-6,4,-2,8,8,-1,10,6,2,-7,7,-7,3,9,-3,-10,3],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":false,\"ip\":\"33.5.4.5\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"ramUsed\":249.9,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"millenium-fitness\":[367086420,240,600,528]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":58490.0320748075,\"offlineMoneyMade\":0,\"offlineRunningTime\":328942.711,\"onlineExpGained\":26276.824172356362,\"onlineMoneyMade\":367086420,\"onlineRunningTime\":87287.80999955101,\"pid\":136,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":12,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[19364193,9,18,15]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3995.438455380032,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.032,\"onlineExpGained\":1264.9236636671806,\"onlineMoneyMade\":19364193,\"onlineRunningTime\":18731.010000033406,\"pid\":137,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[2050389,9,33,21]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5978.456649745521,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.03699999998,\"onlineExpGained\":1632.6616744973335,\"onlineMoneyMade\":2050389,\"onlineRunningTime\":18731.010000033406,\"pid\":138,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[106948041,21,30,21]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6438.38253394258,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.041,\"onlineExpGained\":1690.7979863610196,\"onlineMoneyMade\":106948041,\"onlineRunningTime\":18731.010000033406,\"pid\":139,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,9,33,18]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5953.187009755208,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.04599999997,\"onlineExpGained\":1503.3368622994237,\"onlineMoneyMade\":0,\"onlineRunningTime\":18731.010000033406,\"pid\":140,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,9,48,18]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5609.370451400759,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.051,\"onlineExpGained\":1530.5621300968844,\"onlineMoneyMade\":0,\"onlineRunningTime\":18731.010000033406,\"pid\":141,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,15,39,24]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6479.972865912148,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.057,\"onlineExpGained\":1578.2301151788959,\"onlineMoneyMade\":0,\"onlineRunningTime\":18731.010000033406,\"pid\":142,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[3906723,9,36,18]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5344.380926206974,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.062,\"onlineExpGained\":1369.381755868176,\"onlineMoneyMade\":3906723,\"onlineRunningTime\":18731.010000033406,\"pid\":143,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[0,3,24,27]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3490.0244189364807,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.067,\"onlineExpGained\":1067.8898358828392,\"onlineMoneyMade\":0,\"onlineRunningTime\":18731.010000033406,\"pid\":144,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[4464111,9,24,15]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2251.0056915041487,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.072,\"onlineExpGained\":918.8659809748831,\"onlineMoneyMade\":4464111,\"onlineRunningTime\":18731.010000033406,\"pid\":145,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,432,0,186]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3738.793888684548,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.074,\"onlineExpGained\":1014.75,\"onlineMoneyMade\":0,\"onlineRunningTime\":18731.010000033406,\"pid\":146,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[2480271,12,27,21]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4663.902421563805,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.077,\"onlineExpGained\":1252.3247348570214,\"onlineMoneyMade\":2480271,\"onlineRunningTime\":18731.010000033406,\"pid\":147,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[162,33,114,93]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12518.756646781883,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.08200000002,\"onlineExpGained\":2896.2309151325935,\"onlineMoneyMade\":162,\"onlineRunningTime\":18731.010000033406,\"pid\":148,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[10045608,42,117,108]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12122.8263285742,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.08699999997,\"onlineExpGained\":3031.7140473312766,\"onlineMoneyMade\":10045608,\"onlineRunningTime\":18731.010000033406,\"pid\":149,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[6214638,111,270,231]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19352.64088732647,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.09300000002,\"onlineExpGained\":5066.352128624948,\"onlineMoneyMade\":6214638,\"onlineRunningTime\":18731.010000033406,\"pid\":150,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[0,18,66,51]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8458.192514068707,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.096,\"onlineExpGained\":1999.0588826228407,\"onlineMoneyMade\":0,\"onlineRunningTime\":18731.010000033406,\"pid\":151,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[0,15,51,33]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6422.512317706788,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.09999999998,\"onlineExpGained\":1498.326581627893,\"onlineMoneyMade\":0,\"onlineRunningTime\":18731.010000033406,\"pid\":152,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,432,0,300]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4805.58577316756,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.109,\"onlineExpGained\":1291.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":18731.010000033406,\"pid\":153,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,9,54,39]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8533.300098031565,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.117,\"onlineExpGained\":2077.266097529253,\"onlineMoneyMade\":0,\"onlineRunningTime\":18731.010000033406,\"pid\":154,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,144,162,138]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12767.06696600208,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.12399999998,\"onlineExpGained\":3707.6939320559177,\"onlineMoneyMade\":0,\"onlineRunningTime\":18731.010000033406,\"pid\":155,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,93,117,99]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8193.269204241857,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.12799999997,\"onlineExpGained\":2630.736271081802,\"onlineMoneyMade\":0,\"onlineRunningTime\":18731.010000033406,\"pid\":156,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[2776446,102,123,105]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6019.562032402673,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.132,\"onlineExpGained\":1988.9270033229268,\"onlineMoneyMade\":2776446,\"onlineRunningTime\":18731.010000033406,\"pid\":157,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,60,75,63]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6350.917197842159,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.136,\"onlineExpGained\":1958.3742914438058,\"onlineMoneyMade\":0,\"onlineRunningTime\":18731.010000033406,\"pid\":158,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,36,0,156]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2435.1885723733017,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.141,\"onlineExpGained\":600.75,\"onlineMoneyMade\":0,\"onlineRunningTime\":18731.010000033406,\"pid\":159,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,585,591,573]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35898.20275705904,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.144,\"onlineExpGained\":10189.605497962246,\"onlineMoneyMade\":0,\"onlineRunningTime\":18731.010000033406,\"pid\":160,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,2124,2118,1500]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":44425.51172203186,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.149,\"onlineExpGained\":13768.274131452945,\"onlineMoneyMade\":0,\"onlineRunningTime\":18731.010000033406,\"pid\":161,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,1644,1650,1641]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":80849.07144322638,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.153,\"onlineExpGained\":22895.242792574438,\"onlineMoneyMade\":0,\"onlineRunningTime\":18731.010000033406,\"pid\":162,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,909,927,903]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":45034.82106065499,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.15899999996,\"onlineExpGained\":12723.186989471478,\"onlineMoneyMade\":0,\"onlineRunningTime\":18731.010000033406,\"pid\":163,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,324,339,324]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":24376.33785657446,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.165,\"onlineExpGained\":6991.706474315968,\"onlineMoneyMade\":0,\"onlineRunningTime\":18731.010000033406,\"pid\":164,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,228,249,228]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":14448.95449958181,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.17,\"onlineExpGained\":4176.163443927315,\"onlineMoneyMade\":0,\"onlineRunningTime\":18731.010000033406,\"pid\":165,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,174,195,186]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":11248.370081239553,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.177,\"onlineExpGained\":3307.1014981938383,\"onlineMoneyMade\":0,\"onlineRunningTime\":18731.010000033406,\"pid\":166,\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"millenium-fitness\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":312,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"rothman-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":48,\"hackDifficulty\":68.7401249999999,\"minDifficulty\":16,\"moneyAvailable\":5725141.483890179,\"moneyMax\":6250000000,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":522,\"serverGrowth\":28}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-423081-CarmichaelSecurity.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"(()a(a())a))()((\",\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":false,\"ip\":\"84.7.2.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":63,\"hackDifficulty\":63,\"minDifficulty\":21,\"moneyAvailable\":900000000,\"moneyMax\":22500000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1074,\"serverGrowth\":57}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-469719.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[9,-1,7,0,-9,8],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-140955-CarmichaelSecurity.cct\",\"type\":\"Array Jumping Game\",\"data\":[9,8,0,4,10,5,3,6,0,3,0,0,7,8,2,5,0,0,8,9,6,0,0],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-955626.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[10,14],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-397784.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"((a)(a(a)()aa\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-581663-TheBlackHand.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"()a)(a())((())((((\",\"reward\":{\"name\":\"The Black Hand\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"snap-fitness\",\"httpPortOpen\":true,\"ip\":\"24.9.2.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"ramUsage\":2.45,\"server\":\"snap-fitness\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":118}}],\"serversOnNetwork\":[\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":49,\"hackDifficulty\":16,\"minDifficulty\":16,\"moneyAvailable\":11250000000,\"moneyMax\":11250000000,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":791,\"serverGrowth\":42}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-810052.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[30,20,47,9,39,39,21,33],[16,31,10,3,29,14,7,20],[44,41,9,35,6,39,1,18],[23,8,30,41,29,17,23,16],[30,19,2,22,15,40,8,11],[18,12,32,19,34,14,25,26],[12,40,31,38,18,36,32,21],[15,1,10,50,35,21,32,2],[12,28,37,47,9,47,25,32],[29,49,29,22,40,29,46,39],[17,16,9,27,23,20,19,46],[30,40,13,32,21,10,17,42],[11,30,2,23,8,16,17,41]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-291999.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[6,16],[12,20],[25,26],[3,10],[2,7],[10,20],[1,7],[10,18],[5,7],[20,28],[10,13],[10,14],[9,16],[9,14],[16,23],[12,13]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"run4theh111z\",\"httpPortOpen\":false,\"ip\":\"20.4.4.7\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"infocomm\",\"helios\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":518,\"serverGrowth\":0}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-584453-CarmichaelSecurity.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[7,12],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":false,\"ip\":\"94.6.8.6\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"ramUsed\":249.9,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"I.I.I.I\":[0,9492,0,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":47724.48034897324,\"offlineMoneyMade\":0,\"offlineRunningTime\":328942.87200000003,\"onlineExpGained\":19719,\"onlineMoneyMade\":0,\"onlineRunningTime\":87287.80999955101,\"pid\":167,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":12,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[34638285,15,18,15]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5132.324621101397,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.186,\"onlineExpGained\":1428.1396202693973,\"onlineMoneyMade\":34638285,\"onlineRunningTime\":18739.41000003344,\"pid\":168,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[0,3,39,21]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6237.616496330409,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.19100000002,\"onlineExpGained\":1613.4538900914824,\"onlineMoneyMade\":0,\"onlineRunningTime\":18739.41000003344,\"pid\":169,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[81881655,15,33,21]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6429.079240944008,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.196,\"onlineExpGained\":1610.2837965343044,\"onlineMoneyMade\":81881655,\"onlineRunningTime\":18739.41000003344,\"pid\":170,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,3,30,18]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5943.547249128892,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.20099999997,\"onlineExpGained\":1419.8181477272335,\"onlineMoneyMade\":0,\"onlineRunningTime\":18739.41000003344,\"pid\":171,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[53492085,9,45,18]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5601.591924629985,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.205,\"onlineExpGained\":1530.5621300968844,\"onlineMoneyMade\":53492085,\"onlineRunningTime\":18739.41000003344,\"pid\":172,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[15,12,45,24]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7230.449522994289,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.21,\"onlineExpGained\":1736.0531266967857,\"onlineMoneyMade\":15,\"onlineRunningTime\":18739.41000003344,\"pid\":173,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[10350627,12,48,15]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5779.056477920421,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.214,\"onlineExpGained\":1630.949057550861,\"onlineMoneyMade\":10350627,\"onlineRunningTime\":18739.41000003344,\"pid\":174,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[70308,15,33,27]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3696.789708435501,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.21899999998,\"onlineExpGained\":1269.92304807689,\"onlineMoneyMade\":70308,\"onlineRunningTime\":18739.41000003344,\"pid\":175,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[243165,12,18,15]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2238.8174999345506,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.222,\"onlineExpGained\":850.2938928424292,\"onlineMoneyMade\":243165,\"onlineRunningTime\":18739.41000003344,\"pid\":176,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,360,0,177]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3537.7524212980434,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.22900000002,\"onlineExpGained\":938.25,\"onlineMoneyMade\":0,\"onlineRunningTime\":18739.41000003344,\"pid\":177,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[3015918,3,39,18]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4608.668676690533,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.23399999997,\"onlineExpGained\":1282.1419904488555,\"onlineMoneyMade\":3015918,\"onlineRunningTime\":18739.41000003344,\"pid\":178,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[42,48,132,102]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10614.753516651996,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.24000000002,\"onlineExpGained\":3224.470418847621,\"onlineMoneyMade\":42,\"onlineRunningTime\":18739.41000003344,\"pid\":179,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,33,138,135]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12994.327656267253,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.247,\"onlineExpGained\":3568.383925275012,\"onlineMoneyMade\":0,\"onlineRunningTime\":18739.41000003344,\"pid\":180,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[6257118,102,252,237]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":15802.144716237584,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.25000000003,\"onlineExpGained\":4911.7616337154495,\"onlineMoneyMade\":6257118,\"onlineRunningTime\":18739.41000003344,\"pid\":181,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[12,18,78,48]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8867.20838804907,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.25699999998,\"onlineExpGained\":2167.6542100729603,\"onlineMoneyMade\":12,\"onlineRunningTime\":18739.41000003344,\"pid\":182,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[0,21,57,45]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6447.766190040007,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.26099999997,\"onlineExpGained\":1817.6420826305591,\"onlineMoneyMade\":0,\"onlineRunningTime\":18739.41000003344,\"pid\":183,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,486,0,315]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4851.480106123311,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.26700000002,\"onlineExpGained\":1374.75,\"onlineMoneyMade\":0,\"onlineRunningTime\":18739.41000003344,\"pid\":184,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,6,51,51]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8344.85218289788,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.269,\"onlineExpGained\":2286.6029910787124,\"onlineMoneyMade\":0,\"onlineRunningTime\":18739.41000003344,\"pid\":185,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[1412988,141,162,138]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12851.986287166113,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.27599999998,\"onlineExpGained\":3724.1360337501787,\"onlineMoneyMade\":1412988,\"onlineRunningTime\":18739.41000003344,\"pid\":186,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,93,114,99]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8273.531366935058,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.28000000003,\"onlineExpGained\":2606.0731185404097,\"onlineMoneyMade\":0,\"onlineRunningTime\":18739.41000003344,\"pid\":187,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,93,126,105]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6133.634131050055,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.285,\"onlineExpGained\":1977.26174230637,\"onlineMoneyMade\":0,\"onlineRunningTime\":18739.41000003344,\"pid\":188,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,66,72,63]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6350.651827605046,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.28899999996,\"onlineExpGained\":1920.7132473775787,\"onlineMoneyMade\":0,\"onlineRunningTime\":18739.41000003344,\"pid\":189,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,54,0,168]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2391.286819670751,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.29499999998,\"onlineExpGained\":643.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":18739.41000003344,\"pid\":190,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,591,591,573]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":36069.13179011275,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.3,\"onlineExpGained\":10201.270758978806,\"onlineMoneyMade\":0,\"onlineRunningTime\":18739.41000003344,\"pid\":191,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,2121,2121,1500]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":44498.06740759782,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.306,\"onlineExpGained\":13775.740657554601,\"onlineMoneyMade\":0,\"onlineRunningTime\":18739.41000003344,\"pid\":192,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,1656,1653,1638]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":81075.2358531874,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.314,\"onlineExpGained\":22913.796473929844,\"onlineMoneyMade\":0,\"onlineRunningTime\":18739.41000003344,\"pid\":193,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,918,921,903]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":44852.511966396036,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.31899999996,\"onlineExpGained\":12699.994887777219,\"onlineMoneyMade\":0,\"onlineRunningTime\":18739.41000003344,\"pid\":194,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,312,345,327]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":24927.515674227703,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.32499999998,\"onlineExpGained\":7061.974881093014,\"onlineMoneyMade\":0,\"onlineRunningTime\":18739.41000003344,\"pid\":195,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[882096,231,255,228]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":14908.422804786009,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.329,\"onlineExpGained\":4228.657118501819,\"onlineMoneyMade\":882096,\"onlineRunningTime\":18739.41000003344,\"pid\":196,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,183,195,186]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":11305.386256196749,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.33299999998,\"onlineExpGained\":3318.7667592103953,\"onlineMoneyMade\":0,\"onlineRunningTime\":18739.41000003344,\"pid\":197,\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"threads\":3,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"I.I.I.I\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":343,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"johnson-ortho\",\"rho-construction\",\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":349,\"serverGrowth\":0}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-498091.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[193,25,182,6,99,9,153,64,81,67,105,59,84,140,24,103,115,159,49,179,188,70,22,1,197,39,76,171,5,188,195],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":false,\"ip\":\"23.4.7.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"ramUsed\":14.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[4932633,3,6,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1728.0466126962972,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.338,\"onlineExpGained\":414.8405563639678,\"onlineMoneyMade\":4932633,\"onlineRunningTime\":18780.21000003361,\"pid\":198,\"ramUsage\":2.45,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[2559203,4,14,6]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2410.8888294131225,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.342,\"onlineExpGained\":608.246506185281,\"onlineMoneyMade\":2559203,\"onlineRunningTime\":18780.21000003361,\"pid\":199,\"ramUsage\":2.45,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[24079271,4,8,9]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1888.1082977359163,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.347,\"onlineExpGained\":493.8203642705198,\"onlineMoneyMade\":24079271,\"onlineRunningTime\":18780.21000003361,\"pid\":200,\"ramUsage\":2.45,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,1,13,7]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2381.4030838940603,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.34900000002,\"onlineExpGained\":584.6310020053314,\"onlineMoneyMade\":0,\"onlineRunningTime\":18780.21000003361,\"pid\":201,\"ramUsage\":2.45,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,1,15,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2018.5790014022132,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.353,\"onlineExpGained\":538.2196501439593,\"onlineMoneyMade\":0,\"onlineRunningTime\":18780.21000003361,\"pid\":202,\"ramUsage\":2.45,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,3,17,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2595.253790388817,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.35899999997,\"onlineExpGained\":619.6014526257885,\"onlineMoneyMade\":0,\"onlineRunningTime\":18780.21000003361,\"pid\":203,\"ramUsage\":2.45,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"avmnite-02h\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":349,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":7.59,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":203,\"serverGrowth\":0}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-975447-CarmichaelSecurity.cct\",\"type\":\"Array Jumping Game\",\"data\":[3,3,0,1,9,0,1,10,10,3],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-380628-CarmichaelSecurity.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[8,7],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\".\",\"httpPortOpen\":false,\"ip\":\"87.4.7.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"vitalife\",\"clarkinc\",\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":508,\"serverGrowth\":0}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-185416-CyberSec.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[15,22],[13,20],[21,25],[18,27],[2,4],[1,3],[8,15],[3,5],[1,6],[4,9],[11,15],[3,4],[24,27],[5,6]],\"reward\":{\"name\":\"CyberSec\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-795773-CarmichaelSecurity.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\")a)a(a)(aa)((((a((((\",\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-593808.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[175,185,31,95,24,145],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-392688-TheBlackHand.cct\",\"type\":\"Array Jumping Game\",\"data\":[0,3,0,3,3,5,4,0,7,0,6],\"reward\":{\"name\":\"The Black Hand\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":false,\"ip\":\"32.6.2.4\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"ramUsed\":7.35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[15763955,6,6,5]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1655.9007725748108,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.36400000003,\"onlineExpGained\":503.24919952350194,\"onlineMoneyMade\":15763955,\"onlineRunningTime\":18826.2100000338,\"pid\":204,\"ramUsage\":2.45,\"server\":\"CSEC\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[445280,3,16,4]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2333.9607871773133,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.368,\"onlineExpGained\":582.6361269774796,\"onlineMoneyMade\":445280,\"onlineRunningTime\":18826.2100000338,\"pid\":205,\"ramUsage\":2.45,\"server\":\"CSEC\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[10093313,3,9,8]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1677.0575244848849,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.372,\"onlineExpGained\":456.24707568471945,\"onlineMoneyMade\":10093313,\"onlineRunningTime\":18826.2100000338,\"pid\":206,\"ramUsage\":2.45,\"server\":\"CSEC\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"CSEC\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":352,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"hong-fang-tea\",\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":66.84400000000001,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":57,\"serverGrowth\":0}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-264776-CyberSec.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\")(a(()\",\"reward\":{\"name\":\"CyberSec\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-330315-Sector-12.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[3],[3,1],[5,9,7],[9,2,7,9],[3,1,9,3,8],[9,1,5,5,6,6]],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"The-Cave\",\"httpPortOpen\":false,\"ip\":\"88.0.8.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":925,\"serverGrowth\":0}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"29.2.7.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":3000,\"serverGrowth\":0}},\"pserv-0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-0\",\"httpPortOpen\":false,\"ip\":\"3.6.7.5\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}],\"ramUsage\":2.45,\"server\":\"pserv-0\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":122}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-1\",\"httpPortOpen\":false,\"ip\":\"5.1.0.7\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,7078230,7144074,6946542]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":506690675.1668002,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.37600000002,\"onlineExpGained\":123406049.71744826,\"onlineMoneyMade\":0,\"onlineRunningTime\":20794.61000004213,\"pid\":207,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,25086564,25119486,18337554]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":622185059.5651351,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.38,\"onlineExpGained\":165022442.0832929,\"onlineMoneyMade\":0,\"onlineRunningTime\":20794.61000004213,\"pid\":208,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,19884888,19950732,19884888]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1137952493.719095,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.386,\"onlineExpGained\":277110623.00338584,\"onlineMoneyMade\":0,\"onlineRunningTime\":20794.61000004213,\"pid\":209,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[542.9999324120793,11028870,11160558,10930104]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":633113091.6630311,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.389,\"onlineExpGained\":153927722.9908586,\"onlineMoneyMade\":542.9999324120793,\"onlineRunningTime\":20794.61000004213,\"pid\":210,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,3983562,4115250,3950640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":348896935.58057857,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.393,\"onlineExpGained\":85209367.30482778,\"onlineMoneyMade\":0,\"onlineRunningTime\":20794.61000004213,\"pid\":211,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1200000000,2864214,2930058,2798370]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":232577923.26891133,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.398,\"onlineExpGained\":53254062.948608495,\"onlineMoneyMade\":1200000000,\"onlineRunningTime\":20794.61000004213,\"pid\":212,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,2139930,2436228,2238696]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":163741842.7856762,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.403,\"onlineExpGained\":40516612.79623705,\"onlineMoneyMade\":0,\"onlineRunningTime\":20794.61000004213,\"pid\":213,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[1625000000,1679022,1876554,1711944]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":211154285.30964085,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.40699999998,\"onlineExpGained\":47905658.170094445,\"onlineMoneyMade\":1625000000,\"onlineRunningTime\":20794.61000004213,\"pid\":214,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[1500000000,1185192,1349802,1185192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":137273757.98610044,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.40999999997,\"onlineExpGained\":33380590.43867226,\"onlineMoneyMade\":1500000000,\"onlineRunningTime\":20794.61000004213,\"pid\":215,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[250000000,987660,1415646,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":81490246.39532281,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.41399999996,\"onlineExpGained\":23170637.96562058,\"onlineMoneyMade\":250000000,\"onlineRunningTime\":20794.61000004213,\"pid\":216,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[500000000,724284,921816,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":101804989.54476072,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.421,\"onlineExpGained\":24384245.557383742,\"onlineMoneyMade\":500000000,\"onlineRunningTime\":20794.61000004213,\"pid\":217,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,691362,0,1876554]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":31238286.648847204,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.425,\"onlineExpGained\":7160535,\"onlineMoneyMade\":0,\"onlineRunningTime\":20794.61000004213,\"pid\":218,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[28904.159811735637,21398,60902,55964]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7857134.336048709,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.42999999996,\"onlineExpGained\":1657924.8611272005,\"onlineMoneyMade\":28904.159811735637,\"onlineRunningTime\":20794.61000004213,\"pid\":219,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[3361651166.3068705,24690,77362,75716]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9784371.817096949,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.433,\"onlineExpGained\":2112828.5100000747,\"onlineMoneyMade\":3361651166.3068705,\"onlineRunningTime\":20794.61000004213,\"pid\":220,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[2400528137.0391293,57610,164600,134972]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":14095039.948076334,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.437,\"onlineExpGained\":3057326.848704252,\"onlineMoneyMade\":2400528137.0391293,\"onlineRunningTime\":20794.61000004213,\"pid\":221,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[1464365131.202405,13168,44442,34566]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6985663.8032313585,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.441,\"onlineExpGained\":1400754.2072469986,\"onlineMoneyMade\":1464365131.202405,\"onlineRunningTime\":20794.61000004213,\"pid\":222,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[5106274960,11522,29628,23044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5360192.071347838,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.44699999996,\"onlineExpGained\":977064.4951834131,\"onlineMoneyMade\":5106274960,\"onlineRunningTime\":20794.61000004213,\"pid\":223,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,260068,0,174476]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3411516.11279664,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.451,\"onlineExpGained\":756748.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20794.61000004213,\"pid\":224,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[3637491200,6584,32920,26336]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7051611.486794794,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.455,\"onlineExpGained\":1387109.1975599588,\"onlineMoneyMade\":3637491200,\"onlineRunningTime\":20794.61000004213,\"pid\":225,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[307983680,1528,9932,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2522824.3599584396,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.459,\"onlineExpGained\":489196.95082084223,\"onlineMoneyMade\":307983680,\"onlineRunningTime\":20794.61000004213,\"pid\":226,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[7640,2292,10696,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1684705.7449717587,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.462,\"onlineExpGained\":406916.48132758914,\"onlineMoneyMade\":7640,\"onlineRunningTime\":20794.61000004213,\"pid\":227,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[6123988575,3056,12224,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2533508.9142099908,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.467,\"onlineExpGained\":500170.3499838062,\"onlineMoneyMade\":6123988575,\"onlineRunningTime\":20794.61000004213,\"pid\":228,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[4658052228,3056,7640,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1508545.2524928167,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.47199999998,\"onlineExpGained\":352654.2679157146,\"onlineMoneyMade\":4658052228,\"onlineRunningTime\":20794.61000004213,\"pid\":229,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[4103149096,1528,12988,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2119004.1156690824,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.477,\"onlineExpGained\":396908.67629894055,\"onlineMoneyMade\":4103149096,\"onlineRunningTime\":20794.61000004213,\"pid\":230,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[2382540876,3056,9932,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1635061.8279132517,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.48099999997,\"onlineExpGained\":342275.292176873,\"onlineMoneyMade\":2382540876,\"onlineRunningTime\":20794.61000004213,\"pid\":231,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,129880,0,50424]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1233538.6920382492,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.48500000002,\"onlineExpGained\":285927,\"onlineMoneyMade\":0,\"onlineRunningTime\":20794.61000004213,\"pid\":232,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[13047724172,3820,9168,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1793546.3960167717,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.49000000002,\"onlineExpGained\":372079.59344529716,\"onlineMoneyMade\":13047724172,\"onlineRunningTime\":20794.61000004213,\"pid\":233,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[2824521546,1608,3216,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":996076.1951520971,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.493,\"onlineExpGained\":205040.04548153488,\"onlineMoneyMade\":2824521546,\"onlineRunningTime\":20794.61000004213,\"pid\":234,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[3716106090,1608,5628,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1246236.0487779742,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.49599999998,\"onlineExpGained\":262531.997259171,\"onlineMoneyMade\":3716106090,\"onlineRunningTime\":20794.61000004213,\"pid\":235,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[14375546130,3216,4020,3618]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1068161.370330923,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.502,\"onlineExpGained\":250302.5133332924,\"onlineMoneyMade\":14375546130,\"onlineRunningTime\":20794.61000004213,\"pid\":236,\"ramUsage\":2.45,\"server\":\"pserv-1\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-1\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":382,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-343865-CarmichaelSecurity.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[13,14],\"reward\":{\"name\":\"Carmichael Security\",\"type\":2}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-219161.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[37,75,187,187,181,134,102,68,166,81,74,31,54,78],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"darkweb\",\"httpPortOpen\":false,\"ip\":\"27.7.8.9\",\"isConnectedTo\":false,\"maxRam\":1,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2\",\"httpPortOpen\":false,\"ip\":\"42.7.4.7\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,7078230,7111152,6946542]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":504193194.2304157,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.506,\"onlineExpGained\":123150020.56865688,\"onlineMoneyMade\":0,\"onlineRunningTime\":20783.61000004209,\"pid\":237,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[98000000,25119486,25086564,18337554]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":666279445.8864031,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.51099999997,\"onlineExpGained\":169529013.24246925,\"onlineMoneyMade\":98000000,\"onlineRunningTime\":20783.61000004209,\"pid\":238,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,19950732,19950732,19851966]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1137470517.926662,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.514,\"onlineExpGained\":277059720.9785873,\"onlineMoneyMade\":0,\"onlineRunningTime\":20783.61000004209,\"pid\":239,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,11094714,11127636,10930104]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":629636349.7205098,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.518,\"onlineExpGained\":153571408.81726864,\"onlineMoneyMade\":0,\"onlineRunningTime\":20783.61000004209,\"pid\":240,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,4016484,4115250,3950640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":348901839.3650497,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.523,\"onlineExpGained\":85209367.30482778,\"onlineMoneyMade\":0,\"onlineRunningTime\":20783.61000004209,\"pid\":241,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,2864214,2995902,2765448]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":205030618.764041,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.52699999997,\"onlineExpGained\":50437742.31190325,\"onlineMoneyMade\":0,\"onlineRunningTime\":20783.61000004209,\"pid\":242,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[1500000000,2139930,2370384,2238696]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":189416153.00315088,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.532,\"onlineExpGained\":43140911.57134876,\"onlineMoneyMade\":1500000000,\"onlineRunningTime\":20783.61000004209,\"pid\":243,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[1125000000,1843632,1876554,1711944]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":204096669.20718914,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.53499999997,\"onlineExpGained\":46913262.23813392,\"onlineMoneyMade\":1125000000,\"onlineRunningTime\":20783.61000004209,\"pid\":244,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[1312500000,1152270,1415646,1185192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":142570909.58723864,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.54,\"onlineExpGained\":33921897.31065073,\"onlineMoneyMade\":1312500000,\"onlineRunningTime\":20783.61000004209,\"pid\":245,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[1750000000,1053504,1415646,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":92135976.46325128,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.546,\"onlineExpGained\":24258761.84798398,\"onlineMoneyMade\":1750000000,\"onlineRunningTime\":20783.61000004209,\"pid\":246,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,921816,1020582,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":110903154.41985776,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.548,\"onlineExpGained\":25314153.226944987,\"onlineMoneyMade\":0,\"onlineRunningTime\":20783.61000004209,\"pid\":247,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1316880,0,2041164]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":33827961.94725598,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.55099999998,\"onlineExpGained\":7777822.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20783.61000004209,\"pid\":248,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[4578973425,16460,80654,65840]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8765233.593124915,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.55800000002,\"onlineExpGained\":2023409.8944108326,\"onlineMoneyMade\":4578973425,\"onlineRunningTime\":20783.61000004209,\"pid\":249,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[3375000000,27982,92176,82300]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10302486.35148457,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.563,\"onlineExpGained\":2329793.7848656094,\"onlineMoneyMade\":3375000000,\"onlineRunningTime\":20783.61000004209,\"pid\":250,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[7800020297.668053,69132,176122,144848]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":14386054.561143314,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.568,\"onlineExpGained\":3358047.5223472924,\"onlineMoneyMade\":7800020297.668053,\"onlineRunningTime\":20783.61000004209,\"pid\":251,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[4249179787.428898,14814,42796,36212]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5643731.037210744,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.57,\"onlineExpGained\":1394146.8760807388,\"onlineMoneyMade\":4249179787.428898,\"onlineRunningTime\":20783.61000004209,\"pid\":252,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4307042001.576929,13168,29628,26336]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4897788.189060719,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.575,\"onlineExpGained\":1078140.13261618,\"onlineMoneyMade\":4307042001.576929,\"onlineRunningTime\":20783.61000004209,\"pid\":253,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,256776,0,185998]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3558695.2749701473,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.579,\"onlineExpGained\":812301,\"onlineMoneyMade\":0,\"onlineRunningTime\":20783.61000004209,\"pid\":254,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,1646,36212,29628]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6562058.102665713,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.58299999998,\"onlineExpGained\":1457789.9210025046,\"onlineMoneyMade\":0,\"onlineRunningTime\":20783.61000004209,\"pid\":255,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[13426827924,3056,10696,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2553769.7517725085,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.58700000003,\"onlineExpGained\":537053.1742707072,\"onlineMoneyMade\":13426827924,\"onlineRunningTime\":20783.61000004209,\"pid\":256,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[13249250428,2292,12224,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2107227.3027070193,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.59199999998,\"onlineExpGained\":484016.4462107112,\"onlineMoneyMade\":13249250428,\"onlineRunningTime\":20783.61000004209,\"pid\":257,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,1528,12988,7640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2318287.4889736846,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.597,\"onlineExpGained\":509101.96337637416,\"onlineMoneyMade\":0,\"onlineRunningTime\":20783.61000004209,\"pid\":258,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[4655880176,3820,11460,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1957554.1033080393,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.601,\"onlineExpGained\":450613.7867811909,\"onlineMoneyMade\":4655880176,\"onlineRunningTime\":20783.61000004209,\"pid\":259,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[618678796,3056,12988,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1790418.5914310843,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.60599999997,\"onlineExpGained\":400583.7566350418,\"onlineMoneyMade\":618678796,\"onlineRunningTime\":20783.61000004209,\"pid\":260,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[3755445820,1528,9932,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1398405.8754570896,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.60899999997,\"onlineExpGained\":342275.29217687296,\"onlineMoneyMade\":3755445820,\"onlineRunningTime\":20783.61000004209,\"pid\":261,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,110780,0,50424]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1212813.432171276,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.61400000003,\"onlineExpGained\":275613,\"onlineMoneyMade\":0,\"onlineRunningTime\":20783.61000004209,\"pid\":262,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[33668580008,6112,10696,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2040700.882423374,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.619,\"onlineExpGained\":440420.74326178024,\"onlineMoneyMade\":33668580008,\"onlineRunningTime\":20783.61000004209,\"pid\":263,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[3886362336,1608,3216,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1053981.9671269543,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.62399999998,\"onlineExpGained\":224177.11639314474,\"onlineMoneyMade\":3886362336,\"onlineRunningTime\":20783.61000004209,\"pid\":264,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[626669760,804,6432,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1207077.091306854,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.62800000003,\"onlineExpGained\":259958.15414878703,\"onlineMoneyMade\":626669760,\"onlineRunningTime\":20783.61000004209,\"pid\":265,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[10260262080,1206,5226,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1031598.0209061141,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.63199999998,\"onlineExpGained\":230882.49074708868,\"onlineMoneyMade\":10260262080,\"onlineRunningTime\":20783.61000004209,\"pid\":266,\"ramUsage\":2.45,\"server\":\"pserv-2\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-2\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":412,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-3\",\"httpPortOpen\":false,\"ip\":\"5.7.1.4\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,7045308,7078230,6946542]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":502321839.60581857,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.636,\"onlineExpGained\":122957998.70706333,\"onlineMoneyMade\":0,\"onlineRunningTime\":20772.61000004205,\"pid\":267,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,25086564,25119486,18304632]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":621134868.1182135,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.63999999998,\"onlineExpGained\":164913191.87337345,\"onlineMoneyMade\":0,\"onlineRunningTime\":20772.61000004205,\"pid\":268,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,19983654,19917810,19851966]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1135494734.8680608,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.644,\"onlineExpGained\":276856112.8793931,\"onlineMoneyMade\":0,\"onlineRunningTime\":20772.61000004205,\"pid\":269,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[4600000000,11094714,11094714,10930104]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":747160917.8851702,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.65,\"onlineExpGained\":165584286.6697301,\"onlineMoneyMade\":4600000000,\"onlineRunningTime\":20772.61000004205,\"pid\":270,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[412500000,3851874,4082328,3950640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":346006996.9945345,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.65300000002,\"onlineExpGained\":86057605.3503962,\"onlineMoneyMade\":412500000,\"onlineRunningTime\":20772.61000004205,\"pid\":271,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1500000000,2864214,2930058,2765448]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":237593315.46301666,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.658,\"onlineExpGained\":53766121.24619127,\"onlineMoneyMade\":1500000000,\"onlineRunningTime\":20772.61000004205,\"pid\":272,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[800000000,2074086,2403306,2238696]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":176269539.1175788,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.66199999998,\"onlineExpGained\":41796758.540193975,\"onlineMoneyMade\":800000000,\"onlineRunningTime\":20772.61000004205,\"pid\":273,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[250000000,1646100,1876554,1711944]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":179442945.2055809,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.666,\"onlineExpGained\":44928470.37421289,\"onlineMoneyMade\":250000000,\"onlineRunningTime\":20772.61000004205,\"pid\":274,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[562500000,1185192,1415646,1218114]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":135512384.58383226,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.67,\"onlineExpGained\":33200154.81467944,\"onlineMoneyMade\":562500000,\"onlineRunningTime\":20772.61000004205,\"pid\":275,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,1053504,1448568,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82118906.5004494,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.674,\"onlineExpGained\":23234645.252818428,\"onlineMoneyMade\":0,\"onlineRunningTime\":20772.61000004205,\"pid\":276,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[2500000000,757206,921816,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":112926161.74435541,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.67799999999,\"onlineExpGained\":25520799.375736374,\"onlineMoneyMade\":2500000000,\"onlineRunningTime\":20772.61000004205,\"pid\":277,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1481490,0,2041164]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35047028.05188631,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.684,\"onlineExpGained\":7777822.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20772.61000004205,\"pid\":278,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[3052658537.4871583,29628,72424,54318]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7869225.31738323,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.68699999998,\"onlineExpGained\":1811534.5127971328,\"onlineMoneyMade\":3052658537.4871583,\"onlineRunningTime\":20772.61000004205,\"pid\":279,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[2250007185.0527067,16460,83946,74070]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8705779.931731028,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.692,\"onlineExpGained\":2107662.670122324,\"onlineMoneyMade\":2250007185.0527067,\"onlineRunningTime\":20772.61000004205,\"pid\":280,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[3600118917.850994,64194,159662,138264]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12819089.545818996,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.69600000003,\"onlineExpGained\":3084314.601467089,\"onlineMoneyMade\":3600118917.850994,\"onlineRunningTime\":20772.61000004205,\"pid\":281,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[0,6584,39504,31274]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4774166.300815131,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.7,\"onlineExpGained\":1176104.9475941781,\"onlineMoneyMade\":0,\"onlineRunningTime\":20772.61000004205,\"pid\":282,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,13168,27982,23044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3638455.5522934427,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.70799999998,\"onlineExpGained\":929895.8643814552,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":20772.61000004205,\"pid\":283,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,266652,0,179414]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3356137.5592902894,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.711,\"onlineExpGained\":780204,\"onlineMoneyMade\":0,\"onlineRunningTime\":20772.61000004205,\"pid\":284,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,6584,31274,27982]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5928694.174824492,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.71499999997,\"onlineExpGained\":1334098.6549780497,\"onlineMoneyMade\":0,\"onlineRunningTime\":20772.61000004205,\"pid\":285,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[6586369128,1528,10696,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2305514.5221845205,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.722,\"onlineExpGained\":473244.8763375539,\"onlineMoneyMade\":6586369128,\"onlineRunningTime\":20772.61000004205,\"pid\":286,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,2292,11460,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1660394.587472346,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.723,\"onlineExpGained\":424049.80685717176,\"onlineMoneyMade\":0,\"onlineRunningTime\":20772.61000004205,\"pid\":287,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[11854.142584818144,5348,11460,7640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2349307.7012231294,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.72699999998,\"onlineExpGained\":522499.3834652261,\"onlineMoneyMade\":11854.142584818144,\"onlineRunningTime\":20772.61000004205,\"pid\":288,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[1532502252,3056,9932,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1693559.5002628253,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.73299999998,\"onlineExpGained\":387919.6947072861,\"onlineMoneyMade\":1532502252,\"onlineRunningTime\":20772.61000004205,\"pid\":289,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[449332084,2292,12988,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2102060.9960044576,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.738,\"onlineExpGained\":426309.3189877509,\"onlineMoneyMade\":449332084,\"onlineRunningTime\":20772.61000004205,\"pid\":290,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[4503442312,2292,7640,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1519326.2404570363,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.74,\"onlineExpGained\":300364.0319103172,\"onlineMoneyMade\":4503442312,\"onlineRunningTime\":20772.61000004205,\"pid\":291,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,135228,0,47368]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1288338.7024600587,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.74499999997,\"onlineExpGained\":283062,\"onlineMoneyMade\":0,\"onlineRunningTime\":20772.61000004205,\"pid\":292,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[9052778868,1528,9932,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1499948.5692080783,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.749,\"onlineExpGained\":345502.47962777596,\"onlineMoneyMade\":9052778868,\"onlineRunningTime\":20772.61000004205,\"pid\":293,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[4210855932,2010,3216,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1042928.4296558107,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.75300000003,\"onlineExpGained\":226910.9836662319,\"onlineMoneyMade\":4210855932,\"onlineRunningTime\":20772.410000042048,\"pid\":294,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[6202495788,2412,6432,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1320036.7823838755,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.755,\"onlineExpGained\":290844.27147339535,\"onlineMoneyMade\":6202495788,\"onlineRunningTime\":20772.410000042048,\"pid\":295,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[10490885862,2010,3618,3618]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":908026.6464515197,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.75999999995,\"onlineExpGained\":209304.68787352898,\"onlineMoneyMade\":10490885862,\"onlineRunningTime\":20772.410000042048,\"pid\":296,\"ramUsage\":2.45,\"server\":\"pserv-3\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-3\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":442,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-7\",\"httpPortOpen\":false,\"ip\":\"34.3.7.7\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,7012386,7078230,6946542]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":501076641.98052114,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.769,\"onlineExpGained\":122829984.13266765,\"onlineMoneyMade\":0,\"onlineRunningTime\":20761.61000004201,\"pid\":297,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,25086564,25086564,18304632]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":620075466.0430101,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.77699999997,\"onlineExpGained\":164803941.66345403,\"onlineMoneyMade\":0,\"onlineRunningTime\":20761.61000004201,\"pid\":298,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[4000000000,19851966,19917810,19851966]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1253525317.3123946,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.77899999998,\"onlineExpGained\":288919892.7566517,\"onlineMoneyMade\":4000000000,\"onlineRunningTime\":20761.61000004201,\"pid\":299,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[172500000,11094714,11127636,10930104]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":634135683.8210714,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.784,\"onlineExpGained\":154029527.04045573,\"onlineMoneyMade\":172500000,\"onlineRunningTime\":20761.61000004201,\"pid\":300,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,3851874,4082328,3950640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":342122470.99431473,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.789,\"onlineExpGained\":84515354.35845362,\"onlineMoneyMade\":0,\"onlineRunningTime\":20761.61000004201,\"pid\":301,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[150000000,2864214,2962980,2765448]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":206914905.29951105,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.79299999998,\"onlineExpGained\":50629764.17349679,\"onlineMoneyMade\":150000000,\"onlineRunningTime\":20761.61000004201,\"pid\":302,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,2041164,2403306,2238696]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":162496598.88688228,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.798,\"onlineExpGained\":40388598.22184136,\"onlineMoneyMade\":0,\"onlineRunningTime\":20761.61000004201,\"pid\":303,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,1613178,1909476,1679022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":179390442.18137106,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.80200000003,\"onlineExpGained\":44387163.502234414,\"onlineMoneyMade\":0,\"onlineRunningTime\":20761.61000004201,\"pid\":304,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,1152270,1448568,1185192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":127571213.09992158,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.808,\"onlineExpGained\":32388194.506711736,\"onlineMoneyMade\":0,\"onlineRunningTime\":20761.61000004201,\"pid\":305,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,987660,1448568,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":81494021.75727738,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.811,\"onlineExpGained\":23170637.96562058,\"onlineMoneyMade\":0,\"onlineRunningTime\":20761.61000004201,\"pid\":306,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,724284,1020582,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":109895398.35668957,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.818,\"onlineExpGained\":25210830.152549293,\"onlineMoneyMade\":0,\"onlineRunningTime\":20761.61000004201,\"pid\":307,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,790128,0,1975320]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35398569.39233475,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.82299999997,\"onlineExpGained\":7530907.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20761.61000004201,\"pid\":308,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[1526324475,16460,62548,54318]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7613747.74762615,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.82499999998,\"onlineExpGained\":1589065.3621027481,\"onlineMoneyMade\":1526324475,\"onlineRunningTime\":20761.410000042008,\"pid\":309,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[7177.125029246463,19752,83946,74070]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9931521.01964676,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.83799999996,\"onlineExpGained\":2102496.830244573,\"onlineMoneyMade\":7177.125029246463,\"onlineRunningTime\":20761.410000042008,\"pid\":310,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[2400039273.707874,54318,161308,138264]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13589540.03655502,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.84699999998,\"onlineExpGained\":3038049.8824450825,\"onlineMoneyMade\":2400039273.707874,\"onlineRunningTime\":20761.410000042008,\"pid\":311,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[1464364843.5108943,11522,42796,34566]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6869868.827285627,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.852,\"onlineExpGained\":1354502.8890831824,\"onlineMoneyMade\":1464364843.5108943,\"onlineRunningTime\":20761.410000042008,\"pid\":312,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,9876,26336,24690]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4654914.734896081,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.857,\"onlineExpGained\":929895.8643814552,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":20761.410000042008,\"pid\":313,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,253484,0,174476]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3282064.45373985,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.862,\"onlineExpGained\":745638,\"onlineMoneyMade\":0,\"onlineRunningTime\":20761.410000042008,\"pid\":314,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[1818749833.191285,8230,31274,24690]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6019340.02927747,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.865,\"onlineExpGained\":1316428.4741174132,\"onlineMoneyMade\":1818749833.191285,\"onlineRunningTime\":20761.410000042008,\"pid\":315,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,764,8404,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1904527.6467120678,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.87000000002,\"onlineExpGained\":420071.2947265928,\"onlineMoneyMade\":0,\"onlineRunningTime\":20761.410000042008,\"pid\":316,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[24086316288,2292,15280,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2520946.2967699156,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.87399999998,\"onlineExpGained\":496866.44035789825,\"onlineMoneyMade\":24086316288,\"onlineRunningTime\":20761.410000042008,\"pid\":317,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,1528,14516,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2562187.6131451847,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.879,\"onlineExpGained\":513567.77007265814,\"onlineMoneyMade\":0,\"onlineRunningTime\":20761.410000042008,\"pid\":318,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[3872789344,6112,9932,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2147675.692054696,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.884,\"onlineExpGained\":454532.1675358099,\"onlineMoneyMade\":3872789344,\"onlineRunningTime\":20761.410000042008,\"pid\":319,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[4779120695,4584,11460,7640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2180424.0859560287,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.88700000002,\"onlineExpGained\":429984.39932385215,\"onlineMoneyMade\":4779120695,\"onlineRunningTime\":20761.410000042008,\"pid\":320,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[4050184796,3820,9168,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1745880.633726426,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.891,\"onlineExpGained\":342275.292176873,\"onlineMoneyMade\":4050184796,\"onlineRunningTime\":20761.410000042008,\"pid\":321,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,124532,0,53480]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1249680.5038252159,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.895,\"onlineExpGained\":287073,\"onlineMoneyMade\":0,\"onlineRunningTime\":20761.410000042008,\"pid\":322,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[10424026696,2292,9168,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1807959.353986915,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.90099999998,\"onlineExpGained\":364486.13235457684,\"onlineMoneyMade\":10424026696,\"onlineRunningTime\":20761.410000042008,\"pid\":323,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[2384036880,1206,3216,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":960281.8063255039,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.907,\"onlineExpGained\":202306.17820844776,\"onlineMoneyMade\":2384036880,\"onlineRunningTime\":20761.410000042008,\"pid\":324,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[7356373272,2412,5628,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1290043.1134927468,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.91,\"onlineExpGained\":257384.31103840296,\"onlineMoneyMade\":7356373272,\"onlineRunningTime\":20761.410000042008,\"pid\":325,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[12947715696,2814,4824,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1116766.0796279926,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.91499999998,\"onlineExpGained\":233040.27103444462,\"onlineMoneyMade\":12947715696,\"onlineRunningTime\":20761.410000042008,\"pid\":326,\"ramUsage\":2.45,\"server\":\"pserv-7\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-7\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":472,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-20\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-20\",\"httpPortOpen\":false,\"ip\":\"66.7.1.1\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[5312500000,7078230,7078230,6946542]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":572620410.4996152,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.91999999998,\"onlineExpGained\":139215849.65531662,\"onlineMoneyMade\":5312500000,\"onlineRunningTime\":20750.410000041968,\"pid\":327,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[372750000,25119486,25053642,18304632]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":695106782.9182853,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.924,\"onlineExpGained\":182174725.04064164,\"onlineMoneyMade\":372750000,\"onlineRunningTime\":20750.410000041968,\"pid\":328,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[12050000000,19917810,19917810,19819044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1292924536.780173,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.92799999999,\"onlineExpGained\":313403766.6847581,\"onlineMoneyMade\":12050000000,\"onlineRunningTime\":20750.410000041968,\"pid\":329,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[12305000000,11094714,11094714,10930104]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":836080483.0310233,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.934,\"onlineExpGained\":186046900.63875443,\"onlineMoneyMade\":12305000000,\"onlineRunningTime\":20750.410000041968,\"pid\":330,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[2887500000,3983562,4115250,3950640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":389954992.6569774,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.94,\"onlineExpGained\":94848436.00446893,\"onlineMoneyMade\":2887500000,\"onlineRunningTime\":20750.410000041968,\"pid\":331,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[825000000,2732526,2962980,2765448]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":211085277.55212808,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.94499999998,\"onlineExpGained\":52229946.35344295,\"onlineMoneyMade\":825000000,\"onlineRunningTime\":20750.410000041968,\"pid\":332,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2900000000,2107008,2370384,2238696]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":190660822.74901596,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.94900000002,\"onlineExpGained\":45829217.633658305,\"onlineMoneyMade\":2900000000,\"onlineRunningTime\":20750.410000041968,\"pid\":333,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[875000000,1777788,1843632,1711944]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":186448195.8753401,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.954,\"onlineExpGained\":46011084.118169814,\"onlineMoneyMade\":875000000,\"onlineRunningTime\":20750.410000041968,\"pid\":334,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[2625000000,1185192,1415646,1185192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":138739625.93536603,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.95799999998,\"onlineExpGained\":35636035.738582544,\"onlineMoneyMade\":2625000000,\"onlineRunningTime\":20750.410000041968,\"pid\":335,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[3750000000,1152270,1481490,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":98183938.99195069,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.963,\"onlineExpGained\":26371002.325512927,\"onlineMoneyMade\":3750000000,\"onlineRunningTime\":20750.410000041968,\"pid\":336,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[7500000000,888894,954738,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":129764068.03317587,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.97,\"onlineExpGained\":29137106.97958566,\"onlineMoneyMade\":7500000000,\"onlineRunningTime\":20750.410000041968,\"pid\":337,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1613178,0,2205774]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":38347545.05087898,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.973,\"onlineExpGained\":8419801.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20750.410000041968,\"pid\":338,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[9157946850,21398,82300,64194]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9951453.621063,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.97699999998,\"onlineExpGained\":2065784.9707335725,\"onlineMoneyMade\":9157946850,\"onlineRunningTime\":20750.410000041968,\"pid\":339,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[3375014370.1054134,27982,83946,79008]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10269099.991110694,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.984,\"onlineExpGained\":2226476.987310593,\"onlineMoneyMade\":3375014370.1054134,\"onlineRunningTime\":20750.410000041968,\"pid\":340,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[4800041866.188804,69132,148140,130034]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13275164.106667364,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.986,\"onlineExpGained\":2918532.6916382336,\"onlineMoneyMade\":4800041866.188804,\"onlineRunningTime\":20750.410000041968,\"pid\":341,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[2928720650,8230,47734,37858]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7204879.385924029,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.99,\"onlineExpGained\":1460220.1877433332,\"onlineMoneyMade\":2928720650,\"onlineRunningTime\":20750.410000041968,\"pid\":342,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[8613118264.36927,11522,34566,26336]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5497159.215987707,\"offlineMoneyMade\":0,\"offlineRunningTime\":141248.99599999998,\"onlineExpGained\":1145523.890904691,\"onlineMoneyMade\":8613118264.36927,\"onlineRunningTime\":20750.410000041968,\"pid\":343,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,266652,0,176122]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3488791.08519763,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.001,\"onlineExpGained\":769093.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20750.410000041968,\"pid\":344,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[3637491200,6584,34566,31274]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6747418.60962854,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.004,\"onlineExpGained\":1528470.6444450498,\"onlineMoneyMade\":3637491200,\"onlineRunningTime\":20750.410000041968,\"pid\":345,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,0,9932,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2097505.7668137415,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.007,\"onlineExpGained\":451975.44369316945,\"onlineMoneyMade\":0,\"onlineRunningTime\":20750.410000041968,\"pid\":346,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,764,10696,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1709973.693954082,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.012,\"onlineExpGained\":402633.1499451934,\"onlineMoneyMade\":0,\"onlineRunningTime\":20750.410000041968,\"pid\":347,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[12247978678,3056,12224,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2418461.0000535976,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.01499999998,\"onlineExpGained\":509101.96337637416,\"onlineMoneyMade\":12247978678,\"onlineRunningTime\":20750.410000041968,\"pid\":348,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[8398277640,2292,9168,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1716002.8266877374,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.01899999997,\"onlineExpGained\":384001.31395266694,\"onlineMoneyMade\":8398277640,\"onlineRunningTime\":20750.410000041968,\"pid\":349,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[8580516852,1528,13752,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2104639.4786022455,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.025,\"onlineExpGained\":407933.9173072444,\"onlineMoneyMade\":8580516852,\"onlineRunningTime\":20750.410000041968,\"pid\":350,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[6008146424,2292,9932,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1852118.4254730365,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.029,\"onlineExpGained\":366723.52733236394,\"onlineMoneyMade\":6008146424,\"onlineRunningTime\":20750.410000041968,\"pid\":351,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,111544,0,53480]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1211904.145146584,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.034,\"onlineExpGained\":288792,\"onlineMoneyMade\":0,\"onlineRunningTime\":20750.410000041968,\"pid\":352,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[3365368048,3056,7640,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1543611.9717168636,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.038,\"onlineExpGained\":334112.2879916954,\"onlineMoneyMade\":3365368048,\"onlineRunningTime\":20750.410000041968,\"pid\":353,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[4561617012,2412,2814,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":959456.2076103832,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.042,\"onlineExpGained\":218709.38184697053,\"onlineMoneyMade\":4561617012,\"onlineRunningTime\":20750.410000041968,\"pid\":354,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[36300600,804,6030,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1084123.3267658514,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.047,\"onlineExpGained\":239367.4092657147,\"onlineMoneyMade\":36300600,\"onlineRunningTime\":20750.410000041968,\"pid\":355,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[6456291654,2010,4824,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1070003.674541622,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.05299999999,\"onlineExpGained\":228724.71045973268,\"onlineMoneyMade\":6456291654,\"onlineRunningTime\":20750.410000041968,\"pid\":356,\"ramUsage\":2.45,\"server\":\"pserv-20\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-20\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":502,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-4\",\"httpPortOpen\":false,\"ip\":\"32.1.0.5\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[750000000,7012386,7078230,6946542]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":502362959.5398375,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.05599999998,\"onlineExpGained\":125070239.18459232,\"onlineMoneyMade\":750000000,\"onlineRunningTime\":20739.410000041928,\"pid\":357,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,25086564,25086564,18271710]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":619025585.3845088,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.05999999997,\"onlineExpGained\":164694691.4535346,\"onlineMoneyMade\":0,\"onlineRunningTime\":20739.410000041928,\"pid\":358,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[1550000000,19917810,19884888,19819044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1131105656.5666523,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.065,\"onlineExpGained\":281131882.9624717,\"onlineMoneyMade\":1550000000,\"onlineRunningTime\":20739.410000041928,\"pid\":359,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[5232500000,11094714,11094714,10897182]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":736259356.0672572,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.067,\"onlineExpGained\":167060445.38888833,\"onlineMoneyMade\":5232500000,\"onlineRunningTime\":20739.410000041928,\"pid\":360,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[137500000,3917718,4082328,3950640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":348170169.1126241,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.071,\"onlineExpGained\":85440704.95361917,\"onlineMoneyMade\":137500000,\"onlineRunningTime\":20739.410000041928,\"pid\":361,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[600000000,2798370,2930058,2765448]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":205465645.39110368,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.07599999997,\"onlineExpGained\":51461858.90706882,\"onlineMoneyMade\":600000000,\"onlineRunningTime\":20739.410000041928,\"pid\":362,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[400000000,2139930,2370384,2238696]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":161880545.89376715,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.082,\"onlineExpGained\":40900656.51942414,\"onlineMoneyMade\":400000000,\"onlineRunningTime\":20739.410000041928,\"pid\":363,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[625000000,1810710,1876554,1679022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":184696077.13053486,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.085,\"onlineExpGained\":45469777.24619135,\"onlineMoneyMade\":625000000,\"onlineRunningTime\":20739.410000041928,\"pid\":364,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[187500000,1185192,1448568,1185192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":126694811.92491485,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.09000000003,\"onlineExpGained\":32568630.13070456,\"onlineMoneyMade\":187500000,\"onlineRunningTime\":20739.410000041928,\"pid\":365,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[500000000,1086426,1415646,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":81498363.20232758,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.098,\"onlineExpGained\":23362659.82721412,\"onlineMoneyMade\":500000000,\"onlineRunningTime\":20739.410000041928,\"pid\":366,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[500000000,724284,1020582,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":108890529.24428408,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.10299999997,\"onlineExpGained\":25417476.30134068,\"onlineMoneyMade\":500000000,\"onlineRunningTime\":20739.410000041928,\"pid\":367,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1613178,0,2139930]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":37170460.25128012,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.10700000002,\"onlineExpGained\":8148195,\"onlineMoneyMade\":0,\"onlineRunningTime\":20739.410000041928,\"pid\":368,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[12210595800,32920,75716,59256]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8422991.196424857,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.11299999998,\"onlineExpGained\":1986331.702628435,\"onlineMoneyMade\":12210595800,\"onlineRunningTime\":20739.410000041928,\"pid\":369,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[1125000000,16460,93822,88884]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10362588.394944517,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.11799999996,\"onlineExpGained\":2376286.3437653678,\"onlineMoneyMade\":1125000000,\"onlineRunningTime\":20739.410000041928,\"pid\":370,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[2397457588.528452,67486,167892,139910]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13637488.251526767,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.12199999997,\"onlineExpGained\":3122868.5339854276,\"onlineMoneyMade\":2397457588.528452,\"onlineRunningTime\":20739.410000041928,\"pid\":371,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[1464376842.0486457,11522,46088,37858]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6568347.154783699,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.126,\"onlineExpGained\":1453612.8565770737,\"onlineMoneyMade\":1464376842.0486457,\"onlineRunningTime\":20739.410000041928,\"pid\":372,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,8230,34566,26336]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4473118.694890503,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.13100000002,\"onlineExpGained\":1064663.3809584777,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":20739.410000041928,\"pid\":373,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,261714,0,181060]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3320367.520995418,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.135,\"onlineExpGained\":795018,\"onlineMoneyMade\":0,\"onlineRunningTime\":20739.410000041928,\"pid\":374,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[3637491200,9876,32920,27982]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5872441.396887926,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.137,\"onlineExpGained\":1457789.9210025046,\"onlineMoneyMade\":3637491200,\"onlineRunningTime\":20739.410000041928,\"pid\":375,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[6875000000,764,11460,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2230477.7833504193,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.14399999997,\"onlineExpGained\":505149.0253041305,\"onlineMoneyMade\":6875000000,\"onlineRunningTime\":20739.410000041928,\"pid\":376,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[641070108,2292,13752,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2376064.5711367764,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.14900000003,\"onlineExpGained\":501149.7717402939,\"onlineMoneyMade\":641070108,\"onlineRunningTime\":20739.410000041928,\"pid\":377,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[12247977150,2292,13752,7640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2690255.0378251392,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.153,\"onlineExpGained\":549294.22364293,\"onlineMoneyMade\":12247977150,\"onlineRunningTime\":20739.410000041928,\"pid\":378,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[12223637864,3820,11460,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2092153.0164664884,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.158,\"onlineExpGained\":454532.1675358098,\"onlineMoneyMade\":12223637864,\"onlineRunningTime\":20739.410000041928,\"pid\":379,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[4160170236,3056,12988,7640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2042597.7024802745,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.16199999995,\"onlineExpGained\":433659.4796599535,\"onlineMoneyMade\":4160170236,\"onlineRunningTime\":20739.410000041928,\"pid\":380,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[2902985316,3056,9168,7640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1539588.8473226426,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.16600000003,\"onlineExpGained\":377201.3423990028,\"onlineMoneyMade\":2902985316,\"onlineRunningTime\":20739.410000041928,\"pid\":381,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,118420,0,49660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1197086.1137377047,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.16999999998,\"onlineExpGained\":275613,\"onlineMoneyMade\":0,\"onlineRunningTime\":20739.410000041928,\"pid\":382,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[6462610296,3820,9932,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1889152.0966736365,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.17299999998,\"onlineExpGained\":394859.97671745816,\"onlineMoneyMade\":6462610296,\"onlineRunningTime\":20739.410000041928,\"pid\":383,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[3046867746,1608,3216,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":810424.1320667982,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.17899999997,\"onlineExpGained\":210507.78002770912,\"onlineMoneyMade\":3046867746,\"onlineRunningTime\":20739.410000041928,\"pid\":384,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[1095941244,804,6030,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1159598.7713436813,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.183,\"onlineExpGained\":252236.62481763493,\"onlineMoneyMade\":1095941244,\"onlineRunningTime\":20739.410000041928,\"pid\":385,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[8115291384,1608,4422,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":960714.756757336,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.18600000002,\"onlineExpGained\":220093.5893103088,\"onlineMoneyMade\":8115291384,\"onlineRunningTime\":20739.410000041928,\"pid\":386,\"ramUsage\":2.45,\"server\":\"pserv-4\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-4\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":532,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-5\",\"httpPortOpen\":false,\"ip\":\"32.3.9.4\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,7045308,7144074,6913620]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":502976715.39010173,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.18999999997,\"onlineExpGained\":123022005.99426119,\"onlineMoneyMade\":0,\"onlineRunningTime\":20728.410000041888,\"pid\":387,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,25086564,25020720,18271710]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":617965135.8270848,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.193,\"onlineExpGained\":164476191.03369576,\"onlineMoneyMade\":0,\"onlineRunningTime\":20728.410000041888,\"pid\":388,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,19917810,19884888,19819044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1130579983.6369286,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.19999999998,\"onlineExpGained\":276347092.6314075,\"onlineMoneyMade\":0,\"onlineRunningTime\":20728.410000041888,\"pid\":389,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,11061792,11127636,10897182]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":627191315.5220395,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.20400000003,\"onlineExpGained\":153316898.6932758,\"onlineMoneyMade\":0,\"onlineRunningTime\":20728.410000041888,\"pid\":390,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,3786030,4082328,3950640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":345909153.5794679,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.209,\"onlineExpGained\":84900917.10643926,\"onlineMoneyMade\":0,\"onlineRunningTime\":20728.410000041888,\"pid\":391,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[75000000,2798370,2962980,2765448]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":205045296.21153295,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.21499999997,\"onlineExpGained\":50437742.31190325,\"onlineMoneyMade\":75000000,\"onlineRunningTime\":20728.410000041888,\"pid\":392,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,2238696,2436228,2238696]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":165634577.93276316,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.21599999996,\"onlineExpGained\":40708634.65783059,\"onlineMoneyMade\":0,\"onlineRunningTime\":20728.410000041888,\"pid\":393,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[125000000,1613178,1876554,1679022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":178515617.4522153,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.22100000002,\"onlineExpGained\":44296945.690238,\"onlineMoneyMade\":125000000,\"onlineRunningTime\":20728.410000041888,\"pid\":394,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[1125000000,1251036,1382724,1218114]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":139932803.33802992,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.22499999998,\"onlineExpGained\":33651243.87466149,\"onlineMoneyMade\":1125000000,\"onlineRunningTime\":20728.410000041888,\"pid\":395,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[500000000,1053504,1415646,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82750185.6637887,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.231,\"onlineExpGained\":23298652.540016275,\"onlineMoneyMade\":500000000,\"onlineRunningTime\":20728.410000041888,\"pid\":396,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,790128,1020582,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":108889149.40065873,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.234,\"onlineExpGained\":25107507.0781536,\"onlineMoneyMade\":0,\"onlineRunningTime\":20728.410000041888,\"pid\":397,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,757206,0,1876554]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":33790828.58604549,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.238,\"onlineExpGained\":7160535,\"onlineMoneyMade\":0,\"onlineRunningTime\":20728.410000041888,\"pid\":398,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[4578992530.828356,24690,64194,52672]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8189527.0402897075,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.242,\"onlineExpGained\":1673815.514748228,\"onlineMoneyMade\":4578992530.828356,\"onlineRunningTime\":20728.410000041888,\"pid\":399,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[3375021561.11744,27982,77362,64194]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8537084.339559956,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.24500000002,\"onlineExpGained\":1968184.9934230526,\"onlineMoneyMade\":3375021561.11744,\"onlineRunningTime\":20728.410000041888,\"pid\":400,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[3600083660.4839687,64194,161308,136618]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":14026823.464984795,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.249,\"onlineExpGained\":3092025.3879707563,\"onlineMoneyMade\":3600083660.4839687,\"onlineRunningTime\":20728.410000041888,\"pid\":401,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[1464360325,6584,41150,32920]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6482014.3852922525,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.256,\"onlineExpGained\":1242178.2592567722,\"onlineMoneyMade\":1464360325,\"onlineRunningTime\":20728.410000041888,\"pid\":402,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,6584,29628,18106]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4300143.950243108,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.259,\"onlineExpGained\":849035.3544352417,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":20728.410000041888,\"pid\":403,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,241962,0,179414]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3415735.316850059,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.264,\"onlineExpGained\":761686.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20728.410000041888,\"pid\":404,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,6584,27982,24690]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5641782.518058655,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.269,\"onlineExpGained\":1183902.1176626405,\"onlineMoneyMade\":0,\"onlineRunningTime\":20728.410000041888,\"pid\":405,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,0,9932,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2202921.2740484,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.27299999996,\"onlineExpGained\":441340.72737097717,\"onlineMoneyMade\":0,\"onlineRunningTime\":20728.410000041888,\"pid\":406,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[34227964,4584,12988,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2353866.399245374,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.277,\"onlineExpGained\":484016.44621071126,\"onlineMoneyMade\":34227964,\"onlineRunningTime\":20728.410000041888,\"pid\":407,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,764,11460,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1954174.570818132,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.279,\"onlineExpGained\":433183.2495395465,\"onlineMoneyMade\":0,\"onlineRunningTime\":20728.410000041888,\"pid\":408,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[23205736,2292,8404,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1612200.2016098993,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.286,\"onlineExpGained\":333062.3641426193,\"onlineMoneyMade\":23205736,\"onlineRunningTime\":20728.410000041888,\"pid\":409,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[0,0,11460,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1830041.8200156414,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.29100000003,\"onlineExpGained\":352807.712265725,\"onlineMoneyMade\":0,\"onlineRunningTime\":20728.410000041888,\"pid\":410,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[4754749416,4584,7640,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1483607.7429521368,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.29400000002,\"onlineExpGained\":317827.0570213821,\"onlineMoneyMade\":4754749416,\"onlineRunningTime\":20728.410000041888,\"pid\":411,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,126060,0,48132]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1133577.762729328,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.29799999998,\"onlineExpGained\":272748,\"onlineMoneyMade\":0,\"onlineRunningTime\":20728.410000041888,\"pid\":412,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[19957439492,3820,8404,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1710219.6355157192,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.302,\"onlineExpGained\":353095.9407184963,\"onlineMoneyMade\":19957439492,\"onlineRunningTime\":20728.410000041888,\"pid\":413,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[2077830264,1206,3216,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":866814.4563974347,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.306,\"onlineExpGained\":202306.1782084477,\"onlineMoneyMade\":2077830264,\"onlineRunningTime\":20728.410000041888,\"pid\":414,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[0,0,6432,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1102652.3119978586,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.31299999997,\"onlineExpGained\":229072.0368241787,\"onlineMoneyMade\":0,\"onlineRunningTime\":20728.410000041888,\"pid\":415,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[4367778642,2010,4422,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1004689.9820198974,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.316,\"onlineExpGained\":222251.36959766477,\"onlineMoneyMade\":4367778642,\"onlineRunningTime\":20728.410000041888,\"pid\":416,\"ramUsage\":2.45,\"server\":\"pserv-5\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-5\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":562,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-6\",\"httpPortOpen\":false,\"ip\":\"7.6.0.2\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[1937500658.557383,7045308,7111152,6913620]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":560591697.7129616,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.32100000003,\"onlineExpGained\":128910676.41646308,\"onlineMoneyMade\":1937500658.557383,\"onlineRunningTime\":20717.410000041848,\"pid\":417,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[253750000,25086564,24987798,18271710]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":733135086.3413688,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.32699999996,\"onlineExpGained\":176247901.152514,\"onlineMoneyMade\":253750000,\"onlineRunningTime\":20717.410000041848,\"pid\":418,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,19917810,19884888,19786122]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1129102135.4745603,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.32899999997,\"onlineExpGained\":276194386.5570118,\"onlineMoneyMade\":0,\"onlineRunningTime\":20717.410000041848,\"pid\":419,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,11061792,11094714,10897182]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":625208336.8450543,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.333,\"onlineExpGained\":153113290.59408155,\"onlineMoneyMade\":0,\"onlineRunningTime\":20717.410000041848,\"pid\":420,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,3884796,4082328,3950640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":344405306.4624784,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.338,\"onlineExpGained\":84746692.007245,\"onlineMoneyMade\":0,\"onlineRunningTime\":20717.410000041848,\"pid\":421,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,2798370,2962980,2765448]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":201917345.53666094,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.342,\"onlineExpGained\":50117705.87591402,\"onlineMoneyMade\":0,\"onlineRunningTime\":20717.410000041848,\"pid\":422,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[1500000000,2172852,2337462,2238696]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":185674470.94589823,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.34600000002,\"onlineExpGained\":42756867.848161675,\"onlineMoneyMade\":1500000000,\"onlineRunningTime\":20717.410000041848,\"pid\":423,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,1777788,1876554,1679022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174987826.64023075,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.351,\"onlineExpGained\":43936074.44225236,\"onlineMoneyMade\":0,\"onlineRunningTime\":20717.410000041848,\"pid\":424,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,1053504,1415646,1185192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":124048159.94458851,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.354,\"onlineExpGained\":32027323.25872609,\"onlineMoneyMade\":0,\"onlineRunningTime\":20717.410000041848,\"pid\":425,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[2000000000,1086426,1415646,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":94648731.23579617,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.35799999998,\"onlineExpGained\":24514790.996775366,\"onlineMoneyMade\":2000000000,\"onlineRunningTime\":20717.410000041848,\"pid\":426,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[500000000,757206,987660,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":109901430.84652804,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.362,\"onlineExpGained\":25210830.152549293,\"onlineMoneyMade\":500000000,\"onlineRunningTime\":20717.410000041848,\"pid\":427,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,954738,0,1909476]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34327650.44301396,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.36899999998,\"onlineExpGained\":7283992.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20717.410000041848,\"pid\":428,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[3052670619.7453175,26336,67486,51026]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8532205.87758683,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.373,\"onlineExpGained\":1705596.821990283,\"onlineMoneyMade\":3052670619.7453175,\"onlineRunningTime\":20717.410000041848,\"pid\":429,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[4500058632.041555,27982,74070,62548]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9302178.571486384,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.378,\"onlineExpGained\":1921692.4345232956,\"onlineMoneyMade\":4500058632.041555,\"onlineRunningTime\":20717.410000041848,\"pid\":430,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[4800178430.483632,64194,159662,131680]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":14512552.224939464,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.38299999997,\"onlineExpGained\":3065037.6352079194,\"onlineMoneyMade\":4800178430.483632,\"onlineRunningTime\":20717.410000041848,\"pid\":431,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[4518.510894321558,9876,37858,27982]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5393353.630431492,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.38700000002,\"onlineExpGained\":1116638.9670978433,\"onlineMoneyMade\":4518.510894321558,\"onlineRunningTime\":20717.410000041848,\"pid\":432,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[175920.16555677468,11522,26336,16460]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4021973.85287612,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.39,\"onlineExpGained\":801866.7236332837,\"onlineMoneyMade\":175920.16555677468,\"onlineRunningTime\":20717.410000041848,\"pid\":433,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,281466,0,182706]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3629337.165900437,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.39500000002,\"onlineExpGained\":798721.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20717.410000041848,\"pid\":434,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,6584,29628,23044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5511237.0315248305,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.4,\"onlineExpGained\":1166231.936802004,\"onlineMoneyMade\":0,\"onlineRunningTime\":20717.410000041848,\"pid\":435,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,1528,8404,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2064878.2610397176,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.403,\"onlineExpGained\":414753.9365654966,\"onlineMoneyMade\":0,\"onlineRunningTime\":20717.410000041848,\"pid\":436,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[1829016,3056,12224,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2113280.692145902,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.40799999997,\"onlineExpGained\":441183.1323867545,\"onlineMoneyMade\":1829016,\"onlineRunningTime\":20717.410000041848,\"pid\":437,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[6123988575,2292,10696,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2327667.885814463,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.41100000002,\"onlineExpGained\":442114.8629321144,\"onlineMoneyMade\":6123988575,\"onlineRunningTime\":20717.410000041848,\"pid\":438,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[4019891432,1528,6876,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1559549.4928931196,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.41300000003,\"onlineExpGained\":305633.6988602859,\"onlineMoneyMade\":4019891432,\"onlineRunningTime\":20717.410000041848,\"pid\":439,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[4982808,3056,8404,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1802148.8703577623,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.418,\"onlineExpGained\":341782.4712574211,\"onlineMoneyMade\":4982808,\"onlineRunningTime\":20717.410000041848,\"pid\":440,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[2051792288,3820,8404,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1426032.951487387,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.422,\"onlineExpGained\":321319.6620435951,\"onlineMoneyMade\":2051792288,\"onlineRunningTime\":20717.410000041848,\"pid\":441,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,119184,0,46604]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1169176.767363489,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.429,\"onlineExpGained\":263580,\"onlineMoneyMade\":0,\"onlineRunningTime\":20717.410000041848,\"pid\":442,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[3509048180,3056,6876,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1544228.9584581675,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.43200000003,\"onlineExpGained\":315128.6352648945,\"onlineMoneyMade\":3509048180,\"onlineRunningTime\":20717.410000041848,\"pid\":443,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[3380603724,1608,3216,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":890583.0188193934,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.436,\"onlineExpGained\":207773.91275462197,\"onlineMoneyMade\":3380603724,\"onlineRunningTime\":20717.410000041848,\"pid\":444,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[3253818552,1206,5628,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1113849.022219558,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.43999999997,\"onlineExpGained\":239367.4092657148,\"onlineMoneyMade\":3253818552,\"onlineRunningTime\":20717.410000041848,\"pid\":445,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[14231456466,2010,4422,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1085998.2880461698,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.44400000002,\"onlineExpGained\":230882.49074708868,\"onlineMoneyMade\":14231456466,\"onlineRunningTime\":20717.410000041848,\"pid\":446,\"ramUsage\":2.45,\"server\":\"pserv-6\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-6\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":592,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-8\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-8\",\"httpPortOpen\":false,\"ip\":\"10.7.0.6\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[1125000000,7078230,7078230,6913620]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":499233915.5243844,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.448,\"onlineExpGained\":126094355.7797579,\"onlineMoneyMade\":1125000000,\"onlineRunningTime\":20706.410000041808,\"pid\":447,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,25086564,25053642,18238788]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":616915998.6108466,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.45299999998,\"onlineExpGained\":164476191.03369576,\"onlineMoneyMade\":0,\"onlineRunningTime\":20706.410000041808,\"pid\":448,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2600000000,19917810,19884888,19786122]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1128620230.4831276,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.45899999997,\"onlineExpGained\":284084200.40078765,\"onlineMoneyMade\":2600000000,\"onlineRunningTime\":20706.410000041808,\"pid\":449,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[1667500000,11061792,11061792,10897182]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":623225357.5407405,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.465,\"onlineExpGained\":157338158.6523622,\"onlineMoneyMade\":1667500000,\"onlineRunningTime\":20706.410000041808,\"pid\":450,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[756250000,3950640,4049406,3950640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":345164600.59433275,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.468,\"onlineExpGained\":87137181.04475601,\"onlineMoneyMade\":756250000,\"onlineRunningTime\":20706.410000041808,\"pid\":451,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[900000000,2864214,2930058,2765448]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":210060546.58632657,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.472,\"onlineExpGained\":52293953.64064084,\"onlineMoneyMade\":900000000,\"onlineRunningTime\":20706.410000041808,\"pid\":452,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[500000000,2205774,2403306,2238696]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":165013159.6803194,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.47499999998,\"onlineExpGained\":41412714.817006916,\"onlineMoneyMade\":500000000,\"onlineRunningTime\":20706.410000041808,\"pid\":453,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[500000000,1744866,1909476,1679022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":179403314.27141,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.47900000002,\"onlineExpGained\":45469777.24619137,\"onlineMoneyMade\":500000000,\"onlineRunningTime\":20706.410000041808,\"pid\":454,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[562500000,1119348,1382724,1185192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":118754398.36851461,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.48500000002,\"onlineExpGained\":32297976.694715325,\"onlineMoneyMade\":562500000,\"onlineRunningTime\":20706.410000041808,\"pid\":455,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[750000000,1119348,1448568,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":84005085.23052426,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.489,\"onlineExpGained\":23810710.83759905,\"onlineMoneyMade\":750000000,\"onlineRunningTime\":20706.410000041808,\"pid\":456,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[500000000,757206,921816,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":95751743.6454063,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.49399999995,\"onlineExpGained\":24074276.33419666,\"onlineMoneyMade\":500000000,\"onlineRunningTime\":20706.410000041808,\"pid\":457,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1415646,0,2008242]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35400884.91318629,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.50000000003,\"onlineExpGained\":7654365,\"onlineMoneyMade\":0,\"onlineRunningTime\":20706.410000041808,\"pid\":458,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[6105351764.718014,27982,72424,64194]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8840268.822688814,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.50100000002,\"onlineExpGained\":1996925.47170912,\"onlineMoneyMade\":6105351764.718014,\"onlineRunningTime\":20706.410000041808,\"pid\":459,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[3375007913.1818414,32920,85592,74070]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8625507.483491946,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.506,\"onlineExpGained\":2174818.5885330844,\"onlineMoneyMade\":3375007913.1818414,\"onlineRunningTime\":20706.410000041808,\"pid\":460,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[3600226341.0601516,64194,153078,134972]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12604500.638898827,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.50999999998,\"onlineExpGained\":2991785.163423076,\"onlineMoneyMade\":3600226341.0601516,\"onlineRunningTime\":20706.410000041808,\"pid\":461,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[91048.35879871553,8230,41150,32920]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6405784.100905351,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.516,\"onlineExpGained\":1281822.2462543289,\"onlineMoneyMade\":91048.35879871553,\"onlineRunningTime\":20706.410000041808,\"pid\":462,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[75291.51230645912,8230,26336,24690]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3687610.4222043986,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.521,\"onlineExpGained\":916419.1127237529,\"onlineMoneyMade\":75291.51230645912,\"onlineRunningTime\":20706.410000041808,\"pid\":463,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,276528,0,190936]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3504371.005730849,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.523,\"onlineExpGained\":825880.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20706.410000041808,\"pid\":464,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[6189.850049617601,3292,29628,23044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5318868.140582687,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.532,\"onlineExpGained\":1219242.479383913,\"onlineMoneyMade\":6189.850049617601,\"onlineRunningTime\":20706.410000041808,\"pid\":465,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[6875000000,2292,10696,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2205150.4116656845,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.535,\"onlineExpGained\":462610.1600153616,\"onlineMoneyMade\":6875000000,\"onlineRunningTime\":20706.410000041808,\"pid\":466,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,0,12988,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2135166.7899627644,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.539,\"onlineExpGained\":466883.1206811285,\"onlineMoneyMade\":0,\"onlineRunningTime\":20706.410000041808,\"pid\":467,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,1528,11460,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2201386.0735612554,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.54599999997,\"onlineExpGained\":446580.66962839843,\"onlineMoneyMade\":0,\"onlineRunningTime\":20706.410000041808,\"pid\":468,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[457775048,1528,9168,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1542541.7644625518,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.54899999997,\"onlineExpGained\":333062.3641426193,\"onlineMoneyMade\":457775048,\"onlineRunningTime\":20706.410000041808,\"pid\":469,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[8964012,4584,10696,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1939342.730940193,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.553,\"onlineExpGained\":396908.67629894055,\"onlineMoneyMade\":8964012,\"onlineRunningTime\":20706.410000041808,\"pid\":470,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[7834324928,3056,8404,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1600257.1173346066,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.561,\"onlineExpGained\":321319.6620435951,\"onlineMoneyMade\":7834324928,\"onlineRunningTime\":20706.410000041808,\"pid\":471,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,110780,0,48896]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1195685.3073584193,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.56399999998,\"onlineExpGained\":275040,\"onlineMoneyMade\":0,\"onlineRunningTime\":20706.410000041808,\"pid\":472,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[9319482100,1528,9168,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1709102.4726047488,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.56800000003,\"onlineExpGained\":341705.7490824158,\"onlineMoneyMade\":9319482100,\"onlineRunningTime\":20706.410000041808,\"pid\":473,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[3386271522,2010,3216,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":811274.528303875,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.572,\"onlineExpGained\":215975.5145738834,\"onlineMoneyMade\":3386271522,\"onlineRunningTime\":20706.410000041808,\"pid\":474,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[6451758300,1608,5628,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1155780.4395136477,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.58,\"onlineExpGained\":252236.62481763487,\"onlineMoneyMade\":6451758300,\"onlineRunningTime\":20706.410000041808,\"pid\":475,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[11253682872,2412,4824,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":976110.4558577721,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.584,\"onlineExpGained\":224409.14988502074,\"onlineMoneyMade\":11253682872,\"onlineRunningTime\":20706.410000041808,\"pid\":476,\"ramUsage\":2.45,\"server\":\"pserv-8\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-8\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":622,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-9\",\"httpPortOpen\":false,\"ip\":\"93.4.6.1\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[1125000000,7012386,7078230,6913620]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":531176318.2167694,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.58600000004,\"onlineExpGained\":125902333.91816428,\"onlineMoneyMade\":1125000000,\"onlineRunningTime\":20695.410000041767,\"pid\":477,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,25086564,25020720,18238788]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":615856581.3425785,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.591,\"onlineExpGained\":164366940.8237763,\"onlineMoneyMade\":0,\"onlineRunningTime\":20695.410000041767,\"pid\":478,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,19917810,19851966,19786122]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1126644493.683588,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.59499999997,\"onlineExpGained\":275939876.43301904,\"onlineMoneyMade\":0,\"onlineRunningTime\":20695.410000041767,\"pid\":479,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,11061792,11094714,10897182]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":625226168.921271,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.6,\"onlineExpGained\":153113290.59408155,\"onlineMoneyMade\":0,\"onlineRunningTime\":20695.410000041767,\"pid\":480,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,3786030,4082328,3950640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":345169554.5212518,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.60700000002,\"onlineExpGained\":84823804.55684213,\"onlineMoneyMade\":0,\"onlineRunningTime\":20695.410000041767,\"pid\":481,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[75000000,2699604,2995902,2765448]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":205680256.12647516,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.609,\"onlineExpGained\":50501749.5991011,\"onlineMoneyMade\":75000000,\"onlineRunningTime\":20695.410000041767,\"pid\":482,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,2074086,2436228,2238696]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":163137009.00795162,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.612,\"onlineExpGained\":40452605.5090392,\"onlineMoneyMade\":0,\"onlineRunningTime\":20695.410000041767,\"pid\":483,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[125000000,1777788,1843632,1679022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174992907.22949925,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.61899999998,\"onlineExpGained\":43936074.44225236,\"onlineMoneyMade\":125000000,\"onlineRunningTime\":20695.410000041767,\"pid\":484,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[187500000,1185192,1415646,1185192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":125816942.1847765,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.62099999998,\"onlineExpGained\":32207758.882718913,\"onlineMoneyMade\":187500000,\"onlineRunningTime\":20695.410000041767,\"pid\":485,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[1000000000,987660,1481490,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":92146733.28178728,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.625,\"onlineExpGained\":24258761.84798398,\"onlineMoneyMade\":1000000000,\"onlineRunningTime\":20695.410000041767,\"pid\":486,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[500000000,888894,987660,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":108893635.09220204,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.629,\"onlineExpGained\":25107507.0781536,\"onlineMoneyMade\":500000000,\"onlineRunningTime\":20695.410000041767,\"pid\":487,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1119348,0,1975320]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34341690.924524136,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.634,\"onlineExpGained\":7530907.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20695.410000041767,\"pid\":488,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[4574637680.884281,21398,70778,57610]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8571593.562869694,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.63899999997,\"onlineExpGained\":1811534.5127971328,\"onlineMoneyMade\":4574637680.884281,\"onlineRunningTime\":20695.410000041767,\"pid\":489,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[7913.181841406567,14814,80654,65840]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8927806.79575265,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.64200000002,\"onlineExpGained\":1906194.9148900434,\"onlineMoneyMade\":7913.181841406567,\"onlineRunningTime\":20695.410000041767,\"pid\":490,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[1804261192.4260354,52672,161308,143202]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13897042.68369813,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.64500000002,\"onlineExpGained\":3107446.9609780917,\"onlineMoneyMade\":1804261192.4260354,\"onlineRunningTime\":20695.410000041767,\"pid\":491,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[1464360325,11522,39504,27982]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6001255.4997450905,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.64899999998,\"onlineExpGained\":1156282.9540954,\"onlineMoneyMade\":1464360325,\"onlineRunningTime\":20695.410000041767,\"pid\":492,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,6584,29628,19752]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3776770.3362582047,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.65399999998,\"onlineExpGained\":875988.8577506462,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":20695.410000041767,\"pid\":493,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,265006,0,177768]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3411279.3394103977,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.659,\"onlineExpGained\":765390,\"onlineMoneyMade\":0,\"onlineRunningTime\":20695.410000041767,\"pid\":494,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,4938,29628,21398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4711969.7785417065,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.663,\"onlineExpGained\":1139726.6655110496,\"onlineMoneyMade\":0,\"onlineRunningTime\":20695.410000041767,\"pid\":495,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[7145803620,2292,9168,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2205723.804480828,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.66700000002,\"onlineExpGained\":467927.5181764577,\"onlineMoneyMade\":7145803620,\"onlineRunningTime\":20695.410000041767,\"pid\":496,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[97792,2292,11460,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2006673.0902985611,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.67200000002,\"onlineExpGained\":436899.80100435886,\"onlineMoneyMade\":97792,\"onlineRunningTime\":20695.410000041767,\"pid\":497,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[6123990103,3820,9932,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2040201.7031933842,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.675,\"onlineExpGained\":433183.2495395465,\"onlineMoneyMade\":6123990103,\"onlineRunningTime\":20695.410000041767,\"pid\":498,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[4592499500,2292,9168,3820]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1358493.6144415736,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.68000000002,\"onlineExpGained\":321307.2218787622,\"onlineMoneyMade\":4592499500,\"onlineRunningTime\":20695.410000041767,\"pid\":499,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[4468459516,3820,9932,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1626933.9946701354,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.68300000002,\"onlineExpGained\":367508.0336101301,\"onlineMoneyMade\":4468459516,\"onlineRunningTime\":20695.410000041767,\"pid\":500,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[2561688944,3820,9168,3820]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1448528.251095636,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.688,\"onlineExpGained\":314334.4519991691,\"onlineMoneyMade\":2561688944,\"onlineRunningTime\":20695.410000041767,\"pid\":501,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,116892,0,51188]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1124903.801060924,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.693,\"onlineExpGained\":274467,\"onlineMoneyMade\":0,\"onlineRunningTime\":20695.410000041767,\"pid\":502,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[930640624,1528,7640,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1424644.1177332844,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.697,\"onlineExpGained\":292348.2519927335,\"onlineMoneyMade\":930640624,\"onlineRunningTime\":20695.410000041767,\"pid\":503,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[3103003026,1608,3216,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":934931.5234898127,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.69900000002,\"onlineExpGained\":205040.04548153485,\"onlineMoneyMade\":3103003026,\"onlineRunningTime\":20695.410000041767,\"pid\":504,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[1947464076,1206,5226,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1134481.732984747,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.70299999998,\"onlineExpGained\":249662.78170725092,\"onlineMoneyMade\":1947464076,\"onlineRunningTime\":20695.410000041767,\"pid\":505,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[13148611980,2412,4824,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":994180.5181290917,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.70799999998,\"onlineExpGained\":241671.3921838685,\"onlineMoneyMade\":13148611980,\"onlineRunningTime\":20695.410000041767,\"pid\":506,\"ramUsage\":2.45,\"server\":\"pserv-9\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-9\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":652,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-10\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-10\",\"httpPortOpen\":false,\"ip\":\"91.7.7.9\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,7111152,7078230,6913620]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":499248195.9624326,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.71499999997,\"onlineExpGained\":122637962.2710741,\"onlineMoneyMade\":0,\"onlineRunningTime\":20684.410000041727,\"pid\":507,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,24987798,25020720,18238788]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":615064281.5706378,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.717,\"onlineExpGained\":164285003.16633677,\"onlineMoneyMade\":0,\"onlineRunningTime\":20684.410000041727,\"pid\":508,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[7150000000,19917810,19819044,19786122]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1338300511.5526242,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.72000000003,\"onlineExpGained\":297573236.97240686,\"onlineMoneyMade\":7150000000,\"onlineRunningTime\":20684.410000041727,\"pid\":509,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,11061792,11061792,10897182]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":623243152.0498132,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.726,\"onlineExpGained\":152909682.4948873,\"onlineMoneyMade\":0,\"onlineRunningTime\":20684.410000041727,\"pid\":510,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[1168750000,3950640,4082328,3950640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":382139820.22847766,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.731,\"onlineExpGained\":88602319.48710147,\"onlineMoneyMade\":1168750000,\"onlineRunningTime\":20684.410000041727,\"pid\":511,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1125000000,2732526,2930058,2765448]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":226347308.41396555,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.73299999998,\"onlineExpGained\":52613990.07663003,\"onlineMoneyMade\":1125000000,\"onlineRunningTime\":20684.410000041727,\"pid\":512,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[800000000,2238696,2370384,2238696]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":175663087.42132849,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.738,\"onlineExpGained\":41732751.25299613,\"onlineMoneyMade\":800000000,\"onlineRunningTime\":20684.410000041727,\"pid\":513,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[1500000000,1679022,1843632,1679022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":191463984.1635845,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.743,\"onlineExpGained\":46823044.42613751,\"onlineMoneyMade\":1500000000,\"onlineRunningTime\":20684.410000041727,\"pid\":514,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[937500000,987660,1415646,1185192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":135527386.16068658,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.746,\"onlineExpGained\":33200154.81467944,\"onlineMoneyMade\":937500000,\"onlineRunningTime\":20684.410000041727,\"pid\":515,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[250000000,1152270,1415646,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":81502912.50915906,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.74999999997,\"onlineExpGained\":23170637.96562058,\"onlineMoneyMade\":250000000,\"onlineRunningTime\":20684.410000041727,\"pid\":516,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,757206,987660,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":105862685.08327116,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.755,\"onlineExpGained\":24797537.854966518,\"onlineMoneyMade\":0,\"onlineRunningTime\":20684.410000041727,\"pid\":517,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1514412,0,2107008]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35816411.707936734,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.759,\"onlineExpGained\":8024737.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20684.410000041727,\"pid\":518,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[3052715628.218406,18106,75716,62548]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9117642.768159991,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.76,\"onlineExpGained\":1933362.8572250102,\"onlineMoneyMade\":3052715628.218406,\"onlineRunningTime\":20684.410000041727,\"pid\":519,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[2250000000,24690,95468,79008]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":11139611.850515194,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.767,\"onlineExpGained\":2309130.425354606,\"onlineMoneyMade\":2250000000,\"onlineRunningTime\":20684.410000041727,\"pid\":520,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[4804482365.515802,65840,151432,133326]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13706254.379422337,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.77099999998,\"onlineExpGained\":2991785.1634230763,\"onlineMoneyMade\":4804482365.515802,\"onlineRunningTime\":20684.410000041727,\"pid\":521,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[1464367833.9307287,13168,42796,34566]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6977594.291099977,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.77400000003,\"onlineExpGained\":1347895.5579169232,\"onlineMoneyMade\":1464367833.9307287,\"onlineRunningTime\":20684.410000041727,\"pid\":522,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[12919610904.298254,11522,37858,27982]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5702347.1652438985,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.78,\"onlineExpGained\":1226384.4008509046,\"onlineMoneyMade\":12919610904.298254,\"onlineRunningTime\":20684.410000041727,\"pid\":523,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,261714,0,192582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3505697.7754525994,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.783,\"onlineExpGained\":818473.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20684.410000041727,\"pid\":524,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,6584,32920,24690]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5499107.911271026,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.78599999996,\"onlineExpGained\":1298758.293256777,\"onlineMoneyMade\":0,\"onlineRunningTime\":20684.410000041727,\"pid\":525,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[29570620,3056,9168,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2320727.5931475805,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.79100000003,\"onlineExpGained\":489196.9508208422,\"onlineMoneyMade\":29570620,\"onlineRunningTime\":20684.410000041727,\"pid\":526,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[12667444566,2292,11460,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1820035.6289754417,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.79499999998,\"onlineExpGained\":411199.8127099848,\"onlineMoneyMade\":12667444566,\"onlineRunningTime\":20684.410000041727,\"pid\":527,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,2292,14516,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2360325.713564663,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.80000000002,\"onlineExpGained\":518033.5767689421,\"onlineMoneyMade\":0,\"onlineRunningTime\":20684.410000041727,\"pid\":528,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[506289812,2292,9932,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1615090.837684376,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.80499999996,\"onlineExpGained\":391838.0754619051,\"onlineMoneyMade\":506289812,\"onlineRunningTime\":20684.410000041727,\"pid\":529,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[3457995408,3820,11460,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1801750.4073146267,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.808,\"onlineExpGained\":418959.1583155483,\"onlineMoneyMade\":3457995408,\"onlineRunningTime\":20684.410000041727,\"pid\":530,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[3766053960,2292,9932,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1480131.5030134267,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.813,\"onlineExpGained\":342275.29217687296,\"onlineMoneyMade\":3766053960,\"onlineRunningTime\":20684.410000041727,\"pid\":531,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,132936,0,48132]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1227609.34390663,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.81600000002,\"onlineExpGained\":282489,\"onlineMoneyMade\":0,\"onlineRunningTime\":20684.410000041727,\"pid\":532,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[5932749556,2292,7640,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1382217.2422097307,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.822,\"onlineExpGained\":315128.6352648945,\"onlineMoneyMade\":5932749556,\"onlineRunningTime\":20684.410000041727,\"pid\":533,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[3986730882,2010,2814,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":937094.4931509678,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.82599999997,\"onlineExpGained\":215975.5145738834,\"onlineMoneyMade\":3986730882,\"onlineRunningTime\":20684.410000041727,\"pid\":534,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[2542026900,402,6030,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1036590.9478073787,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.829,\"onlineExpGained\":236793.56615533074,\"onlineMoneyMade\":2542026900,\"onlineRunningTime\":20684.410000041727,\"pid\":535,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[3357044514,804,4020,3618]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":888518.6998356931,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.835,\"onlineExpGained\":198515.7864367491,\"onlineMoneyMade\":3357044514,\"onlineRunningTime\":20684.410000041727,\"pid\":536,\"ramUsage\":2.45,\"server\":\"pserv-10\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-10\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":682,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-11\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-11\",\"httpPortOpen\":false,\"ip\":\"84.1.6.8\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,7012386,7078230,6913620]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":498002917.30698794,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.838,\"onlineExpGained\":122509947.69667841,\"onlineMoneyMade\":0,\"onlineRunningTime\":20673.410000041687,\"pid\":537,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,24987798,24987798,18238788]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":614004775.1969621,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.84199999998,\"onlineExpGained\":164175752.95641732,\"onlineMoneyMade\":0,\"onlineRunningTime\":20673.410000041687,\"pid\":538,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2650000000,19917810,19884888,19720278]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1203863474.4129186,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.845,\"onlineExpGained\":283829690.2767956,\"onlineMoneyMade\":2650000000,\"onlineRunningTime\":20673.410000041687,\"pid\":539,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,11061792,11061792,10864260]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":621260096.5110651,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.849,\"onlineExpGained\":152706074.39569303,\"onlineMoneyMade\":0,\"onlineRunningTime\":20673.410000041687,\"pid\":540,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[756250000,3950640,4049406,3950640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":367056986.3370794,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.855,\"onlineExpGained\":87060068.49515888,\"onlineMoneyMade\":756250000,\"onlineRunningTime\":20673.410000041687,\"pid\":541,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[75000000,2831292,2930058,2765448]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":201928966.0780657,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.859,\"onlineExpGained\":50117705.87591402,\"onlineMoneyMade\":75000000,\"onlineRunningTime\":20673.410000041687,\"pid\":542,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[100000000,2008242,2403306,2238696]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":162515542.2671352,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.861,\"onlineExpGained\":40388598.22184136,\"onlineMoneyMade\":100000000,\"onlineRunningTime\":20673.410000041687,\"pid\":543,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,1777788,1876554,1679022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":175880568.74340448,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.86500000002,\"onlineExpGained\":44026292.25424877,\"onlineMoneyMade\":0,\"onlineRunningTime\":20673.410000041687,\"pid\":544,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[187500000,1152270,1415646,1185192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":124937924.73613082,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.869,\"onlineExpGained\":32117541.0707225,\"onlineMoneyMade\":187500000,\"onlineRunningTime\":20673.410000041687,\"pid\":545,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[1250000000,1053504,1415646,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":89018462.7696594,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.875,\"onlineExpGained\":23938725.411994744,\"onlineMoneyMade\":1250000000,\"onlineRunningTime\":20673.410000041687,\"pid\":546,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[500000000,757206,987660,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107885799.79061128,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.87999999998,\"onlineExpGained\":25004184.003757905,\"onlineMoneyMade\":500000000,\"onlineRunningTime\":20673.410000041687,\"pid\":547,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,855972,0,1942398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32623105.447058044,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.883,\"onlineExpGained\":7407450,\"onlineMoneyMade\":0,\"onlineRunningTime\":20673.410000041687,\"pid\":548,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[3052649764.8387003,24690,67486,57610]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8181849.49977288,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.888,\"onlineExpGained\":1742675.0137726804,\"onlineMoneyMade\":3052649764.8387003,\"onlineRunningTime\":20673.410000041687,\"pid\":549,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[1125011271.4161556,21398,75716,67486]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8145751.63439914,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.89199999996,\"onlineExpGained\":1926858.2744010463,\"onlineMoneyMade\":1125011271.4161556,\"onlineRunningTime\":20673.410000041687,\"pid\":550,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[3600076079.4510202,49380,156370,128388]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12664532.870459698,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.89699999997,\"onlineExpGained\":2903111.118630897,\"onlineMoneyMade\":3600076079.4510202,\"onlineRunningTime\":20673.410000041687,\"pid\":551,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[2928724912.2566414,13168,44442,34566]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6554024.097306173,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.899,\"onlineExpGained\":1394146.876080739,\"onlineMoneyMade\":2928724912.2566414,\"onlineRunningTime\":20673.410000041687,\"pid\":552,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[0,11522,32920,21398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4180970.007557356,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.90399999998,\"onlineExpGained\":956849.3676968598,\"onlineMoneyMade\":0,\"onlineRunningTime\":20673.410000041687,\"pid\":553,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,253484,0,184352]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3337673.9591480186,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.911,\"onlineExpGained\":786376.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20673.410000041687,\"pid\":554,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,8230,32920,21398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4764426.489832838,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.91400000002,\"onlineExpGained\":1228077.5698142315,\"onlineMoneyMade\":0,\"onlineRunningTime\":20673.410000041687,\"pid\":555,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[1528,764,9932,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1999879.3854880044,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.917,\"onlineExpGained\":467927.5181764578,\"onlineMoneyMade\":1528,\"onlineRunningTime\":20673.410000041687,\"pid\":556,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,1528,13752,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1886893.5259439282,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.921,\"onlineExpGained\":454033.1265339415,\"onlineMoneyMade\":0,\"onlineRunningTime\":20673.410000041687,\"pid\":557,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,2292,10696,7640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1952755.6129719578,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.92399999997,\"onlineExpGained\":446580.66962839843,\"onlineMoneyMade\":0,\"onlineRunningTime\":20673.410000041687,\"pid\":558,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[7538738676,3056,11460,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1684711.01717332,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.929,\"onlineExpGained\":411429.9792350003,\"onlineMoneyMade\":7538738676,\"onlineRunningTime\":20673.410000041687,\"pid\":559,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[202388948,1528,10696,7640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1646865.8408956304,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.93499999997,\"onlineExpGained\":385883.4352906366,\"onlineMoneyMade\":202388948,\"onlineRunningTime\":20673.410000041687,\"pid\":560,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[2206188284,2292,8404,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1197428.8689786335,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.93900000004,\"onlineExpGained\":317827.0570213821,\"onlineMoneyMade\":2206188284,\"onlineRunningTime\":20673.410000041687,\"pid\":561,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,128352,0,52716]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1265490.9752417838,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.942,\"onlineExpGained\":290511,\"onlineMoneyMade\":0,\"onlineRunningTime\":20673.410000041687,\"pid\":562,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[26292807116,4584,7640,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1643799.516958651,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.946,\"onlineExpGained\":387266.5156267378,\"onlineMoneyMade\":26292807116,\"onlineRunningTime\":20673.410000041687,\"pid\":563,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[2171424708,1206,3216,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":889796.7868044601,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.94999999998,\"onlineExpGained\":199572.31093536055,\"onlineMoneyMade\":2171424708,\"onlineRunningTime\":20673.410000041687,\"pid\":564,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[1705973430,1608,5226,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1168133.8079947408,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.954,\"onlineExpGained\":244515.09548648284,\"onlineMoneyMade\":1705973430,\"onlineRunningTime\":20673.410000041687,\"pid\":565,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[8414602092,2010,4020,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":955194.2924683493,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.95700000002,\"onlineExpGained\":215778.02873559686,\"onlineMoneyMade\":8414602092,\"onlineRunningTime\":20673.410000041687,\"pid\":566,\"ramUsage\":2.45,\"server\":\"pserv-11\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-11\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":712,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-12\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-12\",\"httpPortOpen\":false,\"ip\":\"48.9.7.8\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2750000000,7045308,7045308,6913620]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":496996470.34601855,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.96299999996,\"onlineExpGained\":130766887.74520083,\"onlineMoneyMade\":2750000000,\"onlineRunningTime\":20662.410000041644,\"pid\":567,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,25020720,24954876,18238788]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":613212468.2093395,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.96800000002,\"onlineExpGained\":164093815.29897776,\"onlineMoneyMade\":0,\"onlineRunningTime\":20662.410000041644,\"pid\":568,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[6300000000,19917810,19819044,19753200]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1124678706.97232,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.97,\"onlineExpGained\":294773625.6084845,\"onlineMoneyMade\":6300000000,\"onlineRunningTime\":20662.410000041644,\"pid\":569,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[3967500000,11028870,11094714,10864260]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":623841691.7826111,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.97299999997,\"onlineExpGained\":163395499.60339227,\"onlineMoneyMade\":3967500000,\"onlineRunningTime\":20662.410000041644,\"pid\":570,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[825000000,3720186,4049406,3950640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":343189502.83818316,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.97799999997,\"onlineExpGained\":87214293.59435314,\"onlineMoneyMade\":825000000,\"onlineRunningTime\":20662.410000041644,\"pid\":571,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[375000000,2864214,2930058,2765448]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":200784332.70775175,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.98299999998,\"onlineExpGained\":51013807.89668388,\"onlineMoneyMade\":375000000,\"onlineRunningTime\":20662.410000041644,\"pid\":572,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[1500000000,2139930,2370384,2238696]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":162166953.52227885,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.98799999995,\"onlineExpGained\":43012896.996953085,\"onlineMoneyMade\":1500000000,\"onlineRunningTime\":20662.410000041644,\"pid\":573,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[250000000,1744866,1876554,1679022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":175065150.58712417,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.98999999996,\"onlineExpGained\":44567599.12622724,\"onlineMoneyMade\":250000000,\"onlineRunningTime\":20662.410000041644,\"pid\":574,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[1500000000,1218114,1382724,1185192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":123368461.81641172,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.99500000002,\"onlineExpGained\":33831679.49865432,\"onlineMoneyMade\":1500000000,\"onlineRunningTime\":20662.410000041644,\"pid\":575,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[1500000000,1086426,1481490,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":86006769.46552968,\"offlineMoneyMade\":0,\"offlineRunningTime\":141249.99999999997,\"onlineExpGained\":24770820.145566754,\"onlineMoneyMade\":1500000000,\"onlineRunningTime\":20662.410000041644,\"pid\":576,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[4000000000,823050,954738,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":113100108.44853455,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.00499999998,\"onlineExpGained\":27070645.491671782,\"onlineMoneyMade\":4000000000,\"onlineRunningTime\":20662.410000041644,\"pid\":577,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1975320,0,2172852]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35854769.618397675,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.01,\"onlineExpGained\":8271652.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20662.410000041644,\"pid\":578,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[3052649770.2269325,24690,75716,60902]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8413029.298513183,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.01,\"onlineExpGained\":1917472.2036039827,\"onlineMoneyMade\":3052649770.2269325,\"onlineRunningTime\":20662.410000041644,\"pid\":579,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[7875007929.862309,29628,92176,82300]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10371955.528350277,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.017,\"onlineExpGained\":2433110.5824206267,\"onlineMoneyMade\":7875007929.862309,\"onlineRunningTime\":20662.410000041644,\"pid\":580,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[5393826542.483969,62548,148140,134972]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13122330.658126103,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.02200000003,\"onlineExpGained\":3007206.736430411,\"onlineMoneyMade\":5393826542.483969,\"onlineRunningTime\":20662.410000041644,\"pid\":581,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[0,11522,44442,32920]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5836300.530736049,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.024,\"onlineExpGained\":1308251.5709193668,\"onlineMoneyMade\":0,\"onlineRunningTime\":20662.410000041644,\"pid\":582,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306545109.978251,6584,34566,29628]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4776443.036008108,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.028,\"onlineExpGained\":1152262.2667335423,\"onlineMoneyMade\":4306545109.978251,\"onlineRunningTime\":20662.410000041644,\"pid\":583,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,283112,0,182706]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3447365.837547166,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.032,\"onlineExpGained\":797487,\"onlineMoneyMade\":0,\"onlineRunningTime\":20662.410000041644,\"pid\":584,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[5456241032.791013,11522,36212,26336]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5613207.508668685,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.036,\"onlineExpGained\":1519635.5540147317,\"onlineMoneyMade\":5456241032.791013,\"onlineRunningTime\":20662.410000041644,\"pid\":585,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[6875000764,3056,9932,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2089059.8783934433,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.042,\"onlineExpGained\":457292.80185426556,\"onlineMoneyMade\":6875000764,\"onlineRunningTime\":20662.410000041644,\"pid\":586,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[12684213600,1528,10696,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1914638.4637117535,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.04499999998,\"onlineExpGained\":419766.4754747761,\"onlineMoneyMade\":12684213600,\"onlineRunningTime\":20662.410000041644,\"pid\":587,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,1528,14516,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2271185.1107496074,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.04900000003,\"onlineExpGained\":491238.7365912382,\"onlineMoneyMade\":0,\"onlineRunningTime\":20662.410000041644,\"pid\":588,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[8831861392,3820,14516,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1976686.3698404513,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.05499999996,\"onlineExpGained\":481960.8328181432,\"onlineMoneyMade\":8831861392,\"onlineRunningTime\":20662.410000041644,\"pid\":589,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[14655048,2292,16044,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1768485.2137714534,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.057,\"onlineExpGained\":441009.6403321561,\"onlineMoneyMade\":14655048,\"onlineRunningTime\":20662.410000041644,\"pid\":590,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[3016938972,4584,7640,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1433316.6456193915,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.06100000002,\"onlineExpGained\":328304.872088021,\"onlineMoneyMade\":3016938972,\"onlineRunningTime\":20662.410000041644,\"pid\":591,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,124532,0,50424]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1201959.6504263657,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.065,\"onlineExpGained\":280197,\"onlineMoneyMade\":0,\"onlineRunningTime\":20662.410000041644,\"pid\":592,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[19813251300,3820,10696,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1679927.9128982516,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.071,\"onlineExpGained\":425233.82108033955,\"onlineMoneyMade\":19813251300,\"onlineRunningTime\":20662.410000041644,\"pid\":593,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[4069098270,2010,2814,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":950043.1931544949,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.07799999998,\"onlineExpGained\":221443.24912005762,\"onlineMoneyMade\":4069098270,\"onlineRunningTime\":20662.410000041644,\"pid\":594,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[921185814,1206,6030,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1149579.4164298263,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.08299999998,\"onlineExpGained\":267679.68347993906,\"onlineMoneyMade\":921185814,\"onlineRunningTime\":20662.410000041644,\"pid\":595,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[10554172722,1608,4422,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":945821.5173972745,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.08499999996,\"onlineExpGained\":213620.24844824092,\"onlineMoneyMade\":10554172722,\"onlineRunningTime\":20662.410000041644,\"pid\":596,\"ramUsage\":2.45,\"server\":\"pserv-12\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-12\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":742,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-13\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-13\",\"httpPortOpen\":false,\"ip\":\"24.4.8.6\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[3062500000,6979464,7012386,6913620]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":585685046.2126838,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.09,\"onlineExpGained\":131470967.90437695,\"onlineMoneyMade\":3062500000,\"onlineRunningTime\":20651.410000041597,\"pid\":597,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,24987798,24987798,18205866]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":612954583.9025514,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.093,\"onlineExpGained\":164066502.7464979,\"onlineMoneyMade\":0,\"onlineRunningTime\":20651.410000041597,\"pid\":598,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,19819044,19851966,19720278]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1121728947.7168527,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.101,\"onlineExpGained\":275430856.18503344,\"onlineMoneyMade\":0,\"onlineRunningTime\":20651.410000041597,\"pid\":599,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,11028870,11061792,10864260]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":620779913.2057692,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.105,\"onlineExpGained\":152655172.37089446,\"onlineMoneyMade\":0,\"onlineRunningTime\":20651.410000041597,\"pid\":600,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[962500000,3720186,4082328,3917718]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":360403875.5933764,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.109,\"onlineExpGained\":87599856.34233879,\"onlineMoneyMade\":962500000,\"onlineRunningTime\":20651.410000041597,\"pid\":601,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[2250000000,2666682,2930058,2765448]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":235339756.62426233,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.11500000002,\"onlineExpGained\":55622332.57492887,\"onlineMoneyMade\":2250000000,\"onlineRunningTime\":20651.410000041597,\"pid\":602,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[1200000000,2074086,2370384,2238696]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":180680064.39540148,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.11800000002,\"onlineExpGained\":42244809.55057891,\"onlineMoneyMade\":1200000000,\"onlineRunningTime\":20651.410000041597,\"pid\":603,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,1679022,1876554,1679022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174120424.3508587,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.12299999996,\"onlineExpGained\":43845856.630255945,\"onlineMoneyMade\":0,\"onlineRunningTime\":20651.410000041597,\"pid\":604,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,1119348,1382724,1185192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":119645789.49763498,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.126,\"onlineExpGained\":31576234.198744033,\"onlineMoneyMade\":0,\"onlineRunningTime\":20651.410000041597,\"pid\":605,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,987660,1481490,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":85263916.33163081,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.13,\"onlineExpGained\":23554681.688807663,\"onlineMoneyMade\":0,\"onlineRunningTime\":20651.410000041597,\"pid\":606,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,724284,954738,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":102834607.64605506,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.13699999996,\"onlineExpGained\":24487568.631779436,\"onlineMoneyMade\":0,\"onlineRunningTime\":20651.410000041597,\"pid\":607,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1415646,0,2008242]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":33697423.13803191,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.13899999997,\"onlineExpGained\":7654365,\"onlineMoneyMade\":0,\"onlineRunningTime\":20651.410000041597,\"pid\":608,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[1526324475,18106,69132,59256]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7289519.826494299,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.14200000002,\"onlineExpGained\":1747971.898313023,\"onlineMoneyMade\":1526324475,\"onlineRunningTime\":20651.410000041597,\"pid\":609,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[2250015098.234548,21398,80654,74070]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8071672.927110332,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.147,\"onlineExpGained\":2092165.1504890714,\"onlineMoneyMade\":2250015098.234548,\"onlineRunningTime\":20651.410000041597,\"pid\":610,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[4800226402.86696,70778,164600,134972]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12530372.381956894,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.15099999995,\"onlineExpGained\":3146000.893496431,\"onlineMoneyMade\":4800226402.86696,\"onlineRunningTime\":20651.410000041597,\"pid\":611,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[2928732904.2466416,14814,44442,37858]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6329264.796265469,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.15599999996,\"onlineExpGained\":1440398.194244555,\"onlineMoneyMade\":2928732904.2466416,\"onlineRunningTime\":20651.410000041597,\"pid\":612,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,8230,34566,23044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4408548.027329857,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.161,\"onlineExpGained\":1030971.5018142222,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":20651.410000041597,\"pid\":613,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,256776,0,177768]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3230985.015223357,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.165,\"onlineExpGained\":771562.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20651.410000041597,\"pid\":614,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[1818775660.4711592,14814,27982,23044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4426071.203686633,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.16900000002,\"onlineExpGained\":1263417.931535504,\"onlineMoneyMade\":1818775660.4711592,\"onlineRunningTime\":20651.410000041597,\"pid\":615,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,2292,12988,3056]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1999395.3809804744,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.173,\"onlineExpGained\":462610.1600153617,\"onlineMoneyMade\":0,\"onlineRunningTime\":20651.410000041597,\"pid\":616,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[12689644112,3056,11460,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1969005.1653590186,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.17699999997,\"onlineExpGained\":445466.46376915014,\"onlineMoneyMade\":12689644112,\"onlineRunningTime\":20651.410000041597,\"pid\":617,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,1528,12988,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2013314.9884640086,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.17999999996,\"onlineExpGained\":482307.1231986703,\"onlineMoneyMade\":0,\"onlineRunningTime\":20651.410000041597,\"pid\":618,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[2342980192,764,11460,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1606997.1362587407,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.18600000002,\"onlineExpGained\":372246.1716888099,\"onlineMoneyMade\":2342980192,\"onlineRunningTime\":20651.410000041597,\"pid\":619,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[8935272612,3056,12988,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1943991.1607917142,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.19099999996,\"onlineExpGained\":441009.6403321561,\"onlineMoneyMade\":8935272612,\"onlineRunningTime\":20651.410000041597,\"pid\":620,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[3316811264,1528,6112,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1195463.3667887582,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.19299999997,\"onlineExpGained\":247974.95657712233,\"onlineMoneyMade\":3316811264,\"onlineRunningTime\":20651.410000041597,\"pid\":621,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,108488,0,49660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1191428.5690632924,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.198,\"onlineExpGained\":270456,\"onlineMoneyMade\":0,\"onlineRunningTime\":20651.410000041597,\"pid\":622,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[36619627800,4584,11460,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1795042.9938415482,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.202,\"onlineExpGained\":417640.3599896192,\"onlineMoneyMade\":36619627800,\"onlineRunningTime\":20651.410000041597,\"pid\":623,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[4030675110,1608,3216,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":740907.3447504678,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.204,\"onlineExpGained\":207773.91275462203,\"onlineMoneyMade\":4030675110,\"onlineRunningTime\":20651.410000041597,\"pid\":624,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[391145598,804,5628,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1040503.064624269,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.211,\"onlineExpGained\":244515.0954864829,\"onlineMoneyMade\":391145598,\"onlineRunningTime\":20651.410000041597,\"pid\":625,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[11167731252,2814,4020,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1039732.1598597995,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.214,\"onlineExpGained\":233040.27103444462,\"onlineMoneyMade\":11167731252,\"onlineRunningTime\":20651.410000041597,\"pid\":626,\"ramUsage\":2.45,\"server\":\"pserv-13\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-13\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":772,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-15\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-15\",\"httpPortOpen\":false,\"ip\":\"54.8.9.3\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[62500000,6979464,7012386,6913620]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":494267091.24712205,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.21899999995,\"onlineExpGained\":122125903.97349133,\"onlineMoneyMade\":62500000,\"onlineRunningTime\":20640.410000041553,\"pid\":627,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,24987798,24954876,18205866]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":611895098.849848,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.222,\"onlineExpGained\":163957252.53657848,\"onlineMoneyMade\":0,\"onlineRunningTime\":20640.410000041553,\"pid\":628,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,19819044,19819044,19720278]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1119753063.815332,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.227,\"onlineExpGained\":275227248.0858392,\"onlineMoneyMade\":0,\"onlineRunningTime\":20640.410000041553,\"pid\":629,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,11028870,11028870,10864260]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":618796845.1126928,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.23099999997,\"onlineExpGained\":152451564.2717002,\"onlineMoneyMade\":0,\"onlineRunningTime\":20640.410000041553,\"pid\":630,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[343750000,3753108,4082328,3917718]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":339169640.1090766,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.23399999997,\"onlineExpGained\":85363592.40402204,\"onlineMoneyMade\":343750000,\"onlineRunningTime\":20640.410000041553,\"pid\":631,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[75000000,2666682,2962980,2765448]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":203816318.20841175,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.239,\"onlineExpGained\":50309727.73750756,\"onlineMoneyMade\":75000000,\"onlineRunningTime\":20640.410000041553,\"pid\":632,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,2172852,2337462,2238696]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":157513023.08443975,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.243,\"onlineExpGained\":39876539.92425858,\"onlineMoneyMade\":0,\"onlineRunningTime\":20640.410000041553,\"pid\":633,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,1711944,1843632,1679022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":172357696.79556787,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.24799999996,\"onlineExpGained\":43665421.00626312,\"onlineMoneyMade\":0,\"onlineRunningTime\":20640.410000041553,\"pid\":634,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,987660,1382724,1185192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":118764920.28285235,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.25100000002,\"onlineExpGained\":31486016.38674762,\"onlineMoneyMade\":0,\"onlineRunningTime\":20640.410000041553,\"pid\":635,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,1152270,1481490,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":84639006.39535068,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.25300000003,\"onlineExpGained\":23490674.401609816,\"onlineMoneyMade\":0,\"onlineRunningTime\":20640.410000041553,\"pid\":636,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,790128,987660,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":103846901.08636782,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.258,\"onlineExpGained\":24590891.70617513,\"onlineMoneyMade\":0,\"onlineRunningTime\":20640.410000041553,\"pid\":637,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,790128,0,1876554]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32587647.79218776,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.263,\"onlineExpGained\":7160535,\"onlineMoneyMade\":0,\"onlineRunningTime\":20640.410000041553,\"pid\":638,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[3052663281.3022003,23044,65840,54318]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7921853.955395119,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.266,\"onlineExpGained\":1700299.9374499405,\"onlineMoneyMade\":3052663281.3022003,\"onlineRunningTime\":20640.410000041553,\"pid\":639,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[5625035342.300809,27982,69132,64194]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7893751.052811944,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.27,\"onlineExpGained\":1932024.114278797,\"onlineMoneyMade\":5625035342.300809,\"onlineRunningTime\":20640.410000041553,\"pid\":640,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[2400268515.733562,57610,148140,133326]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12225310.523291089,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.27499999997,\"onlineExpGained\":2895400.332127229,\"onlineMoneyMade\":2400268515.733562,\"onlineRunningTime\":20640.410000041553,\"pid\":641,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[4517.8598816287595,9876,42796,32920]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6281994.376425913,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.278,\"onlineExpGained\":1281822.2462543289,\"onlineMoneyMade\":4517.8598816287595,\"onlineRunningTime\":20640.410000041553,\"pid\":642,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[8613179918.13651,9876,26336,21398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4168785.602044736,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.282,\"onlineExpGained\":896203.9852371996,\"onlineMoneyMade\":8613179918.13651,\"onlineRunningTime\":20640.410000041553,\"pid\":643,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,255130,0,172830]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3313286.717264868,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.28599999996,\"onlineExpGained\":744403.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20640.410000041553,\"pid\":644,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,4938,26336,23044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4432566.237211003,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.28999999998,\"onlineExpGained\":1095551.2133594584,\"onlineMoneyMade\":0,\"onlineRunningTime\":20640.410000041553,\"pid\":645,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[6875000000,3056,10696,3820]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2087483.8851309808,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.296,\"onlineExpGained\":441340.7273709772,\"onlineMoneyMade\":6875000000,\"onlineRunningTime\":20640.410000041553,\"pid\":646,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[764,2292,10696,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1890958.5728885387,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.298,\"onlineExpGained\":415483.1440923804,\"onlineMoneyMade\":764,\"onlineRunningTime\":20640.410000041553,\"pid\":647,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,2292,10696,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2007852.543539494,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.30299999999,\"onlineExpGained\":428717.4428432625,\"onlineMoneyMade\":0,\"onlineRunningTime\":20640.410000041553,\"pid\":648,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[8401955536,3056,8404,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1747084.4008443072,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.30599999998,\"onlineExpGained\":360491.0294249527,\"onlineMoneyMade\":8401955536,\"onlineRunningTime\":20640.410000041553,\"pid\":649,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[4599679251,1528,12224,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2018174.2507984664,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.309,\"onlineExpGained\":407933.9173072444,\"onlineMoneyMade\":4599679251,\"onlineRunningTime\":20640.410000041553,\"pid\":650,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[6887460,1528,8404,3820]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1038139.9758325024,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.31600000002,\"onlineExpGained\":258452.7716437613,\"onlineMoneyMade\":6887460,\"onlineRunningTime\":20640.410000041553,\"pid\":651,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,103904,0,52716]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1151885.8090253144,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.32000000004,\"onlineExpGained\":264153,\"onlineMoneyMade\":0,\"onlineRunningTime\":20640.410000041553,\"pid\":652,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[7465315220,3820,8404,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1808428.2445769734,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.32499999998,\"onlineExpGained\":356892.67126385646,\"onlineMoneyMade\":7465315220,\"onlineRunningTime\":20640.410000041553,\"pid\":653,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[5876210880,2412,3216,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":875426.7139125876,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.32999999996,\"onlineExpGained\":221443.24912005768,\"onlineMoneyMade\":5876210880,\"onlineRunningTime\":20640.410000041553,\"pid\":654,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[144312372,1206,5628,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1057961.8932561032,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.336,\"onlineExpGained\":239367.40926571476,\"onlineMoneyMade\":144312372,\"onlineRunningTime\":20640.410000041553,\"pid\":655,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[6160131822,1608,4422,3618]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":913366.8859452672,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.33800000002,\"onlineExpGained\":228724.7104597327,\"onlineMoneyMade\":6160131822,\"onlineRunningTime\":20640.410000041553,\"pid\":656,\"ramUsage\":2.45,\"server\":\"pserv-15\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-15\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":802,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-16\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-16\",\"httpPortOpen\":false,\"ip\":\"98.9.7.0\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[3122690603,7078230,7045308,6880698]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":587579203.97805,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.34199999998,\"onlineExpGained\":131662989.76597048,\"onlineMoneyMade\":3122690603,\"onlineRunningTime\":20629.410000041506,\"pid\":657,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,24987798,24987798,18172944]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":611904425.4548364,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.347,\"onlineExpGained\":163957252.53657848,\"onlineMoneyMade\":0,\"onlineRunningTime\":20629.410000041506,\"pid\":658,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,19819044,19786122,19720278]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1117777162.238224,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.351,\"onlineExpGained\":275023639.986645,\"onlineMoneyMade\":0,\"onlineRunningTime\":20629.410000041506,\"pid\":659,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,11028870,11061792,10864260]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":620797704.1352042,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.35499999998,\"onlineExpGained\":152655172.37089446,\"onlineMoneyMade\":0,\"onlineRunningTime\":20629.410000041506,\"pid\":660,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[275000000,3950640,4115250,3917718]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":344539622.3116175,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.359,\"onlineExpGained\":85672042.60241055,\"onlineMoneyMade\":275000000,\"onlineRunningTime\":20629.410000041506,\"pid\":661,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1647309906,2831292,2930058,2765448]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":237673882.9990968,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.36299999998,\"onlineExpGained\":54150164.96937836,\"onlineMoneyMade\":1647309906,\"onlineRunningTime\":20629.410000041506,\"pid\":662,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,2172852,2370384,2205774]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":156889146.31641248,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.365,\"onlineExpGained\":39812532.63706074,\"onlineMoneyMade\":0,\"onlineRunningTime\":20629.410000041506,\"pid\":663,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[873587012,1777788,1843632,1679022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":171671932.7396596,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.36999999997,\"onlineExpGained\":45469777.24619136,\"onlineMoneyMade\":873587012,\"onlineRunningTime\":20629.410000041506,\"pid\":664,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,1152270,1382724,1185192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":118766680.62791815,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.377,\"onlineExpGained\":31486016.38674762,\"onlineMoneyMade\":0,\"onlineRunningTime\":20629.410000041506,\"pid\":665,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[1000000000,1086426,1415646,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":87771343.72040269,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.37900000002,\"onlineExpGained\":23810710.83759905,\"onlineMoneyMade\":1000000000,\"onlineRunningTime\":20629.410000041506,\"pid\":666,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,855972,954738,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":101826666.28108393,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.38299999997,\"onlineExpGained\":24384245.557383742,\"onlineMoneyMade\":0,\"onlineRunningTime\":20629.410000041506,\"pid\":667,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1251036,0,2074086]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":33174575.917977676,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.38899999997,\"onlineExpGained\":7901280,\"onlineMoneyMade\":0,\"onlineRunningTime\":20629.410000041506,\"pid\":668,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[1526334031.0461674,18106,70778,60902]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7498792.33484147,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.39099999997,\"onlineExpGained\":1800940.7437164478,\"onlineMoneyMade\":1526334031.0461674,\"onlineRunningTime\":20629.410000041506,\"pid\":669,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[3375007913.1818414,21398,87238,74070]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8663190.269999035,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.39500000002,\"onlineExpGained\":2179984.428410836,\"onlineMoneyMade\":3375007913.1818414,\"onlineRunningTime\":20629.410000041506,\"pid\":670,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[4200055773.655979,67486,159662,139910]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13067101.549373485,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.40000000002,\"onlineExpGained\":3107446.9609780917,\"onlineMoneyMade\":4200055773.655979,\"onlineRunningTime\":20629.410000041506,\"pid\":671,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[1464360325,8230,47734,39504]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6159716.963074709,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.40300000002,\"onlineExpGained\":1460220.1877433332,\"onlineMoneyMade\":1464360325,\"onlineRunningTime\":20629.410000041506,\"pid\":672,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[5800.740168852566,6584,29628,21398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3542676.171271373,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.40899999999,\"onlineExpGained\":909680.7368949018,\"onlineMoneyMade\":5800.740168852566,\"onlineRunningTime\":20629.410000041506,\"pid\":673,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,279820,0,179414]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3350322.7370328684,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.411,\"onlineExpGained\":796252.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20629.410000041506,\"pid\":674,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[3637491200,6584,29628,26336]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4338878.890633785,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.415,\"onlineExpGained\":1307593.3836870953,\"onlineMoneyMade\":3637491200,\"onlineRunningTime\":20629.410000041506,\"pid\":675,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,764,7640,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1696765.109046114,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.41899999997,\"onlineExpGained\":398801.86208220833,\"onlineMoneyMade\":0,\"onlineRunningTime\":20629.410000041506,\"pid\":676,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[25314940463,3820,9932,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1796431.077136974,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.422,\"onlineExpGained\":424049.80685717176,\"onlineMoneyMade\":25314940463,\"onlineRunningTime\":20629.410000041506,\"pid\":677,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[1528,4584,12988,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1975942.3631970447,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.42799999996,\"onlineExpGained\":486772.9298949542,\"onlineMoneyMade\":1528,\"onlineRunningTime\":20629.410000041506,\"pid\":678,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[14311443584,5348,10696,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1869743.1090504338,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.432,\"onlineExpGained\":415348.35998961935,\"onlineMoneyMade\":14311443584,\"onlineRunningTime\":20629.410000041506,\"pid\":679,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[15965308,2292,13752,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2024088.1862788638,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.436,\"onlineExpGained\":422634.23865164956,\"onlineMoneyMade\":15965308,\"onlineRunningTime\":20629.410000041506,\"pid\":680,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[4620529896,3820,7640,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1840899.3125413687,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.441,\"onlineExpGained\":317827.05702138215,\"onlineMoneyMade\":4620529896,\"onlineRunningTime\":20629.410000041506,\"pid\":681,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,113836,0,49660]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1193309.1040135454,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.443,\"onlineExpGained\":269883,\"onlineMoneyMade\":0,\"onlineRunningTime\":20629.410000041506,\"pid\":682,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[0,0,9168,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1584930.8862921763,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.447,\"onlineExpGained\":341705.7490824158,\"onlineMoneyMade\":0,\"onlineRunningTime\":20629.410000041506,\"pid\":683,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[1166208030,804,3216,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":735624.7677510935,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.451,\"onlineExpGained\":180435.24002375067,\"onlineMoneyMade\":1166208030,\"onlineRunningTime\":20629.410000041506,\"pid\":684,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[3759200490,2010,6030,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1146815.3234349391,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.456,\"onlineExpGained\":262531.997259171,\"onlineMoneyMade\":3759200490,\"onlineRunningTime\":20629.410000041506,\"pid\":685,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[15657789048,3216,4422,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1150644.654600515,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.46,\"onlineExpGained\":235198.0513218006,\"onlineMoneyMade\":15657789048,\"onlineRunningTime\":20629.410000041506,\"pid\":686,\"ramUsage\":2.45,\"server\":\"pserv-16\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-16\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":832,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-17\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-17\",\"httpPortOpen\":false,\"ip\":\"91.7.3.9\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,6979464,7111152,6880698]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":497412364.12129974,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.46399999998,\"onlineExpGained\":122445940.40948057,\"onlineMoneyMade\":0,\"onlineRunningTime\":20618.41000004146,\"pid\":687,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,24987798,24954876,18172944]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":610844885.5424818,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.46800000002,\"onlineExpGained\":163848002.32665905,\"onlineMoneyMade\":0,\"onlineRunningTime\":20618.41000004146,\"pid\":688,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,19819044,19819044,19687356]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1117793196.7615318,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.47199999998,\"onlineExpGained\":275023639.986645,\"onlineMoneyMade\":0,\"onlineRunningTime\":20618.41000004146,\"pid\":689,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,11028870,11028870,10864260]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":618814595.7420387,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.47499999998,\"onlineExpGained\":152451564.2717002,\"onlineMoneyMade\":0,\"onlineRunningTime\":20618.41000004146,\"pid\":690,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[1993750000,4016484,4082328,3917718]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":407821543.48326397,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.48199999996,\"onlineExpGained\":91224146.17340386,\"onlineMoneyMade\":1993750000,\"onlineRunningTime\":20618.41000004146,\"pid\":691,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,2765448,2930058,2765448]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":199438681.89529788,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.48399999997,\"onlineExpGained\":49861676.727122635,\"onlineMoneyMade\":0,\"onlineRunningTime\":20618.41000004146,\"pid\":692,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,2172852,2337462,2205774]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":155639052.77979177,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.488,\"onlineExpGained\":39684518.062665045,\"onlineMoneyMade\":0,\"onlineRunningTime\":20618.41000004146,\"pid\":693,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[125000000,1679022,1843632,1679022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":173245385.47306097,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.493,\"onlineExpGained\":43755638.81825953,\"onlineMoneyMade\":125000000,\"onlineRunningTime\":20618.41000004146,\"pid\":694,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,987660,1382724,1185192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":117885790.30503364,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.495,\"onlineExpGained\":31395798.57475121,\"onlineMoneyMade\":0,\"onlineRunningTime\":20618.41000004146,\"pid\":695,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[250000000,1086426,1448568,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":84641594.5184868,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.5,\"onlineExpGained\":23490674.401609816,\"onlineMoneyMade\":250000000,\"onlineRunningTime\":20618.41000004146,\"pid\":696,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,823050,954738,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":101828114.58528018,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.504,\"onlineExpGained\":24384245.557383742,\"onlineMoneyMade\":0,\"onlineRunningTime\":20618.41000004146,\"pid\":697,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1119348,0,2074086]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34759087.00829768,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.509,\"onlineExpGained\":7901280,\"onlineMoneyMade\":0,\"onlineRunningTime\":20618.41000004146,\"pid\":698,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[6105375481.058447,21398,70778,64194]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8431282.430210484,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.512,\"onlineExpGained\":1890987.7809022702,\"onlineMoneyMade\":6105375481.058447,\"onlineRunningTime\":20618.41000004146,\"pid\":699,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[7875015104.193869,29628,85592,74070]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10189663.804185463,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.517,\"onlineExpGained\":2262637.866454849,\"onlineMoneyMade\":7875015104.193869,\"onlineRunningTime\":20618.41000004146,\"pid\":700,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[3000653070.7521014,54318,139910,131680]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":11483946.19372883,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.52099999998,\"onlineExpGained\":2845280.219853389,\"onlineMoneyMade\":3000653070.7521014,\"onlineRunningTime\":20618.41000004146,\"pid\":701,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[1464363596.8158748,13168,46088,36212]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6453047.52078661,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.52499999997,\"onlineExpGained\":1413968.869579517,\"onlineMoneyMade\":1464363596.8158748,\"onlineRunningTime\":20618.41000004146,\"pid\":702,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,8230,31274,23044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4061028.443353644,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.52699999997,\"onlineExpGained\":970326.1193545619,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":20618.41000004146,\"pid\":703,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,268298,0,185998]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3486131.055374341,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.535,\"onlineExpGained\":803659.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20618.41000004146,\"pid\":704,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[1818750040.404329,8230,29628,23044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4788765.8705768585,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.538,\"onlineExpGained\":1245747.7506748675,\"onlineMoneyMade\":1818750040.404329,\"onlineRunningTime\":20618.41000004146,\"pid\":705,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,2292,10696,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1883819.1513250233,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.542,\"onlineExpGained\":462610.1600153617,\"onlineMoneyMade\":0,\"onlineRunningTime\":20618.41000004146,\"pid\":706,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,1528,11460,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1728774.9152762084,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.548,\"onlineExpGained\":428333.13823956746,\"onlineMoneyMade\":0,\"onlineRunningTime\":20618.41000004146,\"pid\":707,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[6123993655.519477,3820,13752,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2148672.883319671,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.55,\"onlineExpGained\":531430.9968577941,\"onlineMoneyMade\":6123993655.519477,\"onlineRunningTime\":20618.41000004146,\"pid\":708,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[4175721456,2292,12224,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1832698.024359321,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.55399999997,\"onlineExpGained\":419266.74074423837,\"onlineMoneyMade\":4175721456,\"onlineRunningTime\":20618.41000004146,\"pid\":709,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[5100660348,3820,13752,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2216651.664000114,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.559,\"onlineExpGained\":452034.8813404599,\"onlineMoneyMade\":5100660348,\"onlineRunningTime\":20618.41000004146,\"pid\":710,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[5658369652,3056,10696,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1894575.9943818867,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.563,\"onlineExpGained\":394664.3675100678,\"onlineMoneyMade\":5658369652,\"onlineRunningTime\":20618.41000004146,\"pid\":711,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,122240,0,53480]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1150031.9321339545,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.56799999997,\"onlineExpGained\":284781,\"onlineMoneyMade\":0,\"onlineRunningTime\":20618.41000004146,\"pid\":712,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[16248075096,2292,9168,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1728896.4170067692,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.57100000003,\"onlineExpGained\":375876.32399065734,\"onlineMoneyMade\":16248075096,\"onlineRunningTime\":20618.41000004146,\"pid\":713,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[2283061314,1608,3216,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":874228.0660890213,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.576,\"onlineExpGained\":199572.3109353606,\"onlineMoneyMade\":2283061314,\"onlineRunningTime\":20618.41000004146,\"pid\":714,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[1969170066,1206,6834,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1212946.8079628805,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.579,\"onlineExpGained\":254810.46792801894,\"onlineMoneyMade\":1969170066,\"onlineRunningTime\":20618.41000004146,\"pid\":715,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[7935035790,1206,4422,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":894058.1242703425,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.58099999998,\"onlineExpGained\":204989.12729881704,\"onlineMoneyMade\":7935035790,\"onlineRunningTime\":20618.41000004146,\"pid\":716,\"ramUsage\":2.45,\"server\":\"pserv-17\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-17\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":862,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-18\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-18\",\"httpPortOpen\":false,\"ip\":\"92.3.9.9\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,7078230,7045308,6880698]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":494288423.85914266,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.58800000002,\"onlineExpGained\":122125903.97349133,\"onlineMoneyMade\":0,\"onlineRunningTime\":20607.41000004141,\"pid\":717,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,24987798,24921954,18172944]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":609785371.137738,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.593,\"onlineExpGained\":163738752.1167396,\"onlineMoneyMade\":0,\"onlineRunningTime\":20607.41000004141,\"pid\":718,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,19819044,19786122,19687356]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1115817292.3839447,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.596,\"onlineExpGained\":274820031.8874507,\"onlineMoneyMade\":0,\"onlineRunningTime\":20607.41000004141,\"pid\":719,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,11028870,11028870,10831338]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":616831503.9956594,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.6,\"onlineExpGained\":152247956.17250594,\"onlineMoneyMade\":0,\"onlineRunningTime\":20607.41000004141,\"pid\":720,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[412500000,3917718,4082328,3917718]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":348977215.1572835,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.604,\"onlineExpGained\":85980492.80079907,\"onlineMoneyMade\":412500000,\"onlineRunningTime\":20607.41000004141,\"pid\":721,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[450000000,2765448,2962980,2765448]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":211339712.36500537,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.60799999998,\"onlineExpGained\":51077815.183881715,\"onlineMoneyMade\":450000000,\"onlineRunningTime\":20607.41000004141,\"pid\":722,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[1400000000,2172852,2337462,2205774]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":180690065.3404644,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.611,\"onlineExpGained\":42244809.55057891,\"onlineMoneyMade\":1400000000,\"onlineRunningTime\":20607.41000004141,\"pid\":723,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[1369365052,1580256,1843632,1679022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":195901023.41901866,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.615,\"onlineExpGained\":46371955.36615545,\"onlineMoneyMade\":1369365052,\"onlineRunningTime\":20607.41000004141,\"pid\":724,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,954738,1382724,1185192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":117004897.98948891,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.62099999996,\"onlineExpGained\":31305580.762754798,\"onlineMoneyMade\":0,\"onlineRunningTime\":20607.41000004141,\"pid\":725,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[250000000,1086426,1448568,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":84016672.83775267,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.62399999998,\"onlineExpGained\":23426667.11441197,\"onlineMoneyMade\":250000000,\"onlineRunningTime\":20607.41000004141,\"pid\":726,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,724284,954738,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":100818699.62570624,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.62700000004,\"onlineExpGained\":24280922.48298805,\"onlineMoneyMade\":0,\"onlineRunningTime\":20607.41000004141,\"pid\":727,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1580256,0,2041164]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":36343078.12182817,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.63199999998,\"onlineExpGained\":7777822.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20607.41000004141,\"pid\":728,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[3052660402.534064,24690,65840,60902]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8279019.827139162,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.634,\"onlineExpGained\":1811534.5127971328,\"onlineMoneyMade\":3052660402.534064,\"onlineRunningTime\":20607.41000004141,\"pid\":729,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[3375090687.6796384,23044,90530,79008]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10940160.433125589,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.63799999998,\"onlineExpGained\":2319462.1051101084,\"onlineMoneyMade\":3375090687.6796384,\"onlineRunningTime\":20607.41000004141,\"pid\":730,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[6600055773.655979,55964,166246,143202]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13933055.05799034,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.643,\"onlineExpGained\":3230819.545036775,\"onlineMoneyMade\":6600055773.655979,\"onlineRunningTime\":20607.41000004141,\"pid\":731,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[1464360325,6584,41150,32920]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5471012.605393502,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.648,\"onlineExpGained\":1288429.5774205883,\"onlineMoneyMade\":1464360325,\"onlineRunningTime\":20607.41000004141,\"pid\":732,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[0,8230,31274,19752]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3778508.648097487,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.65,\"onlineExpGained\":916419.112723753,\"onlineMoneyMade\":0,\"onlineRunningTime\":20607.41000004141,\"pid\":733,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,281466,0,184352]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3441246.7386459364,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.65500000003,\"onlineExpGained\":807363,\"onlineMoneyMade\":0,\"onlineRunningTime\":20607.41000004141,\"pid\":734,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[3637495433.191285,11522,32920,29628]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7061119.664156841,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.65899999999,\"onlineExpGained\":1501965.3731540954,\"onlineMoneyMade\":3637495433.191285,\"onlineRunningTime\":20607.41000004141,\"pid\":735,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[6875000000,2292,9168,3820]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1696816.3987944191,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.661,\"onlineExpGained\":398801.8620822083,\"onlineMoneyMade\":6875000000,\"onlineRunningTime\":20607.41000004141,\"pid\":736,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,764,10696,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1480285.7081958062,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.66700000002,\"onlineExpGained\":381216.49303321505,\"onlineMoneyMade\":0,\"onlineRunningTime\":20607.41000004141,\"pid\":737,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[0,764,13752,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2165016.8427476566,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.66999999998,\"onlineExpGained\":482307.1231986703,\"onlineMoneyMade\":0,\"onlineRunningTime\":20607.41000004141,\"pid\":738,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[6843240444,5348,9168,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2112109.4570083003,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.67499999996,\"onlineExpGained\":458450.54829042894,\"onlineMoneyMade\":6843240444,\"onlineRunningTime\":20607.41000004141,\"pid\":739,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[90372796,3820,10696,8404]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2116092.6032413254,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.679,\"onlineExpGained\":426309.3189877509,\"onlineMoneyMade\":90372796,\"onlineRunningTime\":20607.41000004141,\"pid\":740,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[4035001824,2292,10696,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1761191.4956725985,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.68200000003,\"onlineExpGained\":380693.9474212159,\"onlineMoneyMade\":4035001824,\"onlineRunningTime\":20607.41000004141,\"pid\":741,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,112308,0,48896]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1135298.9385072882,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.686,\"onlineExpGained\":266445,\"onlineMoneyMade\":0,\"onlineRunningTime\":20607.41000004141,\"pid\":742,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[2699354104,3056,7640,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1488583.8989392095,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.691,\"onlineExpGained\":330315.5574463352,\"onlineMoneyMade\":2699354104,\"onlineRunningTime\":20607.41000004141,\"pid\":743,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[4982500962,2814,3216,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1003123.1342602335,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.695,\"onlineExpGained\":229644.8509393191,\"onlineMoneyMade\":4982500962,\"onlineRunningTime\":20607.41000004141,\"pid\":744,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[1356213732,2010,4824,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1134606.3424689649,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.699,\"onlineExpGained\":257384.31103840296,\"onlineMoneyMade\":1356213732,\"onlineRunningTime\":20607.41000004141,\"pid\":745,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[10393735326,2412,4020,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":951055.3409435883,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.70399999997,\"onlineExpGained\":230882.49074708868,\"onlineMoneyMade\":10393735326,\"onlineRunningTime\":20607.41000004141,\"pid\":746,\"ramUsage\":2.45,\"server\":\"pserv-18\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-18\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":892,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-19\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-19\",\"httpPortOpen\":false,\"ip\":\"83.4.1.9\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,6946542,7045308,6880698]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":493043092.5178717,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.70799999998,\"onlineExpGained\":121997889.39909564,\"onlineMoneyMade\":0,\"onlineRunningTime\":20596.410000041364,\"pid\":747,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,24987798,24954876,18140022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":609794671.9493349,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.712,\"onlineExpGained\":163738752.1167396,\"onlineMoneyMade\":0,\"onlineRunningTime\":20596.410000041364,\"pid\":748,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,19786122,19819044,19654434]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1115335318.885949,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.71499999997,\"onlineExpGained\":274769129.8626522,\"onlineMoneyMade\":0,\"onlineRunningTime\":20596.410000041364,\"pid\":749,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,10995948,11061792,10831338]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":618334390.389537,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.72,\"onlineExpGained\":152400662.24690163,\"onlineMoneyMade\":0,\"onlineRunningTime\":20596.410000041364,\"pid\":750,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,3983562,4082328,3917718]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":341441750.83870703,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.723,\"onlineExpGained\":84438241.80885649,\"onlineMoneyMade\":0,\"onlineRunningTime\":20596.410000041364,\"pid\":751,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,2831292,2930058,2765448]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":199444482.4048904,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.729,\"onlineExpGained\":49861676.727122635,\"onlineMoneyMade\":0,\"onlineRunningTime\":20596.410000041364,\"pid\":752,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[100000000,2074086,2337462,2205774]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":155643699.9655446,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.732,\"onlineExpGained\":39684518.062665045,\"onlineMoneyMade\":100000000,\"onlineRunningTime\":20596.410000041364,\"pid\":753,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,1810710,1876554,1679022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":176781064.99467444,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.735,\"onlineExpGained\":44116510.06624518,\"onlineMoneyMade\":0,\"onlineRunningTime\":20596.410000041364,\"pid\":754,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[750000000,1020582,1349802,1185192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":126715846.25926054,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.74,\"onlineExpGained\":32297976.69471532,\"onlineMoneyMade\":750000000,\"onlineRunningTime\":20596.410000041364,\"pid\":755,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[1250000000,1053504,1448568,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":90906402.16936842,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.74500000002,\"onlineExpGained\":24130747.273588285,\"onlineMoneyMade\":1250000000,\"onlineRunningTime\":20596.410000041364,\"pid\":756,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[500000000,691362,954738,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":103852762.14296307,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.75100000002,\"onlineExpGained\":24590891.70617513,\"onlineMoneyMade\":500000000,\"onlineRunningTime\":20596.410000041364,\"pid\":757,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1316880,0,2074086]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35537559.2153736,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.753,\"onlineExpGained\":7925971.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20596.410000041364,\"pid\":758,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[1526357859.2392108,16460,75716,64194]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8650936.0541697,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.75699999995,\"onlineExpGained\":1906878.4345232977,\"onlineMoneyMade\":1526357859.2392108,\"onlineRunningTime\":20596.410000041364,\"pid\":759,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[2255949255.1663904,23044,79008,70778]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9161215.48380404,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.76200000002,\"onlineExpGained\":2009511.7124450589,\"onlineMoneyMade\":2255949255.1663904,\"onlineRunningTime\":20596.410000041364,\"pid\":760,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[8400041830.241984,69132,162954,143202]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":14682323.39036627,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.766,\"onlineExpGained\":3242385.7247922765,\"onlineMoneyMade\":8400041830.241984,\"onlineRunningTime\":20596.410000041364,\"pid\":761,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[0,6584,41150,32920]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5438043.342495265,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.77,\"onlineExpGained\":1228963.5969242535,\"onlineMoneyMade\":0,\"onlineRunningTime\":20596.410000041364,\"pid\":762,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,9876,32920,19752]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3535822.366655836,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.773,\"onlineExpGained\":936634.2402103064,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":20596.410000041364,\"pid\":763,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,269944,0,182706]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3411749.6660775654,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.77699999997,\"onlineExpGained\":791314.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20596.410000041364,\"pid\":764,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[1818750039.94091,11522,36212,26336]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6310742.448402653,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.78399999999,\"onlineExpGained\":1484295.1922934593,\"onlineMoneyMade\":1818750039.94091,\"onlineRunningTime\":20596.410000041364,\"pid\":765,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[764,2292,9932,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1837666.4643124726,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.786,\"onlineExpGained\":451975.44369316945,\"onlineMoneyMade\":764,\"onlineRunningTime\":20596.410000041364,\"pid\":766,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[3056,5348,14516,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2432208.813782788,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.79,\"onlineExpGained\":535416.4227994593,\"onlineMoneyMade\":3056,\"onlineRunningTime\":20596.410000041364,\"pid\":767,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[6123988575,4584,12988,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2054756.5475150316,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.79399999997,\"onlineExpGained\":486772.9298949542,\"onlineMoneyMade\":6123988575,\"onlineRunningTime\":20596.410000041364,\"pid\":768,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[11248429300,3056,10696,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1992949.6266693322,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.79900000003,\"onlineExpGained\":431021.88300809555,\"onlineMoneyMade\":11248429300,\"onlineRunningTime\":20596.410000041364,\"pid\":769,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[144889544,2292,13752,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1962988.7638090786,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.805,\"onlineExpGained\":429984.39932385227,\"onlineMoneyMade\":144889544,\"onlineRunningTime\":20596.410000041364,\"pid\":770,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[3887035652,1528,11460,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1543619.3307709477,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.80899999998,\"onlineExpGained\":363230.9223101509,\"onlineMoneyMade\":3887035652,\"onlineRunningTime\":20596.410000041364,\"pid\":771,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,124532,0,50424]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1165101.8161567699,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.81099999996,\"onlineExpGained\":275040,\"onlineMoneyMade\":0,\"onlineRunningTime\":20596.410000041364,\"pid\":772,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[6161428508,1528,10696,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1613359.9176755527,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.817,\"onlineExpGained\":368282.86289993697,\"onlineMoneyMade\":6161428508,\"onlineRunningTime\":20596.410000041364,\"pid\":773,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[6477920862,2814,2814,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":847890.337625173,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.821,\"onlineExpGained\":232378.7182124062,\"onlineMoneyMade\":6477920862,\"onlineRunningTime\":20596.410000041364,\"pid\":774,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[90064884,804,5628,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1078699.357651948,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.82399999996,\"onlineExpGained\":236793.56615533074,\"onlineMoneyMade\":90064884,\"onlineRunningTime\":20596.410000041364,\"pid\":775,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[7716476832,2010,4020,3618]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":998228.0548458513,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.82899999997,\"onlineExpGained\":215778.02873559686,\"onlineMoneyMade\":7716476832,\"onlineRunningTime\":20596.410000041364,\"pid\":776,\"ramUsage\":2.45,\"server\":\"pserv-19\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-19\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":922,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-14\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-14\",\"httpPortOpen\":false,\"ip\":\"20.5.8.1\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[750000000,7045308,7012386,6880698]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":513715696.00300086,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.83400000003,\"onlineExpGained\":124110129.87662457,\"onlineMoneyMade\":750000000,\"onlineRunningTime\":20585.410000041316,\"pid\":777,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,24987798,24921954,18140022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":608735158.7564113,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.83800000002,\"onlineExpGained\":163629501.9068202,\"onlineMoneyMade\":0,\"onlineRunningTime\":20585.410000041316,\"pid\":778,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,19819044,19753200,19687356]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1113359414.2736332,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.841,\"onlineExpGained\":274565521.76345795,\"onlineMoneyMade\":0,\"onlineRunningTime\":20585.410000041316,\"pid\":779,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,10995948,11028870,10831338]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":616351276.6367624,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.844,\"onlineExpGained\":152197054.14770737,\"onlineMoneyMade\":0,\"onlineRunningTime\":20585.410000041316,\"pid\":780,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[825000000,3983562,4049406,3917718]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":366343328.45721763,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.848,\"onlineExpGained\":86982955.94556175,\"onlineMoneyMade\":825000000,\"onlineRunningTime\":20585.410000041316,\"pid\":781,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,2831292,2962980,2765448]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":201952293.58270684,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.851,\"onlineExpGained\":50117705.87591402,\"onlineMoneyMade\":0,\"onlineRunningTime\":20585.410000041316,\"pid\":782,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[400000000,2074086,2370384,2238696]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":166918106.83536622,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.858,\"onlineExpGained\":40836649.23222628,\"onlineMoneyMade\":400000000,\"onlineRunningTime\":20585.410000041316,\"pid\":783,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[125000000,1777788,1876554,1679022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":178548961.74289915,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.862,\"onlineExpGained\":44296945.690238,\"onlineMoneyMade\":125000000,\"onlineRunningTime\":20585.410000041316,\"pid\":784,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,1185192,1349802,1185192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":115243071.89267659,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.86399999997,\"onlineExpGained\":31125145.138761975,\"onlineMoneyMade\":0,\"onlineRunningTime\":20585.410000041316,\"pid\":785,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,1053504,1448568,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":81514354.81174706,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.87,\"onlineExpGained\":23170637.96562058,\"onlineMoneyMade\":0,\"onlineRunningTime\":20585.410000041316,\"pid\":786,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,724284,921816,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":98799836.11753844,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.874,\"onlineExpGained\":24074276.33419666,\"onlineMoneyMade\":0,\"onlineRunningTime\":20585.410000041316,\"pid\":787,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1448568,0,2139930]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35833504.096530385,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.876,\"onlineExpGained\":8148195,\"onlineMoneyMade\":0,\"onlineRunningTime\":20585.410000041316,\"pid\":788,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[48375.60009215885,18106,77362,65840]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8268269.31251077,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.88,\"onlineExpGained\":1959847.2799267226,\"onlineMoneyMade\":48375.60009215885,\"onlineRunningTime\":20585.410000041316,\"pid\":789,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[3375039750.536562,26336,87238,74070]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10086846.173961136,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.886,\"onlineExpGained\":2236808.667066095,\"onlineMoneyMade\":3375039750.536562,\"onlineRunningTime\":20585.410000041316,\"pid\":790,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[3600070968.6692324,65840,154724,139910]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13106563.986046843,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.89099999997,\"onlineExpGained\":3022628.309437747,\"onlineMoneyMade\":3600070968.6692324,\"onlineRunningTime\":20585.410000041316,\"pid\":791,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[4393080975,9876,47734,39504]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7020512.89312463,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.894,\"onlineExpGained\":1519686.168239668,\"onlineMoneyMade\":4393080975,\"onlineRunningTime\":20585.410000041316,\"pid\":792,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,6584,34566,24690]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4036611.364153319,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.9,\"onlineExpGained\":1044448.2534719245,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":20585.410000041316,\"pid\":793,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,283112,0,181060]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3343938.136951799,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.90399999998,\"onlineExpGained\":795018,\"onlineMoneyMade\":0,\"onlineRunningTime\":20585.410000041316,\"pid\":794,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[1818745600,6584,32920,26336]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5705068.286076758,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.90599999996,\"onlineExpGained\":1369439.0166993225,\"onlineMoneyMade\":1818745600,\"onlineRunningTime\":20585.410000041316,\"pid\":795,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,2292,11460,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1883909.4308968063,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.91499999998,\"onlineExpGained\":462610.1600153617,\"onlineMoneyMade\":0,\"onlineRunningTime\":20585.410000041316,\"pid\":796,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[753.7916830732502,2292,12988,7640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2264282.7161327368,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.917,\"onlineExpGained\":492583.10897550255,\"onlineMoneyMade\":753.7916830732502,\"onlineRunningTime\":20585.410000041316,\"pid\":797,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[3056,4584,13752,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2057085.3107751678,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.921,\"onlineExpGained\":509101.96337637416,\"onlineMoneyMade\":3056,\"onlineRunningTime\":20585.410000041316,\"pid\":798,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[4801149428,3056,11460,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1974185.3151747866,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.927,\"onlineExpGained\":434940.2637627146,\"onlineMoneyMade\":4801149428,\"onlineRunningTime\":20585.410000041316,\"pid\":799,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[24448,764,15280,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1877169.326478133,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.931,\"onlineExpGained\":415284.0779794471,\"onlineMoneyMade\":24448,\"onlineRunningTime\":20585.410000041316,\"pid\":800,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[5079145344,3820,8404,7640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1713516.3020410438,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.93300000002,\"onlineExpGained\":380693.9474212158,\"onlineMoneyMade\":5079145344,\"onlineRunningTime\":20585.410000041316,\"pid\":801,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,106196,0,52716]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1160297.5373346708,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.93699999998,\"onlineExpGained\":271602,\"onlineMoneyMade\":0,\"onlineRunningTime\":20585.410000041316,\"pid\":802,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[13432843584,3056,9168,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1532842.6274568858,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.942,\"onlineExpGained\":368282.86289993697,\"onlineMoneyMade\":13432843584,\"onlineRunningTime\":20585.410000041316,\"pid\":803,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[4480642554,2010,2814,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":926664.104986554,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.946,\"onlineExpGained\":218709.38184697056,\"onlineMoneyMade\":4480642554,\"onlineRunningTime\":20585.210000041316,\"pid\":804,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[1663563636,1206,6030,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1081462.4638071065,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.952,\"onlineExpGained\":254810.46792801894,\"onlineMoneyMade\":1663563636,\"onlineRunningTime\":20585.210000041316,\"pid\":805,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[10418882838,2412,4020,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":972576.4934532291,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.95500000002,\"onlineExpGained\":213620.2484482409,\"onlineMoneyMade\":10418882838,\"onlineRunningTime\":20585.210000041316,\"pid\":806,\"ramUsage\":2.45,\"server\":\"pserv-14\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-14\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":952,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-21\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-21\",\"httpPortOpen\":false,\"ip\":\"6.2.8.1\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[187500000,6979464,7045308,6880698]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":493059892.3494542,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.95799999998,\"onlineExpGained\":122573954.98387627,\"onlineMoneyMade\":187500000,\"onlineRunningTime\":20574.41000004127,\"pid\":807,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,24889032,24889032,18140022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":607941832.0503546,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.96199999997,\"onlineExpGained\":163438314.03946123,\"onlineMoneyMade\":0,\"onlineRunningTime\":20574.41000004127,\"pid\":808,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[400000000,19819044,19720278,19687356]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1111388884.5526397,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.96899999998,\"onlineExpGained\":275583562.259429,\"onlineMoneyMade\":400000000,\"onlineRunningTime\":20574.41000004127,\"pid\":809,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[230000000,10995948,10995948,10831338]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":614370849.0098147,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.97199999998,\"onlineExpGained\":152604270.34609586,\"onlineMoneyMade\":230000000,\"onlineRunningTime\":20574.41000004127,\"pid\":810,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[68750000,3950640,4082328,3917718]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":342207100.9937189,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.975,\"onlineExpGained\":84746692.007245,\"onlineMoneyMade\":68750000,\"onlineRunningTime\":20574.41000004127,\"pid\":811,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[375000000,2897136,2995902,2732526]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":211975770.99622336,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.981,\"onlineExpGained\":51333844.33267311,\"onlineMoneyMade\":375000000,\"onlineRunningTime\":20574.41000004127,\"pid\":812,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[300000000,2139930,2370384,2205774]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":161911522.46891752,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.984,\"onlineExpGained\":40516612.79623705,\"onlineMoneyMade\":300000000,\"onlineRunningTime\":20574.41000004127,\"pid\":813,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,1679022,1876554,1679022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":175020878.37635654,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.988,\"onlineExpGained\":43936074.44225236,\"onlineMoneyMade\":0,\"onlineRunningTime\":20574.41000004127,\"pid\":814,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,1020582,1349802,1185192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":114362151.99203427,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.992,\"onlineExpGained\":31034927.326765563,\"onlineMoneyMade\":0,\"onlineRunningTime\":20574.41000004127,\"pid\":815,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[497223554,1020582,1415646,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":81516476.94483495,\"offlineMoneyMade\":0,\"offlineRunningTime\":141250.997,\"onlineExpGained\":23362659.82721412,\"onlineMoneyMade\":497223554,\"onlineRunningTime\":20574.41000004127,\"pid\":816,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[1000000000,823050,954738,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":105877479.35916448,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251,\"onlineExpGained\":24797537.854966518,\"onlineMoneyMade\":1000000000,\"onlineRunningTime\":20574.41000004127,\"pid\":817,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1283958,0,2041164]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35272097.31907111,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.00599999996,\"onlineExpGained\":7777822.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20574.41000004127,\"pid\":818,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[4579006822.678005,21398,65840,55964]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8445986.585414978,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.009,\"onlineExpGained\":1721487.4756113105,\"onlineMoneyMade\":4579006822.678005,\"onlineRunningTime\":20574.41000004127,\"pid\":819,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[2250043524.003725,26336,80654,72424]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10183798.356127866,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.013,\"onlineExpGained\":2112828.5100000743,\"onlineMoneyMade\":2250043524.003725,\"onlineRunningTime\":20574.41000004127,\"pid\":820,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[7797986803.064786,51026,149786,134972]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13215668.646692466,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.01700000002,\"onlineExpGained\":2976363.5904157404,\"onlineMoneyMade\":7797986803.064786,\"onlineRunningTime\":20574.41000004127,\"pid\":821,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[1464364589.9337418,8230,34566,31274]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5635528.732700635,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.02300000002,\"onlineExpGained\":1162890.2852616592,\"onlineMoneyMade\":1464364589.9337418,\"onlineRunningTime\":20574.41000004127,\"pid\":822,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[8613067200,9876,26336,18106]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3475720.868621479,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.028,\"onlineExpGained\":828820.2269486883,\"onlineMoneyMade\":8613067200,\"onlineRunningTime\":20574.41000004127,\"pid\":823,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,281466,0,177768]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3467988.513437936,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.032,\"onlineExpGained\":785142,\"onlineMoneyMade\":0,\"onlineRunningTime\":20574.41000004127,\"pid\":824,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[1818749833.591675,11522,29628,21398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5252386.714718465,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.03699999998,\"onlineExpGained\":1228077.5698142315,\"onlineMoneyMade\":1818749833.591675,\"onlineRunningTime\":20574.41000004127,\"pid\":825,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,1528,10696,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1904857.6529618066,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.04,\"onlineExpGained\":446658.08553207334,\"onlineMoneyMade\":0,\"onlineRunningTime\":20574.41000004127,\"pid\":826,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,1528,12224,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2059730.2801818303,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.044,\"onlineExpGained\":419766.4754747762,\"onlineMoneyMade\":0,\"onlineRunningTime\":20574.41000004127,\"pid\":827,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[2292,2292,11460,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1912257.077537529,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.04700000002,\"onlineExpGained\":442114.86293211445,\"onlineMoneyMade\":2292,\"onlineRunningTime\":20574.41000004127,\"pid\":828,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[1627320,1528,10696,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1646558.4974205685,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.05099999998,\"onlineExpGained\":340899.12565185747,\"onlineMoneyMade\":1627320,\"onlineRunningTime\":20574.41000004127,\"pid\":829,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[0,1528,12988,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1796210.0105477294,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.056,\"onlineExpGained\":385883.4352906367,\"onlineMoneyMade\":0,\"onlineRunningTime\":20574.41000004127,\"pid\":830,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[1632020128,3056,9932,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1502903.1772948154,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.06199999998,\"onlineExpGained\":345767.897199086,\"onlineMoneyMade\":1632020128,\"onlineRunningTime\":20574.41000004127,\"pid\":831,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,118420,0,50424]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1261047.949630347,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.066,\"onlineExpGained\":284781,\"onlineMoneyMade\":0,\"onlineRunningTime\":20574.41000004127,\"pid\":832,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[17879188356,3820,9168,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1694340.5601127527,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.06900000002,\"onlineExpGained\":372079.59344529716,\"onlineMoneyMade\":17879188356,\"onlineRunningTime\":20574.41000004127,\"pid\":833,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[3883139904,2010,2814,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":869352.2806340371,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.07200000001,\"onlineExpGained\":207773.91275462206,\"onlineMoneyMade\":3883139904,\"onlineRunningTime\":20574.21000004127,\"pid\":834,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[995878620,804,6030,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1125221.2498142705,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.078,\"onlineExpGained\":241941.25237609877,\"onlineMoneyMade\":995878620,\"onlineRunningTime\":20574.21000004127,\"pid\":835,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[3975483726,1608,4422,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":876443.8031025969,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.08299999998,\"onlineExpGained\":192042.4455746812,\"onlineMoneyMade\":3975483726,\"onlineRunningTime\":20574.21000004127,\"pid\":836,\"ramUsage\":2.45,\"server\":\"pserv-21\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-21\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":982,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-22\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-22\",\"httpPortOpen\":false,\"ip\":\"14.8.2.2\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,7045308,7012386,6880698]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":491185835.02532315,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.086,\"onlineExpGained\":121805867.5375021,\"onlineMoneyMade\":0,\"onlineRunningTime\":20563.41000004122,\"pid\":837,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,24889032,24889032,18140022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":606883341.3766934,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.088,\"onlineExpGained\":163438314.0394612,\"onlineMoneyMade\":0,\"onlineRunningTime\":20563.41000004122,\"pid\":838,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,19786122,19786122,19621512]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1111399676.557809,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.09399999998,\"onlineExpGained\":274361913.66426367,\"onlineMoneyMade\":0,\"onlineRunningTime\":20563.41000004122,\"pid\":839,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,10995948,11028870,10831338]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":616369163.3358897,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.098,\"onlineExpGained\":152197054.14770737,\"onlineMoneyMade\":0,\"onlineRunningTime\":20563.41000004122,\"pid\":840,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,3818952,4082328,3917718]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":340702138.38744086,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.10100000002,\"onlineExpGained\":84361129.25925936,\"onlineMoneyMade\":0,\"onlineRunningTime\":20563.41000004122,\"pid\":841,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,2864214,2995902,2732526]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":203210645.34027395,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.105,\"onlineExpGained\":50245720.450309716,\"onlineMoneyMade\":0,\"onlineRunningTime\":20563.41000004122,\"pid\":842,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,2139930,2370384,2205774]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":157529419.18727764,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.109,\"onlineExpGained\":39876539.92425858,\"onlineMoneyMade\":0,\"onlineRunningTime\":20563.41000004122,\"pid\":843,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,1744866,1876554,1679022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174140767.61707282,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.115,\"onlineExpGained\":43845856.630255945,\"onlineMoneyMade\":0,\"onlineRunningTime\":20563.41000004122,\"pid\":844,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,1020582,1349802,1185192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":114363888.54639176,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.11599999998,\"onlineExpGained\":31034927.326765563,\"onlineMoneyMade\":0,\"onlineRunningTime\":20563.41000004122,\"pid\":845,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[500000000,1020582,1415646,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82769385.49929304,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.12,\"onlineExpGained\":23298652.540016275,\"onlineMoneyMade\":500000000,\"onlineRunningTime\":20563.41000004122,\"pid\":846,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[500000000,823050,921816,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":100824499.33957772,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.125,\"onlineExpGained\":24280922.48298805,\"onlineMoneyMade\":500000000,\"onlineRunningTime\":20563.41000004122,\"pid\":847,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1218114,0,1942398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":33663676.60055573,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.129,\"onlineExpGained\":7407450,\"onlineMoneyMade\":0,\"onlineRunningTime\":20563.41000004122,\"pid\":848,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[1526378309.9989426,27982,72424,60902]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9001006.577381544,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.134,\"onlineExpGained\":1885690.8963619277,\"onlineMoneyMade\":1526378309.9989426,\"onlineRunningTime\":20563.41000004122,\"pid\":849,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[3375007913.1818414,21398,82300,74070]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9199240.38059957,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.139,\"onlineExpGained\":2112828.5100000747,\"onlineMoneyMade\":3375007913.1818414,\"onlineRunningTime\":20563.41000004122,\"pid\":850,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[4197934140.5840087,72424,153078,139910]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13031142.770047527,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.139,\"onlineExpGained\":3030339.095941415,\"onlineMoneyMade\":4197934140.5840087,\"onlineRunningTime\":20563.41000004122,\"pid\":851,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[88088.75084120962,8230,36212,32920]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4968854.451133547,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.14599999998,\"onlineExpGained\":1195926.9410929563,\"onlineMoneyMade\":88088.75084120962,\"onlineRunningTime\":20563.41000004122,\"pid\":852,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,8230,29628,18106]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3705775.058046857,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.15099999998,\"onlineExpGained\":849035.3544352417,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":20563.41000004122,\"pid\":853,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,251838,0,177768]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3502418.01628733,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.15199999997,\"onlineExpGained\":777735,\"onlineMoneyMade\":0,\"onlineRunningTime\":20563.41000004122,\"pid\":854,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,8230,27982,21398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4603396.664139029,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.158,\"onlineExpGained\":1113221.3942200947,\"onlineMoneyMade\":0,\"onlineRunningTime\":20563.41000004122,\"pid\":855,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,0,8404,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1651252.3606862258,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.16199999998,\"onlineExpGained\":393484.5039211122,\"onlineMoneyMade\":0,\"onlineRunningTime\":20563.41000004122,\"pid\":856,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[0,1528,12224,6112]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1946481.6311759336,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.166,\"onlineExpGained\":428333.1382395675,\"onlineMoneyMade\":0,\"onlineRunningTime\":20563.41000004122,\"pid\":857,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[6123988575,3056,9168,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1700649.9341316754,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.171,\"onlineExpGained\":410854.2160581266,\"onlineMoneyMade\":6123988575,\"onlineRunningTime\":20563.41000004122,\"pid\":858,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[2216493880,6112,8404,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1900845.0005197718,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.175,\"onlineExpGained\":403593.2177257623,\"onlineMoneyMade\":2216493880,\"onlineRunningTime\":20563.41000004122,\"pid\":859,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[637627524,3056,10696,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1636061.0297562038,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.176,\"onlineExpGained\":363832.95327402884,\"onlineMoneyMade\":637627524,\"onlineRunningTime\":20563.41000004122,\"pid\":860,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[8716182624,4584,9168,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1678936.3047245045,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.183,\"onlineExpGained\":363230.9223101509,\"onlineMoneyMade\":8716182624,\"onlineRunningTime\":20563.41000004122,\"pid\":861,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,115364,0,51188]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1174527.1833746152,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.18999999997,\"onlineExpGained\":277905,\"onlineMoneyMade\":0,\"onlineRunningTime\":20563.41000004122,\"pid\":862,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[1719640996,3820,7640,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1496871.1209346715,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.191,\"onlineExpGained\":341705.7490824158,\"onlineMoneyMade\":1719640996,\"onlineRunningTime\":20563.41000004122,\"pid\":863,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[5252276328,2412,3216,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":970526.2259913285,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.19500000004,\"onlineExpGained\":218709.38184697056,\"onlineMoneyMade\":5252276328,\"onlineRunningTime\":20563.21000004122,\"pid\":864,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[5323479774,2412,5628,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1257767.6071796473,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.202,\"onlineExpGained\":272827.3697007071,\"onlineMoneyMade\":5323479774,\"onlineRunningTime\":20563.21000004122,\"pid\":865,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[8112239400,1608,5226,2814]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":934132.2793077074,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.20299999998,\"onlineExpGained\":226566.93017237674,\"onlineMoneyMade\":8112239400,\"onlineRunningTime\":20563.21000004122,\"pid\":866,\"ramUsage\":2.45,\"server\":\"pserv-22\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-22\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":1012,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-23\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-23\",\"httpPortOpen\":false,\"ip\":\"13.8.9.7\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,6979464,7012386,6880698]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":489940494.3945195,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.20799999998,\"onlineExpGained\":121677852.96310641,\"onlineMoneyMade\":0,\"onlineRunningTime\":20552.410000041174,\"pid\":867,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,24889032,24856110,18140022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":605823826.9364703,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.214,\"onlineExpGained\":163329063.82954177,\"onlineMoneyMade\":0,\"onlineRunningTime\":20552.410000041174,\"pid\":868,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,19819044,19720278,19654434]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1109423770.502856,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.21899999998,\"onlineExpGained\":274158305.56506944,\"onlineMoneyMade\":0,\"onlineRunningTime\":20552.410000041174,\"pid\":869,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,10995948,10995948,10831338]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":614386034.0299728,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.22199999998,\"onlineExpGained\":151993446.0485131,\"onlineMoneyMade\":0,\"onlineRunningTime\":20552.410000041174,\"pid\":870,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[68750000,3884796,4049406,3917718]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":340538617.9766441,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.22800000003,\"onlineExpGained\":84515354.35845362,\"onlineMoneyMade\":68750000,\"onlineRunningTime\":20552.410000041174,\"pid\":871,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[900000000,2864214,2995902,2732526]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":225131988.58381018,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.231,\"onlineExpGained\":52485975.50223434,\"onlineMoneyMade\":900000000,\"onlineRunningTime\":20552.410000041174,\"pid\":872,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[200000000,2139930,2370384,2172852]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":157461857.9451074,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.23799999998,\"onlineExpGained\":39940547.21145643,\"onlineMoneyMade\":200000000,\"onlineRunningTime\":20552.410000041174,\"pid\":873,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[875000000,1613178,1843632,1679022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":182083139.312806,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.24399999998,\"onlineExpGained\":45559995.05818776,\"onlineMoneyMade\":875000000,\"onlineRunningTime\":20552.410000041174,\"pid\":874,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,1053504,1349802,1185192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":113482959.95331308,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.249,\"onlineExpGained\":30944709.51476915,\"onlineMoneyMade\":0,\"onlineRunningTime\":20552.410000041174,\"pid\":875,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[250000000,987660,1415646,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":80891965.77845497,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.253,\"onlineExpGained\":23106630.678422734,\"onlineMoneyMade\":250000000,\"onlineRunningTime\":20552.410000041174,\"pid\":876,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,888894,921816,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":97793257.84409717,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.255,\"onlineExpGained\":23970953.259800967,\"onlineMoneyMade\":0,\"onlineRunningTime\":20552.410000041174,\"pid\":877,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1547334,0,2074086]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":36345536.67530909,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.262,\"onlineExpGained\":7901280,\"onlineMoneyMade\":0,\"onlineRunningTime\":20552.410000041174,\"pid\":878,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[21673.81985103753,23044,70778,54318]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8568382.491165895,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.266,\"onlineExpGained\":1721487.4756113105,\"onlineMoneyMade\":21673.81985103753,\"onlineRunningTime\":20552.410000041174,\"pid\":879,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[2250321687.0904565,26336,83946,79008]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10851700.733545307,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.26799999998,\"onlineExpGained\":2210979.467677341,\"onlineMoneyMade\":2250321687.0904565,\"onlineRunningTime\":20552.410000041174,\"pid\":880,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[2400055773.655979,52672,161308,133326]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":14322309.71432179,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.27399999998,\"onlineExpGained\":2995640.5566749102,\"onlineMoneyMade\":2400055773.655979,\"onlineRunningTime\":20552.410000041174,\"pid\":881,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[0,4938,41150,32920]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5678511.154724277,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.27800000002,\"onlineExpGained\":1222356.265757994,\"onlineMoneyMade\":0,\"onlineRunningTime\":20552.410000041174,\"pid\":882,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,6584,31274,21398]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4667101.501893467,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.28000000003,\"onlineExpGained\":916419.1127237529,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":20552.410000041174,\"pid\":883,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,258422,0,167892]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3255964.256978234,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.286,\"onlineExpGained\":746872.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20552.410000041174,\"pid\":884,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[0,3292,31274,24690]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5565704.768924419,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.289,\"onlineExpGained\":1254582.841105186,\"onlineMoneyMade\":0,\"onlineRunningTime\":20552.410000041174,\"pid\":885,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,1528,6876,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1556654.762430886,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.29200000002,\"onlineExpGained\":350945.6386323433,\"onlineMoneyMade\":0,\"onlineRunningTime\":20552.410000041174,\"pid\":886,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[25489589196,4584,12224,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2154178.8254205543,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.29799999998,\"onlineExpGained\":454033.1265339415,\"onlineMoneyMade\":25489589196,\"onlineRunningTime\":20552.410000041174,\"pid\":887,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[6123988575,3056,9168,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1832845.6974851936,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.30099999998,\"onlineExpGained\":406388.4093618426,\"onlineMoneyMade\":6123988575,\"onlineRunningTime\":20552.410000041174,\"pid\":888,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[2348023356,2292,10696,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1812605.2716836482,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.308,\"onlineExpGained\":384001.31395266694,\"onlineMoneyMade\":2348023356,\"onlineRunningTime\":20552.410000041174,\"pid\":889,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[155582488,2292,11460,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1618599.379105015,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.31200000003,\"onlineExpGained\":345457.5515935224,\"onlineMoneyMade\":155582488,\"onlineRunningTime\":20552.410000041174,\"pid\":890,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[5813044508,3820,9932,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1679911.3570588345,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.31999999998,\"onlineExpGained\":359738.3172879379,\"onlineMoneyMade\":5813044508,\"onlineRunningTime\":20552.410000041174,\"pid\":891,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,115364,0,45840]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1120158.8049814133,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.322,\"onlineExpGained\":261288,\"onlineMoneyMade\":0,\"onlineRunningTime\":20552.410000041174,\"pid\":892,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[15032337940,3820,6876,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1595681.0090837162,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.326,\"onlineExpGained\":322722.09635561483,\"onlineMoneyMade\":15032337940,\"onlineRunningTime\":20552.410000041174,\"pid\":893,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[1038351528,402,2814,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":750290.7626069179,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.332,\"onlineExpGained\":177701.37275066352,\"onlineMoneyMade\":1038351528,\"onlineRunningTime\":20552.210000041174,\"pid\":894,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[3339752484,1206,5628,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1136497.55188223,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.336,\"onlineExpGained\":231645.87993456266,\"onlineMoneyMade\":3339752484,\"onlineRunningTime\":20552.210000041174,\"pid\":895,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[6279240804,1206,5226,3618]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1051215.8054432052,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.342,\"onlineExpGained\":235198.0513218006,\"onlineMoneyMade\":6279240804,\"onlineRunningTime\":20552.210000041174,\"pid\":896,\"ramUsage\":2.45,\"server\":\"pserv-23\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-23\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":1042,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-24\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-24\",\"httpPortOpen\":false,\"ip\":\"6.6.7.1\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1014064.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,6979464,6979464,6880698]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":487442750.2332029,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.35,\"onlineExpGained\":121421823.81431502,\"onlineMoneyMade\":0,\"onlineRunningTime\":20541.410000041127,\"pid\":897,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,24889032,24889032,18107100]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":605833297.3822254,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.35499999998,\"onlineExpGained\":163329063.82954177,\"onlineMoneyMade\":0,\"onlineRunningTime\":20541.410000041127,\"pid\":898,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,19720278,19753200,19621512]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1107946005.8347251,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.358,\"onlineExpGained\":274005599.4906738,\"onlineMoneyMade\":0,\"onlineRunningTime\":20541.410000041127,\"pid\":899,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,10995948,10995948,10798416]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":612402961.0384892,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.36,\"onlineExpGained\":151789837.94931886,\"onlineMoneyMade\":0,\"onlineRunningTime\":20541.410000041127,\"pid\":900,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,3983562,4049406,3917718]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":337694247.6098683,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.369,\"onlineExpGained\":84052679.06087084,\"onlineMoneyMade\":0,\"onlineRunningTime\":20541.410000041127,\"pid\":901,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1575000000,2798370,2962980,2732526]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":218514037.1852725,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.373,\"onlineExpGained\":54086157.6821805,\"onlineMoneyMade\":1575000000,\"onlineRunningTime\":20541.410000041127,\"pid\":902,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[100000000,2107008,2337462,2205774]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":155029184.96109626,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.37599999996,\"onlineExpGained\":39812532.63706075,\"onlineMoneyMade\":100000000,\"onlineRunningTime\":20541.410000041127,\"pid\":903,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[250000000,1744866,1843632,1679022]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":176793980.9532007,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.381,\"onlineExpGained\":44116510.066245176,\"onlineMoneyMade\":250000000,\"onlineRunningTime\":20541.410000041127,\"pid\":904,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,1053504,1349802,1185192]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":112602024.88597709,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.386,\"onlineExpGained\":30854491.702772737,\"onlineMoneyMade\":0,\"onlineRunningTime\":20541.410000041127,\"pid\":905,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,921816,1415646,1251036]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":78388278.69524436,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.39,\"onlineExpGained\":22850601.529631346,\"onlineMoneyMade\":0,\"onlineRunningTime\":20541.410000041127,\"pid\":906,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[2500000000,790128,921816,757206]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":111947424.47047639,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.395,\"onlineExpGained\":25417476.30134068,\"onlineMoneyMade\":2500000000,\"onlineRunningTime\":20541.410000041127,\"pid\":907,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1777788,0,2107008]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34774661.360988535,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.39899999998,\"onlineExpGained\":8024737.5,\"onlineMoneyMade\":0,\"onlineRunningTime\":20541.410000041127,\"pid\":908,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":32922,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[4578973425,24690,77362,60902]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8361618.695035712,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.402,\"onlineExpGained\":1922769.0881443252,\"onlineMoneyMade\":4578973425,\"onlineRunningTime\":20541.410000041127,\"pid\":909,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[6750258162.992524,39504,85592,67486]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8980305.49702048,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.40899999999,\"onlineExpGained\":2185150.2682885863,\"onlineMoneyMade\":6750258162.992524,\"onlineRunningTime\":20541.410000041127,\"pid\":910,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[5400041830.241984,55964,162954,136618]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13607993.599889016,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.40999999997,\"onlineExpGained\":3103591.5677262577,\"onlineMoneyMade\":5400041830.241984,\"onlineRunningTime\":20541.410000041127,\"pid\":911,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{\"crush-fitness\":[4393083733.311178,13168,46088,39504]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6351066.792070419,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.41400000002,\"onlineExpGained\":1513078.8370734085,\"onlineMoneyMade\":4393083733.311178,\"onlineRunningTime\":20541.410000041127,\"pid\":912,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{\"the-hub\":[4306533600,16460,32920,26336]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4544083.959296088,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.41999999998,\"onlineExpGained\":1084878.5084450312,\"onlineMoneyMade\":4306533600,\"onlineRunningTime\":20541.410000041127,\"pid\":913,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\"],\"dataMap\":{\"avmnite-02h\":[0,286404,0,192582]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3323629.9086471326,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.426,\"onlineExpGained\":822177,\"onlineMoneyMade\":0,\"onlineRunningTime\":20541.410000041127,\"pid\":914,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{\"johnson-ortho\":[11963.683101271814,9876,31274,23044]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5256255.095006625,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.42899999997,\"onlineExpGained\":1272253.0219658224,\"onlineMoneyMade\":11963.683101271814,\"onlineRunningTime\":20541.410000041127,\"pid\":915,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":1646,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{\"netlink\":[0,764,9932,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1815254.9923359624,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.434,\"onlineExpGained\":451975.44369316945,\"onlineMoneyMade\":0,\"onlineRunningTime\":20541.210000041126,\"pid\":916,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"catalyst\":[764,2292,13752,7640]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2005371.2463473626,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.43699999998,\"onlineExpGained\":509716.4345050852,\"onlineMoneyMade\":764,\"onlineRunningTime\":20541.210000041126,\"pid\":917,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{\"comptek\":[1528,3056,12224,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1707319.701056428,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.442,\"onlineExpGained\":446580.66962839843,\"onlineMoneyMade\":1528,\"onlineRunningTime\":20541.210000041126,\"pid\":918,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{\"summit-uni\":[5172960724,2292,13752,4584]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1851941.329552531,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.446,\"onlineExpGained\":442777.0252719526,\"onlineMoneyMade\":5172960724,\"onlineRunningTime\":20541.210000041126,\"pid\":919,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{\"rothman-uni\":[122837448,3820,12224,6876]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1862825.0434516089,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.449,\"onlineExpGained\":426309.3189877509,\"onlineMoneyMade\":122837448,\"onlineRunningTime\":20541.210000041126,\"pid\":920,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{\"millenium-fitness\":[7645695620,3820,10696,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1421298.1500651382,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.45299999995,\"onlineExpGained\":384186.55244342884,\"onlineMoneyMade\":7645695620,\"onlineRunningTime\":20541.210000041126,\"pid\":921,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\"],\"dataMap\":{\"I.I.I.I\":[0,126824,0,48896]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1183872.1601213033,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.457,\"onlineExpGained\":280770,\"onlineMoneyMade\":0,\"onlineRunningTime\":20541.210000041126,\"pid\":922,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{\"rho-construction\":[19321034368,4584,9932,5348]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1781702.1187560782,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.461,\"onlineExpGained\":417640.35998961923,\"onlineMoneyMade\":19321034368,\"onlineRunningTime\":20541.210000041126,\"pid\":923,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":764,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{\"syscore\":[2594651514,1608,3216,2010]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":858075.6537265059,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.465,\"onlineExpGained\":210507.78002770912,\"onlineMoneyMade\":2594651514,\"onlineRunningTime\":20541.210000041126,\"pid\":924,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{\"aevum-police\":[3431433408,1608,5628,2412]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1115141.7977389796,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.47,\"onlineExpGained\":249662.78170725092,\"onlineMoneyMade\":3431433408,\"onlineRunningTime\":20541.210000041126,\"pid\":925,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{\"alpha-ent\":[7907848530,1206,4422,3216]},\"filename\":\"autoHack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":884188.4668233201,\"offlineMoneyMade\":0,\"offlineRunningTime\":141251.47100000002,\"onlineExpGained\":204989.127298817,\"onlineMoneyMade\":7907848530,\"onlineRunningTime\":20541.210000041126,\"pid\":926,\"ramUsage\":2.45,\"server\":\"pserv-24\",\"threads\":402,\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///81d41352-918e-4e14-aadc-cd151f0bb36f\"}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n/* \\nLast updated: 1/2/2022 2:15\\n*/\\nexport async function main(ns) {\\n\\tlet moneyThresh = 1000000;\\n\\tlet vers = \\\"v1\\\";\\n\\tlet host = ns.getHostname();\\n\\tlet target = host;\\n\\tif (ns.args.length > 0) {\\n\\t\\ttarget = ns.args[0];\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target);\\n\\n\\tlet myMoney = ns.getServerMoneyAvailable(\\\"home\\\");\\n\\tlet serverThresh = ns.getServerMaxMoney(target) * 0.75;\\n\\tif(myMoney < moneyThresh)\\n\\t{\\n\\t\\tmoneyThresh = myMoney;\\n\\t}\\n\\telse if(myMoney > serverThresh)\\n\\t{\\n\\t\\tmoneyThresh = serverThresh;\\n\\t}\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": moneyTresh: \\\" + moneyThresh);\\n\\tlet securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": securityThresh: \\\" + securityThresh);\\n\\n\\twhile (true) {\\n\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": target: \\\" + target + \\\"; $\\\" + ns.getServerMoneyAvailable(target) + \\\" ; security: \\\" + ns.getServerMinSecurityLevel(target));\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": security level (\\\" + ns.getServerSecurityLevel(target) + \\\") > securityThresh(\\\" + securityThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": running weaken\\\");\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": money available (\\\" + ns.getServerMoneyAvailable(target) + \\\") < moneyThresh(\\\" + moneyThresh + \\\")\\\");\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": grow \\\" + target);\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tns.print(vers + \\\"|\\\" + host + \\\"|\\\" + Date.now() + \\\": hacking \\\" + target + \\\"($\\\" + ns.getServerMoneyAvailable(target) + \\\")\\\");\\n\\t\\t\\tawait ns.hack(target);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"autoHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"autoHack.js\",\"url\":\"blob:file:///df36851f-372f-4bd1-8017-eff05dba7bbf\"}],\"ramUsage\":2.45,\"server\":\"pserv-24\",\"_hash\":\"0889556076a814741e462054f5704eafdc155392abc16746754e0af1ac828304\",\"moduleSequenceNumber\":1072,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":10333.287058044763,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":9190.125637625206,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0,\"isMegacorp\":false}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"The Red Pill\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Daedalus\",\"playerReputation\":0}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"SmartJaw\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bachman & Associates\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"NeuroFlux Governor\",\"OmniTek InfoLoad\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"OmniTek Incorporated\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"BitRunners\",\"playerReputation\":0}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"NeuroFlux Governor\",\"The Black Hand\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"The Black Hand\",\"playerReputation\":293868.4752791219}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NiteSec\",\"playerReputation\":0}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"Aevum\",\"playerReputation\":303426.21208147233}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"Neuregen Gene Modification\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Chongqing\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"INFRARET Enhancement\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"NutriGen Implant\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"CashRoot Starter Kit\"],\"favor\":69.3685,\"isBanned\":false,\"isMember\":true,\"name\":\"Sector-12\",\"playerReputation\":409497.4780068158}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"DermaForce Particle Barrier\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Graphene BrachiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Syndicate\",\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tetrads\",\"playerReputation\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Slum Snakes\",\"playerReputation\":0}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\",\"NeuroFlux Governor\"],\"favor\":63.3701,\"isBanned\":false,\"isMember\":true,\"name\":\"Netburners\",\"playerReputation\":105806.52754461912}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tian Di Hui\",\"playerReputation\":0}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"NeuroFlux Governor\",\"Neurotrainer I\"],\"favor\":2,\"isBanned\":false,\"isMember\":true,\"name\":\"CyberSec\",\"playerReputation\":228614.16744788684}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}}}","AliasesSave":"{}","GlobalAliasesSave":"{}","MessagesSave":"{\"j0.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j0.msg\",\"msg\":\"I know you can sense it. I know you're searching for it. It's why you spend night after night at your computer. <br><br>It's real, I've seen it. And I can help you find it. But not right now. You're not ready yet.<br><br>Use this program to track your progress<br><br>The fl1ght.exe program was added to your home computer<br><br>-jump3R\",\"recvd\":true}},\"j1.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j1.msg\",\"msg\":\"Soon you will be contacted by a hacking group known as CyberSec. They can help you with your search. <br><br>You should join them, garner their favor, and exploit them for their Augmentations. But do not trust them. They are not what they seem. No one is.<br><br>-jump3R\",\"recvd\":true}},\"j2.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j2.msg\",\"msg\":\"Do not try to save the world. There is no world to save. If you want to find the truth, worry only about yourself. Ethics and morals will get you killed. <br><br>Watch out for a hacking group known as NiteSec.<br><br>-jump3R\",\"recvd\":true}},\"j3.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j3.msg\",\"msg\":\"You must learn to walk before you can run. And you must run before you can fly. Look for the black hand. <br><br>I.I.I.I <br><br>-jump3R\",\"recvd\":true}},\"j4.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j4.msg\",\"msg\":\"To find what you are searching for, you must understand the bits. The bits are all around us. The runners will help you.<br><br>-jump3R\",\"recvd\":true}},\"csec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"csec-test.msg\",\"msg\":\"We've been watching you. Your skills are very impressive. But you're wasting your talents. If you join us, you can put your skills to good use and change the world for the better. If you join us, we can unlock your full potential. <br><br>But first, you must pass our test. Find and install the backdoor on our server. <br><br>-CyberSec\",\"recvd\":true}},\"nitesec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"nitesec-test.msg\",\"msg\":\"People say that the corrupted governments and corporations rule the world. Yes, maybe they do. But do you know who everyone really fears? People like us. Because they can't hide from us. Because they can't fight shadows and ideas with bullets. <br><br>Join us, and people will fear you, too. <br><br>Find and install the backdoor on our server. Then, we will contact you again.<br><br>-NiteSec\",\"recvd\":true}},\"19dfj3l1nd.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"19dfj3l1nd.msg\",\"msg\":\"We know what you are doing. We know what drives you. We know what you are looking for. <br><br> We can help you find the answers.<br><br>run4theh111z\",\"recvd\":true}},\"icarus.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"icarus.msg\",\"msg\":\"@)(#V%*N)@(#*)*C)@#%*)*V)@#(*%V@)(#VN%*)@#(*%<br>)@B(*#%)@)M#B*%V)____FIND___#$@)#%(B*)@#(*%B)<br>@_#(%_@#M(BDSPOMB__THE-CAVE_#)$(*@#$)@#BNBEGB<br>DFLSMFVMV)#@($*)@#*$MV)@#(*$V)M#(*$)M@(#*VM$)\",\"recvd\":false}}}","StockMarketSave":"{\"ECorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"ECorp\",\"symbol\":\"ECP\",\"price\":14135.219046994218,\"lastPrice\":14160.010079383073,\"playerShares\":10440000,\"playerAvgPx\":10325.075517624822,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.45,\"b\":true,\"otlkMag\":15.601994294043987,\"otlkMagForecast\":69.04023581806749,\"cap\":100875914,\"spreadPerc\":0.1,\"shareTxForMovement\":74995,\"shareTxUntilMovement\":56605,\"totalShares\":116100000,\"maxShares\":23200000}},\"MegaCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"MegaCorp\",\"symbol\":\"MGCP\",\"price\":58517.691264618385,\"lastPrice\":58415.23978532358,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.45,\"b\":false,\"otlkMag\":14.353984881921184,\"otlkMagForecast\":31.63461800051633,\"cap\":635732958,\"spreadPerc\":0.3,\"shareTxForMovement\":58078,\"shareTxUntilMovement\":29126,\"totalShares\":76000000,\"maxShares\":15200000}},\"Blade Industries\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Blade Industries\",\"symbol\":\"BLD\",\"price\":5861.883654338469,\"lastPrice\":5877.87609656316,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":false,\"otlkMag\":9.637156572562393,\"otlkMagForecast\":38.37751077065848,\"cap\":56841880,\"spreadPerc\":0.2,\"shareTxForMovement\":53620,\"shareTxUntilMovement\":53620,\"totalShares\":71500000,\"maxShares\":14300000}},\"Clarke Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Clarke Incorporated\",\"symbol\":\"CLRK\",\"price\":24917.980898818383,\"lastPrice\":24849.21855988853,\"playerShares\":6840000,\"playerAvgPx\":24245.101794541348,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.71,\"b\":true,\"otlkMag\":9.839836168419858,\"otlkMagForecast\":63.57562419864013,\"cap\":259108974,\"spreadPerc\":0.3,\"shareTxForMovement\":63264,\"shareTxUntilMovement\":5212,\"totalShares\":76200000,\"maxShares\":15200000}},\"OmniTek Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"OmniTek Incorporated\",\"symbol\":\"OMTK\",\"price\":58407.926022458254,\"lastPrice\":58262.59799582733,\"playerShares\":4455000,\"playerAvgPx\":57957.2368929636,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.64,\"b\":true,\"otlkMag\":9.248410075453712,\"otlkMagForecast\":63.13348936600454,\"cap\":788834157,\"spreadPerc\":0.4,\"shareTxForMovement\":36159,\"shareTxUntilMovement\":2741,\"totalShares\":49400000,\"maxShares\":9900000}},\"Four Sigma\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Four Sigma\",\"symbol\":\"FSIG\",\"price\":15502.421468724082,\"lastPrice\":15438.640007900676,\"playerShares\":3150000,\"playerAvgPx\":13194.44257495275,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.06,\"b\":true,\"otlkMag\":18.826071115781872,\"otlkMagForecast\":69.12750288636154,\"cap\":646376166,\"spreadPerc\":0.6,\"shareTxForMovement\":63988,\"shareTxUntilMovement\":53134,\"totalShares\":35000000,\"maxShares\":7000000}},\"KuaiGong International\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"KuaiGong International\",\"symbol\":\"KGI\",\"price\":18558.687396882375,\"lastPrice\":18620.16907859887,\"playerShares\":8640000,\"playerAvgPx\":17259.047979930176,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.85,\"b\":true,\"otlkMag\":7.509920126928135,\"otlkMagForecast\":60.44738224771787,\"cap\":368430248,\"spreadPerc\":0.6,\"shareTxForMovement\":41416,\"shareTxUntilMovement\":30164,\"totalShares\":95900000,\"maxShares\":19200000}},\"Fulcrum Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Fulcrum Technologies\",\"symbol\":\"FLCM\",\"price\":72901.11890836027,\"lastPrice\":72547.68101996667,\"playerShares\":6075000,\"playerAvgPx\":55241.05483722219,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.25,\"b\":true,\"otlkMag\":10.900317801108896,\"otlkMagForecast\":62.09769769087257,\"cap\":379452666,\"spreadPerc\":1,\"shareTxForMovement\":50091,\"shareTxUntilMovement\":37842,\"totalShares\":67700000,\"maxShares\":13500000}},\"Storm Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Storm Technologies\",\"symbol\":\"STM\",\"price\":21542.29862188191,\"lastPrice\":21467.832666779083,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.89,\"b\":false,\"otlkMag\":9.953290232072083,\"otlkMagForecast\":37.74395565879821,\"cap\":566423920,\"spreadPerc\":1,\"shareTxForMovement\":105376,\"shareTxUntilMovement\":9062,\"totalShares\":48100000,\"maxShares\":9600000}},\"DefComm\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"DefComm\",\"symbol\":\"DCOMM\",\"price\":9169.765994476435,\"lastPrice\":9146.239022328034,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.66,\"b\":true,\"otlkMag\":8.247787685451206,\"otlkMagForecast\":60.79917200302494,\"cap\":79770412,\"spreadPerc\":0.4,\"shareTxForMovement\":83075,\"shareTxUntilMovement\":27994,\"totalShares\":57400000,\"maxShares\":11500000}},\"Helios Labs\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Helios Labs\",\"symbol\":\"HLS\",\"price\":21548.82026902432,\"lastPrice\":21499.3826487888,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.59,\"b\":true,\"otlkMag\":7.824302743945365,\"otlkMagForecast\":58.91415928017507,\"cap\":209630271,\"spreadPerc\":0.2,\"shareTxForMovement\":91104,\"shareTxUntilMovement\":56700,\"totalShares\":60400000,\"maxShares\":12100000}},\"VitaLife\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"VitaLife\",\"symbol\":\"VITA\",\"price\":8914.360086298813,\"lastPrice\":8942.154640708146,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.8,\"b\":true,\"otlkMag\":7.197743287544593,\"otlkMagForecast\":55.140684437536386,\"cap\":133477999,\"spreadPerc\":0.5,\"shareTxForMovement\":105168,\"shareTxUntilMovement\":105168,\"totalShares\":116200000,\"maxShares\":23200000}},\"Icarus Microsystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Icarus Microsystems\",\"symbol\":\"ICRS\",\"price\":41577.38534814228,\"lastPrice\":41689.19668019076,\"playerShares\":1951101,\"playerAvgPx\":45487.49739344721,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.69,\"b\":true,\"otlkMag\":8.70215475614079,\"otlkMagForecast\":57.8571656649722,\"cap\":504161011,\"spreadPerc\":0.9,\"shareTxForMovement\":106892,\"shareTxUntilMovement\":76945,\"totalShares\":39200000,\"maxShares\":7800000}},\"Universal Energy\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Universal Energy\",\"symbol\":\"UNV\",\"price\":34962.810949114566,\"lastPrice\":35036.394316370206,\"playerShares\":3060000,\"playerAvgPx\":24491.79260659981,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.54,\"b\":true,\"otlkMag\":8.924158840557347,\"otlkMagForecast\":59.709772919946964,\"cap\":59548278,\"spreadPerc\":1,\"shareTxForMovement\":40301,\"shareTxUntilMovement\":40301,\"totalShares\":34200000,\"maxShares\":6800000}},\"AeroCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"AeroCorp\",\"symbol\":\"AERO\",\"price\":8696.658660464836,\"lastPrice\":8676.031923407882,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.61,\"b\":true,\"otlkMag\":6.270860112639464,\"otlkMagForecast\":55.3307901308195,\"cap\":20808594,\"spreadPerc\":0.8,\"shareTxForMovement\":84441,\"shareTxUntilMovement\":84441,\"totalShares\":75700000,\"maxShares\":15100000}},\"Omnia Cybersystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omnia Cybersystems\",\"symbol\":\"OMN\",\"price\":9126.933995832527,\"lastPrice\":9151.478460065851,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.69,\"b\":true,\"otlkMag\":5.303041452041883,\"otlkMagForecast\":54.85527957131554,\"cap\":105106989,\"spreadPerc\":0.9,\"shareTxForMovement\":73289,\"shareTxUntilMovement\":73289,\"totalShares\":92300000,\"maxShares\":18500000}},\"Solaris Space Systems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Solaris Space Systems\",\"symbol\":\"SLRS\",\"price\":22841.313900828132,\"lastPrice\":22906.300453307973,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":true,\"otlkMag\":6.6252138629423545,\"otlkMagForecast\":57.90021937440145,\"cap\":328095510,\"spreadPerc\":0.5,\"shareTxForMovement\":55003,\"shareTxUntilMovement\":55003,\"totalShares\":47600000,\"maxShares\":9500000}},\"Global Pharmaceuticals\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"symbol\":\"GPH\",\"price\":11873.95788223716,\"lastPrice\":11846.716473512877,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.59,\"b\":true,\"otlkMag\":9.447697388772943,\"otlkMagForecast\":58.59106071872409,\"cap\":137431432,\"spreadPerc\":0.9,\"shareTxForMovement\":97525,\"shareTxUntilMovement\":70795,\"totalShares\":44200000,\"maxShares\":8800000}},\"Nova Medical\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Nova Medical\",\"symbol\":\"NVMD\",\"price\":18151.931489564955,\"lastPrice\":18204.283591044667,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.74,\"b\":false,\"otlkMag\":5.851727248235763,\"otlkMagForecast\":45.91089517594673,\"cap\":205948971,\"spreadPerc\":0.7,\"shareTxForMovement\":53495,\"shareTxUntilMovement\":53495,\"totalShares\":34000000,\"maxShares\":6800000}},\"Watchdog Security\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Watchdog Security\",\"symbol\":\"WDS\",\"price\":610.401434160111,\"lastPrice\":616.2299930088645,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.45,\"b\":false,\"otlkMag\":5.7535444926228,\"otlkMagForecast\":49.8682778344488,\"cap\":78710291,\"spreadPerc\":1.1,\"shareTxForMovement\":37576,\"shareTxUntilMovement\":37576,\"totalShares\":93900000,\"maxShares\":18800000}},\"LexoCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"LexoCorp\",\"symbol\":\"LXO\",\"price\":19213.557479241023,\"lastPrice\":19301.171417369067,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.17,\"b\":true,\"otlkMag\":7.60966202711663,\"otlkMagForecast\":56.37080098705478,\"cap\":64693126,\"spreadPerc\":0.6,\"shareTxForMovement\":48619,\"shareTxUntilMovement\":48619,\"totalShares\":41100000,\"maxShares\":8200000}},\"Rho Construction\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Rho Construction\",\"symbol\":\"RHOC\",\"price\":4463.343613820896,\"lastPrice\":4474.128897389623,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.62,\"b\":false,\"otlkMag\":1.9678634338475898,\"otlkMagForecast\":51.34923341938019,\"cap\":21565578,\"spreadPerc\":0.4,\"shareTxForMovement\":83766,\"shareTxUntilMovement\":83766,\"totalShares\":29400000,\"maxShares\":5900000}},\"Alpha Enterprises\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Alpha Enterprises\",\"symbol\":\"APHE\",\"price\":6800.714701058549,\"lastPrice\":6853.460416619242,\"playerShares\":4410000,\"playerAvgPx\":5555.892060512762,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.99,\"b\":true,\"otlkMag\":14.687108636041334,\"otlkMagForecast\":69.34141220957541,\"cap\":24409420,\"spreadPerc\":0.9,\"shareTxForMovement\":34332,\"shareTxUntilMovement\":16096,\"totalShares\":49100000,\"maxShares\":9800000}},\"SysCore Securities\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"SysCore Securities\",\"symbol\":\"SYSC\",\"price\":1362.499039568533,\"lastPrice\":1371.3671732661046,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.67,\"b\":false,\"otlkMag\":5.996061987920316,\"otlkMagForecast\":46.74973086665157,\"cap\":74359644,\"spreadPerc\":0.7,\"shareTxForMovement\":45010,\"shareTxUntilMovement\":45010,\"totalShares\":43700000,\"maxShares\":8700000}},\"CompuTek\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"CompuTek\",\"symbol\":\"CTK\",\"price\":3510.113125319316,\"lastPrice\":3522.1519292525336,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.88,\"b\":true,\"otlkMag\":7.500173596331678,\"otlkMagForecast\":59.242333326703275,\"cap\":14659369,\"spreadPerc\":0.7,\"shareTxForMovement\":69946,\"shareTxUntilMovement\":69946,\"totalShares\":31300000,\"maxShares\":6300000}},\"NetLink Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"NetLink Technologies\",\"symbol\":\"NTLK\",\"price\":3280.46655483812,\"lastPrice\":3250.5679578642767,\"playerShares\":3195000,\"playerAvgPx\":1708.7953337707586,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.36,\"b\":true,\"otlkMag\":9.861091419606112,\"otlkMagForecast\":59.225784305667226,\"cap\":27041780,\"spreadPerc\":1.6,\"shareTxForMovement\":51169,\"shareTxUntilMovement\":23083,\"totalShares\":35300000,\"maxShares\":7100000}},\"Omega Software\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omega Software\",\"symbol\":\"OMGA\",\"price\":1643.3429780173776,\"lastPrice\":1649.939955385175,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.03,\"b\":true,\"otlkMag\":1.9200611471230913,\"otlkMagForecast\":49.75009456246685,\"cap\":58064666,\"spreadPerc\":1.2,\"shareTxForMovement\":74898,\"shareTxUntilMovement\":74898,\"totalShares\":13000000,\"maxShares\":2600000}},\"FoodNStuff\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"FoodNStuff\",\"symbol\":\"FNS\",\"price\":1108.2900450975912,\"lastPrice\":1111.7024462476236,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.79,\"b\":true,\"otlkMag\":2.3061547413175356,\"otlkMagForecast\":49.96122512920587,\"cap\":13211236,\"spreadPerc\":0.6,\"shareTxForMovement\":102333,\"shareTxUntilMovement\":102333,\"totalShares\":33900000,\"maxShares\":6800000}},\"Sigma Cosmetics\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Sigma Cosmetics\",\"symbol\":\"SGC\",\"price\":3799.4320065555276,\"lastPrice\":3768.733217987539,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.09,\"b\":true,\"otlkMag\":6.777895071993887,\"otlkMagForecast\":55.10768105877758,\"cap\":36089031,\"spreadPerc\":0.6,\"shareTxForMovement\":64331,\"shareTxUntilMovement\":64331,\"totalShares\":17900000,\"maxShares\":3600000}},\"Joe's Guns\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Joe's Guns\",\"symbol\":\"JGN\",\"price\":1884.1140297392967,\"lastPrice\":1862.6259837806213,\"playerShares\":10170000,\"playerAvgPx\":2555.5023236433,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.96,\"b\":false,\"otlkMag\":5.828742475856979,\"otlkMagForecast\":41.92967953465236,\"cap\":3795944,\"spreadPerc\":1.2,\"shareTxForMovement\":24328,\"shareTxUntilMovement\":24328,\"totalShares\":113200000,\"maxShares\":22600000}},\"Catalyst Ventures\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Catalyst Ventures\",\"symbol\":\"CTYS\",\"price\":334.4394721264627,\"lastPrice\":336.35555557798733,\"playerShares\":9090000,\"playerAvgPx\":248.20601282579335,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.47,\"b\":true,\"otlkMag\":9.432347446981925,\"otlkMagForecast\":64.29265662019618,\"cap\":13144103,\"spreadPerc\":0.7,\"shareTxForMovement\":69023,\"shareTxUntilMovement\":21186,\"totalShares\":101200000,\"maxShares\":20200000}},\"Microdyne Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Microdyne Technologies\",\"symbol\":\"MDYN\",\"price\":40141.16791699709,\"lastPrice\":40250.68140218356,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":true,\"otlkMag\":5.912918595258532,\"otlkMagForecast\":58.179944525841265,\"cap\":375095736,\"spreadPerc\":0.7,\"shareTxForMovement\":189122,\"shareTxUntilMovement\":189122,\"totalShares\":16100000,\"maxShares\":3200000}},\"Titan Laboratories\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Titan Laboratories\",\"symbol\":\"TITN\",\"price\":26278.955609302095,\"lastPrice\":26330.165949586768,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.5,\"b\":true,\"otlkMag\":9.40314709158046,\"otlkMagForecast\":60.72725528155118,\"cap\":155887823,\"spreadPerc\":0.6,\"shareTxForMovement\":131539,\"shareTxUntilMovement\":90425,\"totalShares\":34300000,\"maxShares\":6900000}},\"Orders\":{\"ECP\":[],\"MGCP\":[],\"BLD\":[],\"CLRK\":[],\"OMTK\":[],\"FSIG\":[],\"KGI\":[],\"FLCM\":[],\"STM\":[],\"DCOMM\":[],\"HLS\":[],\"VITA\":[],\"ICRS\":[],\"UNV\":[],\"AERO\":[],\"OMN\":[],\"SLRS\":[],\"GPH\":[],\"NVMD\":[],\"WDS\":[],\"LXO\":[],\"RHOC\":[],\"APHE\":[],\"SYSC\":[],\"CTK\":[],\"NTLK\":[],\"OMGA\":[],\"FNS\":[],\"SGC\":[],\"JGN\":[],\"CTYS\":[],\"MDYN\":[],\"TITN\":[]},\"storedCycles\":668109,\"lastUpdate\":1641536763659,\"ticksUntilCycle\":2}","SettingsSave":"{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":100,\"AutosaveInterval\":60,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"EnableBashHotkeys\":false,\"TimestampsFormat\":\"MM/dd hh:mm:ss\",\"Locale\":\"en\",\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":1,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":false,\"SuppressMessages\":false,\"SuppressTravelConfirmation\":false,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":false,\"UseIEC60027_2\":false,\"MonacoTheme\":\"vs-dark\",\"MonacoInsertSpaces\":false,\"MonacoFontSize\":20,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"theme\":{\"primarylight\":\"#0f0\",\"primary\":\"#0c0\",\"primarydark\":\"#090\",\"successlight\":\"#0f0\",\"success\":\"#0c0\",\"successdark\":\"#090\",\"errorlight\":\"#f00\",\"error\":\"#c00\",\"errordark\":\"#900\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#ff0\",\"warning\":\"#cc0\",\"warningdark\":\"#990\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#000\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#000\",\"backgroundsecondary\":\"#000\",\"button\":\"#333\"}}","VersionSave":"9","AllGangsSave":"","LastExportBonus":"1641458367009","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"storedCycles\":0,\"fragments\":[]}}"}}